{
  "slug": "convert-miles-to-kilometers",
  "title": "Convert Miles To Kilometers",
  "c": "#include <stdio.h>\n\nint convertMiles(float miles){\n    float output = miles * 1.609;\n    printf(\"Output  : %.5lf\", output);\n}\n\nint main() {\n    printf(\" C program to convert miles to kilometers \\n1 mile = 1.609 kilometers \\n\");\n    float input = 5.0;\n    printf(\"Input  : %.2f \\n\", input);\n    convertMiles(input);\n    return 0;\n}",
  "c-plus-plus": "/*\nAuthor -> Abhinav Prabhat\nDate   -> 11-02-2023\n*/\n\n#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n\n    float miles;\n    cout << \"\\n\\nEnter the distance in miles -> \";\n    cin >> miles;\n\n    cout << \"Distance in kilometers -> \" << miles * 1.609 << endl\n         << endl;\n\n    return 0;\n}",
  "c-sharp": "using System;\n\nclass MainClass {\n    public static void Main (string[] args) {\n    Console.WriteLine (\"Please enter the miles : \");\n    double miles = Convert.ToDouble(Console.ReadLine());\n    double km = miles * 1.60;\n    Console.WriteLine(miles+\" miles is \"+km+\" kilometres\");\n  }\n}\n",
  "f-sharp": "let milesToKilometer miles : float =\n  miles * 1.609\n\nlet km = milesToKilometer 5.0\n\nprintfn \"Equivalent Kilometer : %f\" km\n",
  "java": "import java.util.Scanner;\n\npublic class ConvertMilesToKilometers{\n    public static void main(String[] args) {\n        try (Scanner sc = new Scanner(System.in)) {\n            System.out.print(\"Enter distance (Miles):\");\n            int mile = sc.nextInt();\n\n            double km = mile*(1.609);\n\n            System.out.println(\"Distance in mile:\" +km);\n        }\n    }\n}",
  "javascript": "function milestoKilometers(miles) {\n  const kilometers = miles * 1.609;\n  return kilometers;\n}\nconsole.log(milestoKilometers(5));\n",
  "kotlin": "fun main() {\n    print(\"Enter Miles : \")\n    println()\n    var input = readLine()\n\n    println(\"$input miles = \" + ConvertMilesToKilometers(input!!.toDouble()) + \" kilometers\")\n\n}\n\nprivate fun ConvertMilesToKilometers(miles: Double): Double {\n    var kilometers = miles * 1.609\n\n    return kilometers\n}\n",
  "ruby": "print \"Insert the number of miles: \"\n\nmiles = gets.chomp.to_i\nkilometers = miles * 1.609\n\nputs \"Output: #{kilometers} km\"\n",
  "swift": "import Swift\nimport Foundation\n\nprint(\"Enter miles: \")\nvar miles = Double(readLine()!)!\nprint(\"Kilometers: \", miles * 1.609)\n",
  "typescript": "const ConvertMilesToKilometers = (mile: number): number => {\n  return mile * 1.60934;\n};\n\nconsole.log(\"Input: 5\");\nconsole.log(\"OutPut:\", ConvertMilesToKilometers(5));\n",
  "description": "\n## Write a program to convert miles to kilometers\n\n1 mile = 1.609344 kilometers\n\n```txt\nInput  : 5\nOutput : 8.04672\n```\n\n---\n",
  "trackId": 1102,
  "lastUpdated": "2023-08-03T20:39:16Z",
  "contributors": [
    "harshraj8843",
    "anandfresh",
    "esivakumar26",
    "sagi403",
    "ShivamK2002",
    "rafaover",
    "rksp25",
    "joao-vitor-souza",
    "ynbh",
    "sumeetk10",
    "rahmat-dev",
    "EniolaAdemola",
    "jaypavasiya",
    "mak650650"
  ],
  "julia": "print(\"Enter the miles: \")\nmiles = parse(Float64, readline(stdin))\nkm =  miles * 1.609\nprintln(\"Equivalent Kilometers: \", km)\n",
  "scala": "object HelloWorld {\n\tdef main(args: Array[String]): Unit = {\n\t  val miles = scala.io.StdIn.readDouble();\n\t  println(\"kilometers: \" + miles * 1.60934);\n\t}\n}\n",
  "dart": "import 'dart:io';\nvoid main(){\n  print(\"Enter the miles :\");\n  double miles = double.parse(stdin.readLineSync()!);\n  double km = miles * 1.609 ;\n  print('Equivalent kilometer : $km');\n}\n",
  "go": "package main\n \nimport  \"fmt\"\n \nfunc miles2kilometers(miles float64) float64 {\n   return miles * 1.609344\n}\n\nfunc main() {\n   fmt.Println( miles2kilometers(5))\n}\n",
  "php": "<?php\n\nfunction convert_miles_to_kilometers($miles)\n{\n\treturn $miles * 1.60934;\n}\n\necho convert_miles_to_kilometers(5);\n",
  "perl": "#!/usr/bin/perl\nuse warnings;\nuse strict;\nprint \"Enter the miles : \";\nmy $miles = <STDIN>;\nmy $km = $miles * 1.609;\nprint $miles.\" miles is \".$km.\" kilometers\", \"\\n\";\n",
  "python": "# asking for input\ndistancemiles = input(f\"Enter the distance(in miles):\")\ntotaldistance = 0.0\ndistancekilometer = 0.0\n\n# checking for only digit in input\nif distancemiles.isdigit():\n    # converting string type to floating type\n    distancemiles = float(distancemiles)\n    # calculating on basis of formula\n    distancekilometer = distancemiles * 1.609\n    # printing the output\n    print(f\"Distance in kilometer is: {distancekilometer} km\")\n\n# user type input other than digit\nelse:\n    print(f\"Please enter valid input.\")\n",
  "r": "miles = 5\nkilometers = miles * 1.609344\ncat(\"kilometers: \", kilometers)\n",
  "rust": "fn convert_miles_to_km(miles: f32) -> f32 {\n    return miles*1.609;\n}\n\nfn main() {\n    let kilometers = convert_miles_to_km(5 as f32);\n    println!(\"{}\", kilometers);\n}",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "scala",
    "dart",
    "go",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}