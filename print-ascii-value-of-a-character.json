{
  "slug": "print-ascii-value-of-a-character",
  "title": "Print Ascii Value Of A Character",
  "c": "#include <stdio.h>\n#include <setjmp.h> // For Exception Handling in C\n\njmp_buf savebuff;\n\n#define TRY if (setjmp(savebuff) == 0)\n#define CATCH else\n\n// Declaring a function with exception handling\nint printAscii(char c);\n\n// Main function\nint main()\n{\n    char ch;                         // Declaring Variable\n    printf(\"Enter a character: \\n\"); // Input prompt\n    scanf(\"%c\", &ch);                // Reading input\n\n    TRY\n    {\n        printf(\"The ASCII value of given character is %d\", printAscii(ch));\n    }\n    CATCH\n    {\n        printf(\"ERROR!!! invalid input.\\n\");\n    }\n\n    return 0;\n}\n\nint printAscii(char c)\n{\n    int ascii = (int)c;\n    if (ascii < 0 || ascii > 127)\n    {\n        longjmp(savebuff, 1);\n    }\n\n    return ascii;\n}",
  "c-plus-plus": "#include <iostream>\n\nint main() {\n  std::string s;\n\n  std:: cout << \"Enter the single character: \";\n\n  std::getline(std::cin, s);\n\n  if(s.length() > 1) {\n    std::cout << \"Error: enter a single character only\" << std::endl;\n    return 1;\n  }\n\n  std:: cout << (int) s[0] << std:: endl;\n\n  return 0;\n}",
  "c-sharp": "using System;\n  \npublic class AsciiValue \n{\n    public static void Main()\n    {\n        char c = 'A';\n        int ascii = c;\n        Console.Write(\"The ASCII value of \" + c + \" is: \" + ascii);\n    }\n}\n",
  "javascript": "function asciiValueOfCharacter(str) {\n  let asciiValue = str.charCodeAt(0);\n  console.log(asciiValue);\n}\n\nasciiValueOfCharacter(\"A\");\n",
  "kotlin": "fun main() {\n    print(ascii('Z'))\n}\nfun ascii(first: Char) = first.code\n",
  "ruby": "def printAsciiValueOfACharacter str\n    puts str.ord\nend\n\nprintAsciiValueOfACharacter \"A\"",
  "swift": "import Foundation\n\n/**\n This Swift program prints the ASCII value of a given character.\n \n - Parameters:\n   - character: The input character for which the ASCII value is to be printed.\nSample Input:\nEnter a character:\nA\n\nSample Output:\nASCII value of 'A': 65\n */\nfunc printAsciiValue(of character: Character) {\n    let asciiValue = character.asciiValue\n    print(\"ASCII value of '\\(character)': \\(asciiValue ?? 0)\")\n}\n\n// Main program\nprint(\"Enter a character:\")\nif let userInput = readLine(), let inputCharacter = userInput.first {\n    printAsciiValue(of: inputCharacter)\n} else {\n    print(\"Invalid input. Please enter a valid character.\")\n}\n",
  "typescript": "function asciiValueOfCharacter(str: string) {\n  const asciiValue = str.charCodeAt(0);\n  console.log(asciiValue);\n}\n\nasciiValueOfCharacter(\"A\");\n",
  "description": "\n## Write a program to print ascii value of a character\n\nASCII value is the numeric representation of a character. For example, the ASCII value of the character 'A' is 65. The ASCII value of the character 'a' is 97. The ASCII value of the character '0' is 48. The ASCII value of the character ' ' is 32.\n\n```txt\nInput  : A\nOutput : 65\n```\n\n---\n",
  "trackId": 4137,
  "lastUpdated": "2023-12-15T03:48:25Z",
  "contributors": [
    "lookwhoshere99",
    "ApurvaR1",
    "akshithagunupati",
    "anandfresh",
    "harshraj8843",
    "Tushar12222",
    "vedantpople4",
    "cacti23",
    "jfinley6",
    "kishoredubey",
    "joao-vitor-souza",
    "kituuu",
    "greeshma-d",
    "amitbatra31"
  ],
  "julia": "char = 'A'\nprintln(\" ascii value = \", Int(char))\n",
  "scala": "object Ascii{  \n    def main(args:Array[String]):Unit={  \n        var ch:Char='A'\n        println(\"Character value: \"+ch)\n        println(\"ASCII value    : \"+ch.toInt)\n    }  \n}\n",
  "dart": "void convertToAscii(String c){\n  int ascii = c.codeUnitAt(0);\n  print(ascii);\n}\n\nvoid main() {\n  convertToAscii(\"s\");\n}",
  "go": "package main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar str string\n\tfmt.Scanf(\"%s\", &str)\n\tfor i := 0; i < len(str); i++ {\n\t\tfmt.Printf(\"%d\", str[i])\n\t}\n}\n",
  "haskell": "main :: IO ()\nmain = do\n    putStrLn \"Enter a character:\"\n    input <- getLine\n    case input of\n        [char] -> putStrLn $ \"ASCII value of '\" ++ [char] ++ \"' is: \" ++ show (asciiValue char)\n        _      -> putStrLn \"Invalid input. Please enter a single character.\"\n\nasciiValue :: Char -> Int\nasciiValue char = fromEnum char\n",
  "php": "<?php\n\nfunction asciiValue($str) {\n   return ord($str);\n}\n\necho asciiValue(\"A\");\n\n?>\n",
  "perl": "print \"Please enter a character: \";\n$char = <STDIN>;\nchomp $char;\nprint(\"Ascii value of \" . substr($char, 0, 1) . \" : \" . ord($char) . \"\\n\");\n",
  "python": "ch = input(\"Enter character\")\nascii_code = ord(ch)\nprint(ascii_code)\n",
  "r": "# Function to get ASCII value of a character\ngetAsciiValue <- function(char) {\n  # Ensure that the input is a single character\n  if (nchar(char) != 1) {\n    stop(\"Please input a single character.\")\n  }\n\n  # Convert the character to its ASCII value\n  ascii_value <- as.integer(charToRaw(char))\n  return(ascii_value)\n}\n\n# Test the function with the input 'A'\ninput_char <- \"A\"\nascii_value <- getAsciiValue(input_char)\nprint(ascii_value)\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "scala",
    "dart",
    "go",
    "haskell",
    "php",
    "perl",
    "python",
    "r"
  ]
}