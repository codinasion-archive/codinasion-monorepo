{
  "slug": "find-the-average-of-all-numbers-in-an-array",
  "title": "Find The Average Of All Numbers In An Array",
  "c": "#include <stdio.h>\n\nint main() {\n    int n, i;\n    float sum = 0.0, avg;\n\n    printf(\"Enter the number of elements in the array: \");\n    scanf(\"%d\", &n);\n\n    int arr[n];\n    printf(\"Enter the elements of the array:\\n\");\n\n    for(i = 0; i < n; i++) {\n        scanf(\"%d\", &arr[i]);\n        sum += arr[i];\n    }\n\n    avg = sum / n;\n\n    printf(\"The average of the elements in the array is: %f\", avg);\n    \n    return 0;\n}\n",
  "c-plus-plus": "/****************************************************************************\n*\tProject:\tFindTheAverageOfAllNumbersInAnArray\t\t\t\t\t\t\t\t\t                *\n*\tFile:\t\tFindTheAverageOfAllNumbersInAnArray.cpp                    \t\t\t\t\t       \t*\n*\tDate: \t\t2023-01-31\t\t\t\t\t\t\t\t\t        \t\t*\n*\tVersion: \t1.00\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\n****************************************************************************/\n#include <iostream> // cout,cin\n#include <vector>  // vector\n\n/****************************************************************************/\nint FindTheAverageOfAllNumbersInAnArray(std::vector<int> arr);\n/****************************************************************************/\nint main()\n{\n\n    std::size_t size;\n\n    std::cout << \"enter size of arr\" << std::endl;\n    std::cin >> size;\n\n    std::vector<int> arr;\n\n    arr.resize(size); // resize to save time\n\n    for(std::size_t i = 0; i < size; ++i)\n    {\n        std::cout << \"enter element \" << i << \" of arr\" << std::endl;\n        std::cin >> arr[i];\n    }\n\n    std::cout << \"Average of all nums in the arr: \" << FindTheAverageOfAllNumbersInAnArray(arr);\n\n    return 0;\n}\n/****************************************************************************/\nint FindTheAverageOfAllNumbersInAnArray(std::vector<int> arr)\n{\n    int res = 0;\n\n    for(std::size_t i = 0; i < arr.size(); ++i)\n    {\n        res += arr[i];\n    }\n\n    res /= arr.size();\n\n    return res;\n}\n/****************************************************************************/\n\n",
  "c-sharp": "using System;\nusing System.Linq;\nclass Average {\n   static void Main() {\n      var arr = new int[] { 1,2,3,4,5 };\n      double avg = Queryable.Average(arr.AsQueryable());  \n      Console.WriteLine(\"Average : \"+avg);\n   }\n}\n",
  "f-sharp": "let avg aList =\n    let rec sum = function\n        | head :: tail -> head + (sum tail)\n        | [] -> 0.\n    sum aList / (aList |> List.length |> float)\n\nlet res = avg [ 1.; 2.; 3.; 4.; 5. ]\nprintfn \"Average : %A\" res\n",
  "java": "public class FindTheAverageOfAllNumbersInAnArray {\n    public static void main(String[] args) {\n        int [] arr = {1,2,3,4,5};\n        System.out.println(average(arr));\n    }\n    static int average(int [] nums){\n        int sum = 0;\n        for(int element: nums){\n            sum += element;\n        } \n      return sum/nums.length;\n    }\n}\n",
  "javascript": "const averageOfNumbers = (arr) => {\n  return arr.reduce((a, v) => a + v) / arr.length;\n};\n\nconsole.log(averageOfNumbers([1, 2, 3, 4, 5]));\n",
  "kotlin": "fun main() {\n    val numArray = intArrayOf(1, 2, 3, 4, 5)\n    var sum = 0\n    numArray.forEach { x -> sum += x; }\n    val average = sum / numArray.size\n    println(\"The average is:$average\")\n}",
  "ruby": "def findTheAverageOfAllNumbersInAnArray numArray\n    average = numArray.reduce(:+).to_f / numArray.count\n    puts average.to_s.chomp(\".0\")\nend\n\nfindTheAverageOfAllNumbersInAnArray [1,2,3,4,5]",
  "swift": "import Swift\nimport Foundation\n\nlet numbers = [1, 2, 3, 4, 5]\nvar average = Double(numbers.reduce(0, +))/Double(numbers.count)\nprint(\"Average: \", average)\n",
  "typescript": "const FindTheAverageOfAllNumbersInAnArray = (nums: number[]): number => {\n  let sum: number = 0;\n  for (let i: number = 0; i < nums.length; i++) {\n    sum += nums[i];\n  }\n  const avg: number = parseFloat((sum / nums.length).toFixed(2));\n  console.log(avg);\n  return avg;\n};\nexport default FindTheAverageOfAllNumbersInAnArray;\n",
  "description": "\n## Write a program to find the average of all numbers in an array\n\n```txt\nInput  : [1, 2, 3, 4, 5]\nOutput : 3\n```\n\n---\n",
  "trackId": 4908,
  "lastUpdated": "2023-12-01T16:56:04Z",
  "contributors": [
    "Rohan-Kalgutkar",
    "sushanth-0",
    "harshraj8843",
    "anandfresh",
    "vedantpople4",
    "Tushar12222",
    "D-I-J",
    "esivakumar26",
    "pokharel-nishan",
    "shashankgurunaga1",
    "Osher160",
    "jfinley6",
    "dineshlalam15",
    "Varun-Dhruv"
  ],
  "scala": "object arrayAverage {\n    def main(args:Array[String]):Unit={\n        val nums: List[Int] = List(1, 2, 3, 4, 5); \n        var total = 0.0;      \n        for ( i <- 0 to (nums.length - 1)) {\n         total += nums(i);\n        }\n        val result = \n        println(\"Array Average : \"+total/nums.length);\n    }\n}\n",
  "dart": "void avgOfArray(List<int> arr){\n  double avg = 0;\n  for(var i = 0 ; i < arr.length ; i++){\n    avg += arr[i];\n  }\n  avg = avg / arr.length;\n  print(avg);\n}\n\nvoid main() {\n  avgOfArray([1,2,3,6,7]);\n}",
  "go": "package main\n\nimport \"fmt\"\n\nfunc main() {\n\tarray := []int{1, 2, 5, 3, 6, 4, 7, 8, 9, 10}\n\tn := len(array)\n\tsum := 0\n\tfor i := 0; i < n; i++ {\n\t\tsum += (array[i])\n\t}\n\tavg := (float64(sum)) / (float64(n))\n\tfmt.Println(avg)\n}\n",
  "haskell": "\naverage :: Fractional a => [a] -> a\naverage numbers = sum numbers / fromIntegral (length numbers)\n\n\nmain :: IO ()\nmain = do\n\n  let inputNumbers = [1, 2, 3, 4, 5]\n\n\n  putStrLn $ \"Input Array: \" ++ show inputNumbers\n  putStrLn $ \"Average: \" ++ show (average inputNumbers)\n",
  "php": "<?php\n\nfunction averageOfArray($arr) {\n\treturn array_sum($arr)/sizeof($arr);\n}\n\necho averageOfArray([1,2,3,4,5])\n\n?>\n",
  "perl": "#!/usr/bin/perl\nsub average {\nmy @array = @_; \nmy $sum; \nforeach (@array) { $sum += $_; }\nreturn $sum/@array; \n}\n\n@dataArray = (1, 2, 3, 4, 5);\nprint average(@dataArray);\n",
  "python": "def listAverage(array, n1):\n    arraysum = 0\n    for j in range(n1):\n        arraysum += array[j]\n    avg = arraysum / (n1)\n    return avg\n\n\n###########  Main Program ########################\n\nn = int(input(\"Enter the number of elements in the array\"))\narr = []  # Initializing an empty array\nfor i in range(n):\n    a = int(input(\"Enter  the element value :\"))\n    arr.append(a)\nres = listAverage(arr, n)\nprint(\"The average of all the elements in the list is:\", res)\n",
  "r": "numbers <- c(1, 2, 3, 4, 5)\n\n# Function to calculate the average\ncalculate_average <- function(numbers) {\n    return(mean(numbers))\n}\n\n# Calculate the average and print the result\naverage <- calculate_average(numbers)\ncat(\"The average is:\", average, \"\\n\")\n",
  "rust": "fn main(){\n    let numbers = vec![1,2,3,4,5,6,7,8,9,10];\n    let avg: f32;\n    let mut sum: i32 = 0;\n    {\n        for i in &numbers{\n            sum = sum + i;\n        }\n        avg = sum as f32 / numbers.len() as f32;\n    } \n    println!(\"{}\", avg);\n}\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "scala",
    "dart",
    "go",
    "haskell",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}