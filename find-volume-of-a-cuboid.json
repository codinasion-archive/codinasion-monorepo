{
  "slug": "find-volume-of-a-cuboid",
  "title": "Find Volume Of A Cuboid",
  "c": "#include <stdio.h>\n\nvoid main()\n{\n    int l, w, h, volume;\n    printf(\"Enter value of length : \");\n    scanf(\"%d\", &l);\n    printf(\"Enter value of width  : \");\n    scanf(\"%d\", &w);\n    printf(\"Enter value of height : \");\n    scanf(\"%d\", &h);\n    volume = l * w * h;\n\n    printf(\"\\nVolume of cuboid is : %d\\n\", volume);\n}\n",
  "c-plus-plus": "#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n    int l, w, h, volume;\n    cout << \"Enter value of length : \";\n    cin >> l;\n    cout << \"Enter value of width  : \";\n    cin >> w;\n    cout << \"Enter value of height : \";\n    cin >> h;\n    volume = l * w * h;\n\n    cout << \"\\nVolume of cuboid is : \" << volume << endl;\n    return 0;\n}\n",
  "c-sharp": "using System;\n\nclass VolumeaOfCuboid\n{\n    static void Main()\n    {\n        double Length = Convert.ToDouble(Console.ReadLine());\n        double Width = Convert.ToDouble(Console.ReadLine());\n        double Height = Convert.ToDouble(Console.ReadLine());\n\n        // Applying the formula\n        double Volume = Height * Width * Length;\n\n        Console.WriteLine(\"Length  : \" + Length);\n        Console.WriteLine(\"Width   : \" + Width);\n        Console.WriteLine(\"Height  : \" + Height);\n        Console.WriteLine(\"Volume  : \" + Volume);\n    }\n}\n",
  "f-sharp": "let volumeOfCuboid length width height : int =\n  length * width * height\n\n\nlet cuboid = volumeOfCuboid 2 3 4\n\nprintfn \"Volume of a cuboid : %d\" cuboid\n",
  "java": "package MyClass;\nimport java.util.Scanner;\npublic class FindVolumeOfACuboid {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint Length = sc.nextInt();\n\t\tint Width = sc.nextInt();\n\t\tint Height = sc.nextInt();\n\t\t\n\t\tint calculate =(Length * Width * Height);\n\t\t\n\t\tSystem.out.println(\"Volume : \"+ calculate);\n\n\t}\n\n}\n",
  "javascript": "function getVolumeOfACuboid(length, width, height) {\n  return length * width * height;\n}\nconst length = 2;\nconst width = 3;\nconst height = 4;\nconsole.log(getVolumeOfACuboid(length, width, height));\n",
  "kotlin": "import kotlin.math.PI\nimport java.util.Scanner\n\nfun main(args: Array<String>) {\n  val scanner = Scanner(System.`in`)\n  val length = scanner.nextDouble()\n  val width = scanner.nextDouble()\n  val height = scanner.nextDouble()\n\n  val volume = length * width * height\n  println(volume)\n}\n",
  "ruby": "print \"Enter Lenght : \"\nlenght = gets.chomp.to_i\nprint \"Enter Width : \"\nwidth = gets.chomp.to_i\nprint \"Enter Height : \"\nheight = gets.chomp.to_i\nvolume = lenght * width * height\nprint \"Volume : #{volume}\"",
  "swift": "import Swift\nimport Foundation\n\nvar length = 2.0\nvar width = 3.0\nvar height = 4.0\n\nvar volume = length * width * height\nprint(\"Volume of cuboid: \", volume)\n",
  "typescript": "function findVolumeOfACuboid(length: number, width: number, height: number) {\n  return length * width * height;\n}\n\nconsole.log(findVolumeOfACuboid(2, 3, 4));\n",
  "description": "\n## Write a program to find volume of a cuboid\n\nVolume of a cuboid = `Length` × `Width` × `Height`\n\n```txt\nLength : 2\nWidth  : 3\nHeight : 4\n\nVolume : 24\n```\n\n---\n",
  "trackId": 85,
  "lastUpdated": "2023-08-03T20:39:16Z",
  "contributors": [
    "harshraj8843",
    "anandfresh",
    "esivakumar26",
    "joao-vitor-souza",
    "PraaneshSelvaraj",
    "CodingWithHardik",
    "muhammadjufry",
    "Anushka-codergirl",
    "MadhuS-1605",
    "ashankritwik07",
    "KaptainCS3",
    "Ni3dzwi3dz"
  ],
  "julia": "print(\"Enter the length: \")\nlength = parse(Float64, readline(stdin))\nprint(\"Enter the width: \")\nwidth = parse(Float64, readline(stdin))\nprint(\"Enter the height: \")\nheight = parse(Float64, readline(stdin))\nvolume = length * width * height\nprintln(\"Volume of a cuboid: \", volume)\n",
  "scala": "object Main extends App {\n  def volumeOfACuboid[T](wid: T, len: T, hei: T)(implicit ev: Numeric[T]) =\n    ev.times(wid, ev.times(len, hei))\n\n  val length = 2\n  val width = 3\n  val height = 4\n\n  println(\"Length : \" + length)\n  println(\"Width  : \" + width)\n  println(\"Height : \" + height)\n\n  println(\"\\nVolume : \" + volumeOfACuboid(length, width, height))\n}\n",
  "dart": "import 'dart:io';\nvoid main(){\n  print(\"Enter the length :\");\n  int length = int.parse(stdin.readLineSync()!);\n  print(\"Enter the width :\");\n  int width = int.parse(stdin.readLineSync()!);\n  print(\"Enter the height :\");\n  int height = int.parse(stdin.readLineSync()!);\n  int cuboid = length * width * height;\n  print('Volume of a cuboid : $cuboid');\n}\n",
  "go": "package main\n\nimport \"fmt\"\n\nfunc main(){\n var length int\n var height int\n var width int\n  \n  fmt.Println(\"Enter length:\")\n  fmt.Scan(&length)\n  fmt.Println(\"Enter height:\")\n  fmt.Scan(&height)\n  fmt.Println(\"Enter width:\")\n  fmt.Scan(&width)\n  fmt.Println(\"Volume of Cuboid is:\", length*width*height)\n}\n",
  "php": "<?php\n\necho \"Length: \";\nfscanf(STDIN, \"%f\", $length);\n\necho \"Width: \";\nfscanf(STDIN, \"%f\", $width);\n\necho \"Height: \";\nfscanf(STDIN, \"%f\", $height);\n\necho \"Volume: \" . $length * $width * $height . \"\\n\";\n\n?>",
  "perl": "print \"Enter the length : \";\nmy $length = <STDIN> ;\n\nprint \"Enter the width : \";\nmy $width = <STDIN> ;\n\nprint \"Enter the height: \";\nmy $height = <STDIN> ;\n\nmy $res = volumeOfCuboid();\nprint \"Volume of cuboid : $res\";\n\nsub volumeOfCuboid\n{\n    my ($x) = @_;\n    my $res = $length * $width * $height;\n    return $res ;   \n}\n",
  "python": "def find_volume_of_a_cuboid(length, width, height):\n    return length * width * height\n\n\nif __name__ == \"__main__\":\n    length = 2\n    width = 3\n    height = 4\n    print(\"Length : \", length)\n    print(\"Width  : \", width)\n    print(\"Height : \", height)\n    print(\"\\nVolume : \", find_volume_of_a_cuboid(length, width, height))\n",
  "r": "length = 2\nwidth = 3\nheight = 4\nvolume = length * width * height\ncat(\"Volume: \", volume)\n",
  "rust": "fn main() {\n    let length = 2.0;\n    let width = 3.0;\n    let height = 4.0;\n    let volume = length * width * height;\n\n    println!(\"Volume of cuboid is {0}\", volume as f32);\n}\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "scala",
    "dart",
    "go",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}