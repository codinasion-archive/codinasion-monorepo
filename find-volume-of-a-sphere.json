{
  "slug": "find-volume-of-a-sphere",
  "title": "Find Volume Of A Sphere",
  "c": "#include <stdio.h>  \nint main()  \n{  \n    int radius=2;  \n    float pie=3.14159265;  \n    double volume=(4.0/3.0)*pie*(radius*radius*radius);  \n    printf(\"Volume of the sphere=%f\",volume);  \n}  \n",
  "c-plus-plus": "/*\nAuthor -> Abhinav Prabhat\nDate   -> 11-02-2023\n*/\n\n#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n\n    float radius;\n    cout << \"\\n\\nEnter the radius -> \";\n    cin >> radius;\n\n    cout << \"Volume -> \" << ((radius * radius * radius) * 4 * 3.14) / 3 << endl\n         << endl;\n\n    return 0;\n}",
  "c-sharp": "using System;\nclass MainClass {\n    public static void Main (string[] args) {\n    Console.WriteLine (\"Enter the radius : \");\n    double radius = Convert.ToDouble(Console.ReadLine());\n    double volume = 4/3 * 3.14 * radius * radius * radius;\n    Console.WriteLine(\"Volume of sphere : \"+volume);\n  }\n}\n",
  "f-sharp": "let volumeOfSphere radius : float =\n   1.33 * 3.14 * radius * radius * radius\n\n\nlet volume = volumeOfSphere 2.0\n\nprintfn \"Volume of sphere : %f\" volume\n",
  "java": "public class sphere{  \n        public static void main(String args[])  \n    {  \n    int radius=2;  \n    double pie=3.141592653589793238;  \n    double volume=(4.0/3.0)*pie*(radius*radius*radius);  \n    System.out.println(\"Volume of the sphere=\"+volume);  \n     }  \n}  \n",
  "javascript": "function volumeOfSphere(radius) {\n  const pi = 3.14159;\n  let volOfSphere = (4 / 3) * pi * Math.pow(radius, 3);\n  return volOfSphere;\n}\n\nconsole.log(\"Volume of Sphere is\", volumeOfSphere(4));\n",
  "kotlin": "fun main() {\n    print(\"Enter hours : \")\n    println()\n    var input = readLine()\n\n    try {\n        println(\"Volume of sphere with radius $input = \" + FindVolumeOfASphere(input!!.toDouble()))\n    } catch (exception: Exception) {\n        println(\"Input string was not in a correct format\")\n    }\n\n}\n\nprivate fun FindVolumeOfASphere(radius: Double): Double {\n    val pie = 3.141592653589793238;\n    val parm: Double = 4.0/3.0\n    val vol = parm * radius * radius * radius * pie\n\n    return  vol\n}",
  "ruby": "def volumeOfSphere(radius)\n  4/3 * 3.14 * radius * radius * radius\nend\n\nif $PROGRAM_NAME == __FILE__\n  print 'Please enter the radius : '\n  radius = gets.chomp.to_i\n\n  puts \"Volume of Sphere :  #{volumeOfSphere(radius)}\"\nend\n",
  "swift": "import Swift\nimport Foundation\n\nvar radius = 2.0\n\nvar volume = (4.0/3.0) * M_PI * radius * radius * radius\nprint(\"Volume of sphere: \", volume)\n",
  "typescript": "function volumeOfSphere(radius: number) {\n  const pi = 3.14159;\n  const volOfSphere = (4 / 3) * pi * Math.pow(radius, 3);\n  return volOfSphere;\n}\n\nconsole.log(\"Volume of Sphere is\", volumeOfSphere(4));\n",
  "description": "\n## Write a program to find volume of a sphere\n\nVolume of sphere = 4/3 × π × `Radius`^3\n\n```txt\nRadius : 2\n\nVolume : 33.510321638291124\n```\n\n---\n",
  "trackId": 883,
  "lastUpdated": "2023-12-09T15:30:34Z",
  "contributors": [
    "anandfresh",
    "harshraj8843",
    "esivakumar26",
    "rksp25",
    "joao-vitor-souza",
    "rahmat-dev",
    "MadhuS-1605",
    "jatt7568",
    "greeshma-d"
  ],
  "julia": "print(\"Enter the radius: \")\nradius = parse(Float64, readline(stdin))\nvolume = 4/3 * 3.14 * radius * radius * radius\nprintln(\"Volume of sphere: \", volume)\n",
  "scala": "object HelloWorld {\n\tdef main(args: Array[String]): Unit = {\n\t  val Pi = java.lang.Math.PI;\n\t  val radius = scala.io.StdIn.readDouble();\n\t  val volume = (4.0/3.0) * Pi * radius * radius * radius;\n\t  println(\"volume of the sphere: \" + volume);\n\t}\n}\n",
  "dart": "import 'dart:io';\nvoid main(){\n  print(\"Enter the radius :\");\n  var radius = double.parse(stdin.readLineSync());\n  var volume =  4/3 * 3.14 * radius * radius * radius;\n  print('Volume of sphere  : $volume');\n}\n",
  "go": "package main\n \nimport (\n   \"fmt\"\n   \"math\"\n)\n \nfunc volume (radius float64) float64 {\n   return 4.0/3.0 * math.Pi * math.Pow(radius,3)\n}\n \nfunc main() {\n  var radius float64\n  fmt.Println(\"Enter value of radius:\")\n  fmt.Scan(&radius)\n  fmt.Println(\"Volume of Sphere is:\",volume(radius))\n}\n",
  "php": "<?php    \n    $radius=2;  \n    $pie=3.141592653589793238;  \n    $volume=(4/3)*$pie*($radius*$radius*$radius);  \n    echo \"Volume of the Sphere=\";  \n    echo $volume;  \n?> \n",
  "perl": "$PI = 3.141592654;\n\nmy $radius = <STDIN>;\n$volume = 4/3 * $PI * $radius * $radius * $radius;\nprint \"$volume\"\n",
  "python": "# Radius : 2\n# Volume : 33.510321638291124\n\nradius = 2\npie = 3.1415926535897932\n\nvolume = (4.0 / 3.0) * pie * (radius * radius * radius)\nprint(\"volume of the sphere=\" + str(volume))\n",
  "r": "radius = 2\nvolume = 4/3 * pi * radius * radius * radius\ncat(\"volume: \", volume)\n",
  "rust": "fn find_volume_of_a_sphere(radius: u64) -> f64 {\n\tconst PI: f64 = 3.1415926535897931f64;\n\treturn 4.0 / 3.0 * PI * (radius as f64).powf(3.0);\n}\n\nfn main() {\n\tprintln!(\"{}\", find_volume_of_a_sphere(2));\n}\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "scala",
    "dart",
    "go",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}