{
  "slug": "check-upper-case",
  "title": "Check Upper Case",
  "c": "#include <stdio.h>\n\nint main(){\n    \n    char ch;\n    scanf(\"%c\",&ch);\n    if(ch>='A' && ch<='Z') printf(\"Upper Case\");\n    else printf(\"Not Upper Case\");\n    return 0;\n}\n\n",
  "c-plus-plus": "#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n    char alphabet;\n    cin>>alphabet;\n    if(int(alphabet)>=65 && int(alphabet)<=90){\n        cout<<\"Upper Case\"<<endl;\n    }else{\n        cout<<\"Not Upper Case\"<<endl;\n    }\n    return 0;\n}\n",
  "c-sharp": "using System;\n \npublic class charCase\n{\n    static void Main(string[] args)\n    {\n        char ch;\n \n        Console.WriteLine(\"Enter any character: \");\n        ch = Convert.ToChar(Console.ReadLine());        \n \n        if (ch >= 'a' && ch <= 'z')\n        {\n            Console.WriteLine(ch + \" is a lowercase alphabet \");            \n        }\n        else if (ch >= 'A' && ch <= 'Z')\n        {\n            Console.WriteLine(ch + \" is a uppercase alphabet \");                      \n        }\n        else\n        {\n            Console.WriteLine(ch + \" is not an alphabet \");                      \n        }\n \n        Console.ReadLine();\n    }\n}\n",
  "java": "class checkUpper {\n    public static void main(String[] args) {\n         char val = 'A';\n        if (Character.isUpperCase(val)) {\n         System.out.println(\"Character is in Uppercase!\");\n      }else {\n         System.out.println(\"Character is in Lowercase!\");\n      }\n    }\n}\n",
  "javascript": "/**\n *\n * @param {string} character\n * @returns {boolean} whether `character` is uppercase or nott\n */\nfunction checkUpperCase(character) {\n  /**\n   * Better implenetation than converting the character toUpperCase and checking.\n   */\n  const isUpperCase = /^[A-Z]*$/.test(character);\n  return isUpperCase ? \"Upper Case\" : \"Not Upper Case\";\n}\n",
  "kotlin": "import kotlin.math.PI\nimport java.util.Scanner\n\nfun main(args: Array<String>) {\n  val scanner = Scanner(System.`in`)\n\n  //Input Character\n  print(\"Enter a character : \")\n  val char = scanner.next()[0]\n\n  val upperCase = char.isUpperCase()\n  if(upperCase){\n      println(\"Upper Case\")\n  } else{\n      println(\"Not Upper Case\")\n  }\n}\n",
  "ruby": "puts \"Please enter a letter to check if it's uppercase: \"\ninput_letter = gets.chomp\n\ndef checkUpperCase letter\n    if (letter == letter.upcase)\n        \"Upper Case\"\n    else\n        \"Not Upper Case\"\n    end\nend\n\nputs checkUpperCase input_letter",
  "swift": "import Swift\nimport Foundation\n\nvar x: Character = \"a\"\nprint(\"a is uppercase: \", x.isUppercase)\n\nvar y: Character = \"K\"\nprint(\"K is uppercase: \", y.isUppercase)\n",
  "typescript": "function checkUpperCase(character: string) {\n  /**\n   * Better implenetation than converting the character toUpperCase and checking.\n   */\n  const isUpperCase = /^[A-Z]*$/.test(character);\n  return isUpperCase ? \"Upper Case\" : \"Not Upper Case\";\n}\n",
  "description": "\n## Write a program to check upper case\n\nCheck if the given character is upper case (A-Z).\n\n```txt\nInput  : A\nOutput : Upper Case\n```\n\n---\n",
  "trackId": 1126,
  "lastUpdated": "2024-05-03T09:39:35Z",
  "contributors": [
    "lchauha",
    "anandfresh",
    "harshraj8843",
    "esivakumar26",
    "jfinley6",
    "joao-vitor-souza",
    "grraghav120",
    "MadhuS-1605",
    "krishan-here",
    "ynbh",
    "jaypavasiya"
  ],
  "julia": "char = 'A'\nif(isuppercase(char)) \n  println(\"Upper case\")\nelse\n  println(\"Not an Upper case\")\nend\n",
  "perl": "my $str = <STDIN>;\nif ($str eq uc $str) {\n  print \"upper case\\n\";\n} else {\n  print \"lower case\\n\";\n}\n",
  "scala": "object HelloWorld {\n \tdef main(args: Array[String]): Unit = {\n \t  val line = scala.io.StdIn.readChar();\n \t  if(line.isUpper) {\n \t    println(\"upper case\");\n \t  } else {\n \t    println(\"lower case\");\n \t  }\n \t}\n }\n",
  "go": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n)\n\nfunc main() {\n\tvar char string\n\tfmt.Println(\"Enter character:\")\n\tfmt.Scan(&char)\n\tif char == strings.ToUpper(char) {\n\t\tfmt.Println(\"Upper Case\")\n\t} else {\n\t\tfmt.Println(\"Not Upper Case\")\n\t}\n}\n",
  "php": "<?php\n\t$str = readline('Enter letter: ');\n\n  if (ctype_upper($str)) {\n    echo 'Uppercase';\n  } else {\n    echo 'Lowercase';\n  }\n?>\n",
  "python": "print(\"Upper Case\" if input()[0].isupper() else \"Lower Case\")\n",
  "r": "is_uppercase <- function(character) {\n  if (grepl(\"^[A-Z]$\", character)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\n# Example usage:\nchar <- \"G\"\nresult <- is_uppercase(char)\nprint(paste(\"Is the character\", char, \"uppercase?\", result))\n",
  "rust": "fn check_upper_case(char: char) -> &'static str {\n    let is_upper_case = char.is_uppercase();\n\n    if is_upper_case {\n        return \"Upper Case\";\n    }\n\n    return \"Not Upper Case\";\n}\n\nfn main() {\n    let character = check_upper_case('a');\n    println!(\"{}\", character);\n}",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "perl",
    "scala",
    "go",
    "php",
    "python",
    "r",
    "rust"
  ]
}