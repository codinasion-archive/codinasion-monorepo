{
  "slug": "convert-octal-to-hexadecimal",
  "title": "Convert Octal To Hexadecimal",
  "c": "#include <stdio.h>\n#include <string.h>\n\n// This gives value of char in decimal\nint NumberCharToValue(char ch, int base)\n{\n    if (ch >= '0' && ch <= '9')\n    {\n        return (int)(ch - '0');\n    }\n    // next will be A,B,C....\n    return ((int)(ch - 'A') + 10);\n}\n// This gives char of value in decimal\nchar NumberValueToChar(int num, int base)\n{\n    if (num <= 9)\n    {\n        return (char)('0' + num);\n    }\n    // num will be 10,11,12 ...\n    return (char)(num - 10 + 'A');\n}\n// idea is to convert input to decimal then from decimal to output\nvoid convertNumberSystem(char *input, char *output, int fromBase, int toBase)\n{\n    // convert input to decimal\n    int inputLength = strlen(input);\n    long long decimal = 0, digitPower = 1;\n\n    for (int i = inputLength - 1; i >= 0; i--)\n    {\n        decimal += NumberCharToValue(input[i], fromBase) * digitPower;\n        digitPower *= fromBase;\n    }\n    // convert decimal to reversed output\n    int outputIndex = 0;\n    while (decimal != 0)\n    {\n        output[outputIndex++] = NumberValueToChar(decimal % toBase, toBase);\n        decimal /= toBase;\n    }\n\n    // reverse the output to get actual output\n    for (int i = 0; i < outputIndex / 2; i++)\n    {\n        int temp = output[i];\n        output[i] = output[outputIndex - i - 1];\n        output[outputIndex - i - 1] = temp;\n    }\n}\n\nint main()\n{\n\n    char input[10000], output[10000];\n\n    scanf(\"%s\", input);\n\n    convertNumberSystem(input, output, 8, 16); // This function can convert from a number from any base to another base\n\n    printf(\"%s\\n\", output);\n\n    return 0;\n}",
  "c-plus-plus": "#include <iostream>\nusing namespace std;\n \nstring octalToHexadecimal(int n)\n{\n    int decimal = 0, base = 1;\n    while (n > 0) {\n        int rem = n % 10;\n        decimal += rem * base;\n        n /= 10;\n        base *= 8;\n    }\n     \n    string hexadecimal = \"\";\n    while (decimal > 0) {\n        int rem = decimal % 16;\n        if (rem < 10) {\n            hexadecimal = to_string(rem) + hexadecimal;\n        } else {\n            hexadecimal = (char)(rem - 10 + 'A') + hexadecimal;\n        }\n        decimal /= 16;\n    }\n    return hexadecimal;\n}\n \nint main()\n{\n    int octal = 12;\n    string hexadecimal = octalToHexadecimal(octal);\n    cout << \"Equivalent Hexadecimal Value = \" << hexadecimal << endl;\n    return 0;\n}\n",
  "c-sharp": "using System;\nclass Conversion{\nstatic int octalToDecimal(int n)\n{\nint num = n;\nint dec_value = 0;\n\nint b_ase = 1;\n\nint temp = num;\nwhile (temp > 0)\n{\n\tint last_digit = temp % 10;\n\ttemp = temp / 10;\n\n\tdec_value += last_digit * b_ase;\n\n\tb_ase = b_ase * 8;\n}\n\nreturn dec_value;\n}\n\nstatic string decToHexa(int n)\n{\nchar []hexaDeciNum = new char[100];\n\nint i = 0;\nstring ans = \"\";\n\nwhile(n != 0)\n{\n\tint temp = 0;\n\ttemp = n % 16;\n\tif(temp < 10)\n\t{\n\thexaDeciNum[i] = (char)(temp + 48);\n\ti++;\n\t}\n\telse\n\t{\n\thexaDeciNum[i] = (char)(temp + 87);\n\ti++;\n\t}\n\n\tn = n / 16;\n}\n\nfor(int j = i - 1; j >= 0; j--)\n{\n\tans += hexaDeciNum[j];\n}\n\nreturn ans;\n}\n\npublic static void Main(string []args)\n{\nstring octnum, hexnum;\nint decnum;\n\nConsole.WriteLine (\"Please enter an Octal number :\");\noctnum = Console.ReadLine();\n\ndecnum = octalToDecimal(Int32.Parse(octnum));\n\nhexnum = decToHexa(decnum);\n\nConsole.Write(\"Equivalent Hexadecimal Value = \" +\n\t\t\t\thexnum);\n}\n}\n\n",
  "java": "import java .util.*;\nclass ConvertOctalToHexadecimal\n{\n  public static int octToDec(int n)\n    {\n        int result = 0,temp=0;double p=0.0;\n        for (int i = 0; n > 0; i++) {\n            temp = n % 10;\n            p = Math.pow(8, i);\n            result += (temp * p);\n            n = n / 10;\n        }\n        return result;\n    }\n    public static String decTohex(int n)\n    {\n        int[] hexNum = new int[100];\n        int i = 0;\n        String result=\"\";\n        while (n != 0) {\n            hexNum[i] = n % 16;\n            n = n / 16;\n            i++;\n        }\n        for (int j = i - 1; j >= 0; j--) {\n            if (hexNum[j] > 9)\n                result+=(char)(55 + hexNum[j]);\n            else\n                result+=hexNum[j];\n        }\n        return result;\n    }\n    public static void main(String args[]) \n   {\n      Scanner sc=new Scanner(System.in);\n      System.out.println(\"Enter octal number \");\n      int n=sc.nextInt();\n      System.out.println(decTohex(octToDec(n)));\n       \n   }\n}",
  "javascript": "// JavaScript program to convert Octal\n// to Hexadecimal\n\n// Function to convert octal to decimal\nfunction octalToDecimal(n) {\n  var num = n;\n  var dec_value = 0;\n\n  var base = 1;\n\n  var temp = num;\n  while (temp > 0) {\n    // Extracting last digit\n    var last_digit = temp % 10;\n    temp = Math.floor(temp / 10);\n\n    // Multiplying last digit with\n    // appropriate base value and\n    // adding it to dec_value\n    dec_value += last_digit * base;\n\n    base = base * 8;\n  }\n  return dec_value;\n}\n\n// Function to convert decimal\n// to hexadecimal\nfunction decToHexa(n) {\n  // char array to store\n  // hexadecimal number\n  var hexaDeciNum = new Array(100);\n\n  // counter for hexadecimal\n  // number array\n  var i = 0;\n  while (n != 0) {\n    // Temporary variable to\n    // store remainder\n    var temp = 0;\n\n    // Storing remainder in\n    // temp variable.\n    temp = n % 16;\n\n    // Check if temp < 10\n    if (temp < 10) {\n      hexaDeciNum[i] = temp + 48;\n      i++;\n    } else {\n      hexaDeciNum[i] = temp + 87;\n      i++;\n    }\n    n = Math.floor(n / 16);\n  }\n\n  var ans = \"\";\n\n  // Printing hexadecimal number array\n  // in reverse order\n  for (var j = i - 1; j >= 0; j--) {\n    ans += String.fromCharCode(hexaDeciNum[j]);\n  }\n  return ans;\n}\n\n// Driver Code\nvar hexnum;\nvar decnum, octnum;\n\n// Taking 5123 as an example of\n// Octal Number.\noctnum = 5123;\n\n// Convert Octal to Decimal\ndecnum = octalToDecimal(octnum);\n\n// Convert Decimal to Hexadecimal\nhexnum = decToHexa(decnum);\n\nconsole.log(\"Equivalent Hexadecimal Value = \" + hexnum);\n",
  "kotlin": "import kotlin.math.pow\n\nfun main() {\n    print(\"Enter Octal No. to Convert in Hexadecimal: \")\n    val num = readln().toInt()\n    println()\n    print(\"Hexadecimal of Octal No: $num is: \")\n    print(octalToHexadecimal(num))\n}\n\nprivate fun octalToHexadecimal(nums: Int): String {\n    val decimal = octalToDecimal(nums)\n    return decimalToHexadecimal(decimal)\n}\n\nprivate fun octalToDecimal(nums: Int): Int {\n    var decimal = 0\n    var digit = nums\n    var n = 0\n    while (digit > 0) {\n        val rem = digit % 10\n        decimal += rem * 8.0.pow(n).toInt()\n        digit /= 10\n        n++\n    }\n    return decimal\n}\n\nprivate fun decimalToHexadecimal(nums: Int): String {\n    var hexa = \"\"\n    var digit = nums\n    var n = 0\n    while (digit > 0) {\n        val rem = digit % 16\n        hexa = when (rem) {\n            10 -> \"A\"\n            11 -> \"B\"\n            12 -> \"C\"\n            13 -> \"D\"\n            14 -> \"E\"\n            15 -> \"F\"\n            else -> {\n                rem.toString()\n            }\n        } + hexa\n        digit /= 16\n    }\n    return hexa\n}",
  "typescript": "function octalToDecimal(n: any) {\n  const num = n;\n  let dec_value = 0;\n  let base = 1;\n\n  let temp = num;\n  while (temp > 0) {\n    const last_digit = temp % 10;\n    temp = Math.floor(temp / 10);\n    dec_value += last_digit * base;\n\n    base = base * 8;\n  }\n  return dec_value;\n}\n\nfunction decToHexa(n: any) {\n  const hexaDeciNum = new Array(100);\n  let i = 0;\n  while (n != 0) {\n    let temp = 0;\n    temp = n % 16;\n\n    if (temp < 10) {\n      hexaDeciNum[i] = temp + 48;\n      i++;\n    } else {\n      hexaDeciNum[i] = temp + 87;\n      i++;\n    }\n    n = Math.floor(n / 16);\n  }\n  let ans = \"\";\n  for (let j = i - 1; j >= 0; j--) {\n    ans += String.fromCharCode(hexaDeciNum[j]);\n  }\n  return ans;\n}\n\nlet hexnum;\nlet decnum, octnum;\n\noctnum = 12;\n\n// Convert Octal to Decimal\ndecnum = octalToDecimal(octnum);\n\n// Convert Decimal to Hexadecimal\nhexnum = decToHexa(decnum);\n\nconsole.log(\"Equivalent Hexadecimal Value :\" + hexnum);\n",
  "description": "\n## Write a program to convert octal to hexadecimal\n\nOctal is a base-8 number system. It uses only eight digits: 0, 1, 2, 3, 4, 5, 6, and 7. The digits are called octits. An octit is the smallest unit of information in a computer. An octit can be used to represent a single value, such as 0, 1, 2, 3, 4, 5, 6, or 7, or it can be used to represent a single state, such as on or off.\n\nHexadecimal is a base-16 number system. It uses sixteen digits: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, and F. The digits are called hexits. A hexit is the smallest unit of information in a computer. A hexit can be used to represent a single value, such as 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, or F, or it can be used to represent a single state, such as on or off.\n\nTo convert an octal number to hexadecimal, we can use the following algorithm:\n\n1. Convert the octal number to decimal.\n2. Convert the decimal number to hexadecimal.\n\n```txt\nInput  : 12\nOutput : A\n```\n\n---\n",
  "trackId": 456,
  "lastUpdated": "2024-06-16T13:55:26Z",
  "contributors": [
    "harshraj8843",
    "pramod-karkhani",
    "Rohan-Kalgutkar",
    "RiteshK-611",
    "YinzeZhang",
    "AdityaNarayanPradhan",
    "anandfresh",
    "joao-vitor-souza",
    "UsmanFani",
    "sahooankeeta",
    "DiamonndAde",
    "rakibul-islam-raju",
    "ridsuteri"
  ],
  "julia": "println(\"Enter a octal number: \") \nx = readline()\ny = parse(Int, x, base=8)\ny = string(y, base=16)\nprintln(\"Hexadecimal of \", x, \": \", uppercase(y))",
  "scala": "object OctalToHexadecimalConverter {\n\n  def main(args: Array[String]): Unit = {\n  \n    val octalNumber = \"12\"\n\n   \n    val decimalNumber = octalToDecimal(octalNumber)\n\n   \n    val hexadecimalNumber = decimalToHexadecimal(decimalNumber)\n\n   \n    println(s\"The hexadecimal equivalent of octal number $octalNumber is: $hexadecimalNumber\")\n  }\n\n  \n  def octalToDecimal(octal: String): Int = {\n    Integer.parseInt(octal, 8)\n  }\n\n  \n  def decimalToHexadecimal(decimal: Int): String = {\n    Integer.toHexString(decimal).toUpperCase\n  }\n}\n",
  "go": "package main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n\t\"strings\"\n)\n\nfunc main() {\n\n\tvar octalStr string\n\tfmt.Println(\"Enter octal number\")\n\tfmt.Scanln(&octalStr)\n\n\t// convert an octal str to a decimal number\n\tdecimalNum, err := strconv.ParseInt(octalStr, 8, 64)\n\tif err != nil {\n\t\tfmt.Println(\"error occur when parse octal num\")\n\t\treturn\n\t}\n\n\t// Convert a decimal number to a hexadecimal number\n\thexStr := strconv.FormatInt(decimalNum, 16)\n\n\tfmt.Printf(\"octal number %s converted to hexadecimal number：%s\\n\", octalStr, strings.ToUpper(hexStr))\n}\n",
  "php": "<?php\n\n$octal = readline();\n$possibleChars = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"];\n$hexaCharsMapping = [\"10\" => \"A\", \"11\" => \"B\", \"12\" => \"C\", \"13\" => \"D\", \"14\" => \"E\", \"15\" => \"F\"];\n\n$decimal = 0;\n\nforeach (str_split($octal) as $key => $value) {\n    if (!in_array($value, $possibleChars)) {\n        exit(\"Input contains an invalid value: \" . $value . \"\\n\");\n    } else {\n        $decimal += $value * pow(8, (int) (strlen($octal) - $key - 1));\n    }\n}\n\n$hexadecimal = \"\";\n\nfunction map($num)\n{\n    global $hexaCharsMapping;\n    if (in_array($num, [10, 11, 12, 13, 14, 15])) {\n        return $hexaCharsMapping[$num];\n    } else {\n        return $num;\n    }\n}\n\nwhile (true) {\n    $quocient = floor($decimal / 16);\n    if ($quocient < 1) {\n        $hexadecimal .= map($decimal);\n        break;\n    }\n    $remainder = $decimal % 16;\n    $decimal = $quocient;\n    $hexadecimal .= map($remainder);\n}\n\necho strrev($hexadecimal) . \"\\n\";\n\n?>",
  "perl": "use strict;\nuse warnings;\n\n# This gives value of char in decimal\nsub NumberCharToValue {\n    my ($ch, $base) = @_;\n\n    if ($ch ge '0' && $ch le '9') {\n        return ord($ch) - ord('0');\n    }\n    # next will be A, B, C...\n    return ord($ch) - ord('A') + 10;\n}\n\n# This gives char of value in decimal\nsub NumberValueToChar {\n    my ($num, $base) = @_;\n\n    if ($num <= 9) {\n        return chr(ord('0') + $num);\n    }\n    # num will be 10, 11, 12 ...\n    return chr(ord('A') + $num - 10);\n}\n\n# Idea is to convert input to decimal, then from decimal to output\nsub convertNumberSystem {\n    my ($input, $fromBase, $toBase) = @_;\n\n    # Convert input to decimal\n    my $inputLength = length($input);\n    my $decimal = 0;\n    my $digitPower = 1;\n\n    for (my $i = $inputLength - 1; $i >= 0; $i--) {\n        $decimal += NumberCharToValue(substr($input, $i, 1), $fromBase) * $digitPower;\n        $digitPower *= $fromBase;\n    }\n\n    # Convert decimal to output\n    my $output = \"\";\n    while ($decimal != 0) {\n        $output = NumberValueToChar($decimal % $toBase, $toBase) . $output;\n        $decimal = int($decimal / $toBase);\n    }\n\n    return $output;\n}\n\nprint \"Enter the input: \";\nchomp(my $input = <STDIN>);\n\n# This function can convert a number from any base to another base\nmy $output = convertNumberSystem($input, 8, 16);\n\nprint \"Output: $output\\n\";\n",
  "python": "octnum = input()\n\n# Convert octal to decimal\ndecnum = int(octnum, 8)\n\n# Convert decimal to hexadecimal\nhexadecimal = hex(decnum).replace(\"0x\", \"\")\n\n# Printing the hexadecimal value\nprint(hexadecimal)\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "java",
    "javascript",
    "kotlin",
    "typescript",
    "julia",
    "scala",
    "go",
    "php",
    "perl",
    "python"
  ]
}