{
  "slug": "find-sum-of-n-natural-numbers-by-recursion",
  "title": "Find Sum Of N Natural Numbers By Recursion",
  "c": "#include <stdio.h>\n\nint sumByRecursion(int n);\n\nint main() {\n\n  int num;\n  printf(\"Enter a positive integer: \");\n  scanf(\"%d\", &num);\n  printf(\"Sum = %d\", sumByRecursion(num));\n  return 0;\n}\n\nint sumByRecursion(int n) {\n  if (n != 0)\n    return n + sumByRecursion(n - 1);\n  else\n    return n;\n}\n",
  "c-plus-plus": "#include <iostream>\nusing namespace std;\nint sum_of_natural_numbers(int n)\n{\nif(n == 0)\nreturn 0;\nreturn n + sum_of_natural_numbers(n - 1);\n}\n\nint main()\n{\nint n;\ncout << \"\\nEnter the number : \";\ncin >> n;\ncout << \"\\n Sum of \" << n << \" Natural Numbers is \"<< sum_of_natural_numbers(n);\ncout << endl;\nreturn 0;\n}\n",
  "c-sharp": "using System;\nclass SumOfNaturalNumbers\n{\nstatic void Main(string[] args) \n    {\n\tConsole.Write(\" How many numbers to sum : \");\n\tint n = Convert.ToInt32(Console.ReadLine());    \n    Console.Write(\" The sum of natural numbers is : {1}\\n\\n\", n,SumOfTen(1,n));\n    }\n\nstatic int SumOfTen(int min, int max) \n    {\n    return CalcuSum(min, max);\n    }\n\nstatic int CalcuSum(int min, int val) \n    {\n    if (val == min)\n        return val;\n    return val + CalcuSum(min, val - 1);\n    }\n}\n",
  "f-sharp": "open System\nlet rec sum last first=\n        if last = 0 then first\n        else  sum (last-1)(last+first)\nlet result = sum 5 0\nConsole.WriteLine(\"The sum of first 5 integers is {0}\\t\", result)\n",
  "java": "import java.util.*;\nimport java.lang.*;\n \nclass GFG\n{\n \n    public static int recurSum(int n)\n    {\n        if (n <= 1)\n            return n;\n        return n + recurSum(n - 1);\n    }\n     \n    \n    public static void main(String args[])\n    {\n        int n = 5; //range of number \n        System.out.println(recurSum(n));\n    }\n}",
  "javascript": "function sumOfNNaturalNumber(num) {\n  let sumOfNaturalNum = 0;\n  if (num > 0) {\n    sumOfNaturalNum = num + sumOfNNaturalNumber(num - 1);\n  }\n  return sumOfNaturalNum;\n}\n\nconsole.log(sumOfNNaturalNumber(7));\n",
  "kotlin": "fun main() {\n    print(\"Input : \")\n    println()\n    var input = readLine()\n\n    println(\"Sum of natural number $input using recursion is : \" + FindSumOfNNaturalNumbersByRecursion(input!!.toInt()))\n\n}\n\nprivate fun FindSumOfNNaturalNumbersByRecursion(num: Int): Int {\n    val sum = addNumbers(num)\n\n    return sum\n}\n\nprivate fun addNumbers(num: Int): Int {\n    if (num != 0)\n        return num + addNumbers(num - 1)\n    else\n        return num\n}",
  "typescript": "function sumOfNNaturalNumber(num: number): number {\n  let sumOfNaturalNum = 0;\n  if (num > 0) {\n    sumOfNaturalNum = num + sumOfNNaturalNumber(num - 1);\n  }\n  return sumOfNaturalNum;\n}\n\nconsole.log(sumOfNNaturalNumber(5));\n",
  "description": "\n## Write a program to find sum of n natural numbers by recursion\n\n```txt\nInput  : 5\nOutput : 15\n```\n\n---\n",
  "trackId": 2822,
  "lastUpdated": "2023-08-03T20:39:16Z",
  "contributors": [
    "harshraj8843",
    "anandfresh",
    "rksp25",
    "joao-vitor-souza",
    "PravunathSingh",
    "greeshma-d",
    "shivanshi-s",
    "gdguesser",
    "sksachin7z2"
  ],
  "go": "package main\n\nfunc findSumOfNNaturalNumbersByRecursion(n int) int {\n\tif n == 0 {\n\t\treturn 0\n\t}\n\treturn n + findSumOfNNaturalNumbersByRecursion(n-1)\n}\n\nfunc main() {\n\tprintln(findSumOfNNaturalNumbersByRecursion(5))\n}\n",
  "php": "<!-- issue #2835 -->\n<?php\nfunction Sum($n)\n{\nif ($n <= 1)\nreturn $n;\nreturn $n + Sum ($n - 1 );\n}\n\n// enter the range in the sum function \necho Sum(5)\n?>",
  "python": "def recursive_sum(n: int) -> int:\n    if n != 0:\n        return n + recursive_sum(n - 1)\n    return 0\n\n\nprint(recursive_sum(int(input())))\n",
  "r": "\nsum<-function(n){\n    if (n<=1){\n        return(n)\n        }else{\n        return(n+sum(n-1))\n    }\n}\nsum(5)",
  "rust": "\nfn main() {\n    let n = 10;\n    let sum = sum_of_n_natural_numbers(n);\n    println!(\"Sum of first {} natural numbers is {}\", n, sum);\n}\n\nfn sum_of_n_natural_numbers(n: i32) -> i32 {\n    if n == 0 {\n        return 0;\n    }\n    return n + sum_of_n_natural_numbers(n - 1);\n}",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "typescript",
    "go",
    "php",
    "python",
    "r",
    "rust"
  ]
}