{
  "slug": "convert-inches-to-feet",
  "title": "Convert Inches To Feet",
  "c": "#include <stdio.h>\n\nint main()\n{\n  float num, result;\n  \n  printf(\"Please enter inches: \");\n  scanf(\"%f\", &num);\n\n  result = num / 12.0;\n\n  printf(\"%0.2f inches equals to %0.2f feet\", num, result);\n  \n  return 0;\n}",
  "c-plus-plus": "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int inches;\n    cin>>inches;\n    int foot=(int)inches/12;\n    cout<<foot<<'\\n';\n    return 0;\n}",
  "c-sharp": "using System;\n\nclass MainClass {\n    public static void Main (string[] args) {\n    Console.WriteLine (\"Please enter inches:\");\n    double inches = Convert.ToDouble(Console.ReadLine());\n    double feet = inches / 12;\n    Console.WriteLine(inches+ \" inches is \"+feet + \" Feet\");\n  }\n}\n",
  "f-sharp": "let inchesToFeet (inches: float) =\n    inches / 12.0\n\n// Example usage\nlet feet = inchesToFeet 60.0\nprintfn \"%f\" feet // Output: 5.0\n",
  "java": "import java.util.*;\nimport java.io.*;\npublic class Main\n{\n\tpublic static void main(String[] args) {\n\t    System.out.print(\"Please enter the inch value: \");\n\t    Scanner sc=new Scanner(System.in);\n\t    int inches=sc.nextInt();\n\t    int feet = inches/12;\n\t   System.out.print(inches+\" inches is \"+feet+ \" feet\");\n\n\t}\n}\n",
  "javascript": "function inchesToFeet(inch) {\n  return Math.round(inch / 12);\n}\n\nconsole.log(inchesToFeet(60));\n",
  "kotlin": "fun main() {\n    print(\"Enter inches : \")\n    println()\n    var input = readLine()\n\n    println(\"$input inches = \" + ConvertInchesToFeet(input!!.toDouble()) + \" feet\")\n\n}\n\nprivate fun ConvertInchesToFeet(inches: Double): Double {\n    var cm = inches / 12\n\n    return cm\n}\n",
  "ruby": "print \"Please enter the inch value: \";\ninches = gets.chomp.to_f;  \n\nfeet = inches/12;\n\nprint \"The value in feet : #{feet.to_f.round(2)}\"\n",
  "swift": "func inchesToFeet(inches: Int) -> Int {\n    let feet = inches / 12\n    return feet\n}\n\nprint(\"Input: \", terminator: \"\")\nlet inches = Int(readLine()!)!\nlet feet = inchesToFeet(inches: inches)\nprint(\"Output: \\(feet)\")\n",
  "typescript": "const ConvertInchesToFeet = (Inches: number): number => {\n  const result: number = parseFloat((Inches / 12).toFixed(2));\n  return result;\n};\nexport default ConvertInchesToFeet;\n",
  "description": "\n## Write a program to convert inches to feet\n\n1 foot = 12 inches\n\n```txt\nInput  : 60\nOutput : 5\n```\n\n---\n",
  "trackId": 5617,
  "lastUpdated": "2023-08-03T20:39:16Z",
  "contributors": [
    "harshraj8843",
    "SambitAmanta",
    "Preetiraj3697",
    "ANUSHRAV01",
    "anandfresh",
    "patel-aum",
    "hi-Kartik2004",
    "rksp25",
    "ob-codes",
    "grraghav120",
    "anafvana",
    "Sttormx",
    "hugosmoreira",
    "Varun-Dhruv"
  ],
  "julia": "println(\"Enter length in inches:\")\ninches = parse(Float64, readline())\nfeet = inches / 12\nprintln(\"$inches inches is equal to $feet feet.\")",
  "scala": "import scala.io.StdIn._;\n\nobject inchesToFeet {\n  def main(args:Array[String]):Unit={\n    println(\"Enter the inch value : \");\n    var inches = readLine();\n    var feet = inches.toInt / 12;\n    println(inches+\" inches is \"+feet+\" feet\");\n  }\n}\n",
  "dart": "import 'dart:io';\n\nvoid main() {\n  print('Enter value in inches:');\n  String? input = stdin.readLineSync()!;\n  double result = (double.parse(input)) / 12;\n  print(result.toStringAsFixed(2));\n}\n",
  "go": "package main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar inches float64\n\tvar feets float64\n\tfmt.Scanf(\"%f\", &inches)\n\tfeets = inches / 12\n\tfmt.Println(feets)\n}\n",
  "haskell": "-- Inches to feet with integer result\ninchesToFeet:: Int -> Int\ninchesToFeet i = div i 12 \n\n-- Inches to feet with float result\ninchesToFeetFloat :: Int -> Float\ninchesToFeetFloat i = fromIntegral i / 12\n\nmain :: IO ()\nmain = do\n  -- Convert 12 inches to feet\n  let feet = inchesToFeet 12\n  -- Convert 12 inches to feet (float result)\n  let feetFloat = inchesToFeetFloat 12\n  -- Print the results\n  putStrLn $ \"12 inches is equivalent to \" ++ show feet ++ \" feet (integer result).\"\n  putStrLn $ \"12 inches is equivalent to \" ++ show feetFloat ++ \" feet (float result).\"\n",
  "php": "<?php\n\nfunction inchesToFeet($inch){\n  return round($inch/12, 2);\n}\n\necho(inchesToFeet(60));\n\n?>\n",
  "perl": "print \"Enter the inch value : \";\nmy $inch = <STDIN> ;\n\nmy $res = inches2Feet($inch);\nprint \"Feet conversion for the given inch : $res feet\";\n\nsub inches2Feet\n{\n    my ($x) = @_;\n    my $res = $x / 12;\n    return $res ;   \n}\n",
  "python": "print(round(float(input()) / 12, 2))\n",
  "r": "# function to convert inches to feet\ninches_to_feet <- function(inches) {\n  feet <- inches / 12\n  return(feet)\n}\n\nresult <- inches_to_feet(24)\nprint(result)\n",
  "rust": "fn main() {\n    // Prompt the user for the number of inches\n    println!(\"Enter the number of inches: \");\n\n    // Read the user input and store it in a variable\n    let mut inches = String::new();\n    std::io::stdin().read_line(&mut inches)\n        .expect(\"Failed to read line\");\n\n    // Check if the input is empty\n    if inches.trim().is_empty() {\n        println!(\"Please enter a valid number\");\n        return;\n    }\n\n    // Convert the input to a number\n    let inches: u32 = inches.trim().parse()\n        .expect(\"Please enter a valid number\");\n\n    // Convert inches to feet\n    let feet = inches / 12;\n\n    // Print the result\n    println!(\"{} inches is equal to {} feet\", inches, feet);\n}\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "scala",
    "dart",
    "go",
    "haskell",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}