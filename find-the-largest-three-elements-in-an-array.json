{
  "slug": "find-the-largest-three-elements-in-an-array",
  "title": "Find The Largest Three Elements In An Array",
  "c": "#include <stdio.h>\n\nvoid TheBigThree(int ARay[], int n)\n{\n    int Largest = ARay[0], secondLargest = ARay[0], thirdLargest = ARay[0];\n\n    for (int i = 1; i < n; ++i) {\n        if (ARay[i] > Largest)\n        {\n            thirdLargest = secondLargest;\n            secondLargest = Largest;\n            Largest = ARay[i];\n        }\n        else if (ARay[i] > secondLargest)\n        {\n            thirdLargest = secondLargest;\n            secondLargest = ARay[i];\n        }\n        else if (ARay[i] > thirdLargest)\n        {\n            thirdLargest = ARay[i];\n        }\n    }\n\n    printf(\"\\n The three largest elements are: %d, %d, %d\\n\", Largest, secondLargest, thirdLargest);\n}\n\nint main()\n{\n    int n;\n    printf(\"\\n [Note: The Array should have at least three elements.]\\n\\n\");\n    printf(\" Please enter the size of the array: \");\n    scanf(\"%d\", &n);\n\n    if (n < 3)\n    {\n        printf(\"\\n ERROR! Input Array Size < 3 \\n\");\n        return 1;\n    }\n\n    int* ARei = malloc(n * sizeof(int));\n    printf(\"\\n Now, enter the elements of the array:\\n\");\n\n    for (int i = 0; i < n; ++i)\n    {\n        printf(\" Element %d: \", i + 1);\n        scanf(\"%d\", &ARei[i]);\n    }\n\n    TheBigThree(ARei, n);\n    free(ARei);\n\n    return 0;\n}\n\n/* Cautiously Crafted By Redzwinger */\n",
  "c-plus-plus": "#include <iostream>\r\nusing namespace std;\r\n\r\nvoid TheBigThree(int ARay[], int n)\r\n{\r\n    int Largest = ARay[0], secondLargest = ARay[0], thirdLargest = ARay[0];\r\n\r\n    for (int i = 1; i < n; ++i) {\r\n        if (ARay[i] > Largest)\r\n        {\r\n            thirdLargest = secondLargest;\r\n            secondLargest = Largest;\r\n            Largest = ARay[i];\r\n        }\r\n        else if (ARay[i] > secondLargest)\r\n        {\r\n            thirdLargest = secondLargest;\r\n            secondLargest = ARay[i];\r\n        }\r\n        else if (ARay[i] > thirdLargest)\r\n        {\r\n            thirdLargest = ARay[i];\r\n        }\r\n    }\r\n\r\n    cout << \"\\n The three largest elements are: \" << Largest << \", \" << secondLargest << \", \" << thirdLargest << \"\\n\";\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cout << \"\\n [Note: The Array should have at least three elements.]\\n\\n\";\r\n    cout << \" Please enter the size of the array: \";\r\n    cin >> n;\r\n\r\n    if (n < 3)\r\n    {\r\n        cout << \"\\n ERROR! Input Array Size < 3 \\n\";\r\n        return 1;\r\n    }\r\n\r\n    int* ARei = new int[n];\r\n    cout << \"\\n Now, enter the elements of the array:\\n\";\r\n\r\n    for (int i = 0; i < n; ++i)\r\n    {\r\n        cout << \" Element \" << i + 1 << \": \";\r\n        cin >> ARei[i];\r\n    }\r\n\r\n    TheBigThree(ARei, n);\r\n    delete[] ARei;\r\n\r\n    return 0;\r\n}\r\n\r\n/* Cautiously Crafted By Redzwinger */",
  "f-sharp": "let input = [ 10; 4; 3; 50; 23; 90 ]\n\nlet sort = List.sortDescending input\n\nfor i = 0 to 2 do\n    printfn \"%d\" sort.[i]\n",
  "java": "import java.util.Arrays;\n\npublic class LargestThreeElements {\n    public static void main(String[] args) {\n        int[] array = {12, 45, 78, 34, 56, 23, 89, 67, 90, 32};\n\n        findLargestThreeElements(array);\n    }\n\n    public static void findLargestThreeElements(int[] array) {\n        if (array.length < 3) {\n            System.out.println(\"Array should have at least three elements\");\n            return;\n        }\n\n        Arrays.sort(array);\n\n        int n = array.length;\n\n        System.out.println(\"Largest three elements are: \");\n        System.out.println(array[n - 1]); // Largest element\n        System.out.println(array[n - 2]); // Second largest element\n        System.out.println(array[n - 3]); // Third largest element\n    }\n}\n",
  "javascript": "function largestThreeElements(arr) {\n if(arr.length < 3)\n  return 'Input array should have alteast 3 elements'\n \n arr = arr.sort((a,b) => {\n    return b-a;\n });\nreturn arr.slice(0,3);\n}\n\nconsole.log(largestThreeElements([10, 4, 3, 50, 23, 90]));\n",
  "kotlin": "fun findLargestThreeElements(arr: IntArray) {\n    if (arr.size < 3) {\n        println(\"Array size should be at least 3.\")\n        return\n    }\n\n    // Sort the array in descending order\n    arr.sortDescending()\n\n    // Print the first three elements\n    println(\"Largest three elements in the array are:\")\n    for (i in 0 until 3) {\n        print(\"${arr[i]}, \")\n    }\n}\n\nfun main() {\n    val arr1 = intArrayOf(10, 4, 3, 50, 23, 90)\n    findLargestThreeElements(arr1)\n\n    val arr2 = intArrayOf(10, 4, 3, 50, 23, 90, 1, 100, 49)\n    findLargestThreeElements(arr2)\n}\n",
  "ruby": "input = [12, 13, 1, 10, 34, 1];\nif input.length() <= 2\n  print \"Array should contain atleast 3 elements\"\nelse\n  sort = input.sort.reverse\n  result = \"#{sort[0].to_i},#{sort[1].to_i},#{sort[2].to_i}\"\n  print result\nend",
  "typescript": "function findLargestThreeElements(arr: number[]): number[] {\n    if (arr.length < 3) {\n        throw new Error(\"Array should have at least three elements\");\n    }\n\n    // Sort the array in descending order\n    arr.sort((a, b) => b - a);\n\n    // Return the first three elements\n    return arr.slice(0, 3);\n}\n\nconst test_input: number[] = [10, 4, 3, 50, 23, 90];\nconst test_output: number[] = findLargestThreeElements(test_input);\nconsole.log(\"Input:\", test_input);\nconsole.log(\"Output:\", test_output);",
  "description": "\n## Write a program to find the largest three elements in an array\n\n```txt\r\nInput  : arr[] = {10, 4, 3, 50, 23, 90}\r\nOutput : 90, 50, 23\r\n\r\nInput  : arr[] = {10, 4, 3, 50, 23, 90, 1, 100, 49}\r\nOutput : 100, 90, 50\r\n```\n\n---\n",
  "trackId": 5165,
  "lastUpdated": "2024-06-16T16:59:29Z",
  "contributors": [
    "harshraj8843",
    "David-FR",
    "anandfresh",
    "pojith",
    "RithikaReddyK",
    "pradeepch2107",
    "grinish21",
    "PunugupatiSaikumar",
    "mkdwl",
    "Redzwinger",
    "Shivamk034",
    "Amedi-Imbira"
  ],
  "julia": "array = [10, 4, 3, 50, 23, 90]\nlargest_element = sort(array,rev=true)\nprintln(string(largest_element[1],\",\", largest_element[2],\",\",largest_element[3]))\n",
  "scala": "import scala.io.StdIn.readLine\n\nobject LargestThreeElementsDynamic {\n  def main(args: Array[String]): Unit = {\n    println(\"Enter numbers separated by spaces:\")\n    val input = readLine().trim.split(\"\\\\s+\").map(_.toInt)\n    val result = findLargestThree(input)\n    println(\"Output: \" + result.mkString(\", \"))\n  }\n\n  def findLargestThree(arr: Array[Int]): Array[Int] = {\n    val sortedArr = arr.sorted\n    val n = sortedArr.length\n    if (n < 3) {\n      println(\"Array size is less than 3.\")\n      sortedArr.reverse\n    } else {\n      Array(sortedArr(n - 1), sortedArr(n - 2), sortedArr(n - 3))\n    }\n  }\n}\n\n",
  "dart": "import 'dart:io';\n\nvoid main() {\n  print(\"Enter the size of the array:\");\n  int size = int.parse(stdin.readLineSync()!);\n\n  List<int> arr = [];\n\n  for (int i = 0; i < size; i++) {\n    print(\"Enter element ${i + 1}:\");\n    int element = int.parse(stdin.readLineSync()!);\n    arr.add(element);\n  }\n\n  List<int> largestThree = findLargestThreeElements(arr);\n\n  print(\"The largest three elements in the array are:\");\n  for (int i = 0; i < largestThree.length; i++) {\n     \n    print(\"${i + 1}: ${largestThree[i]}\");\n    print(\" \");\n  }\n}\n\nList<int> findLargestThreeElements(List<int> arr) {\n  arr.sort((a, b) => b.compareTo(a)); // Sort the array in descending order\n  List<int> largestThree = [];\n\n  for (int i = 0; i < 3 && i < arr.length; i++) {\n    largestThree.add(arr[i]);\n  }\n\n  return largestThree;\n}\n",
  "go": "package main\n\nimport (\n    \"fmt\"\n    \"sort\"\n)\n\nfunc main() {\n    fmt.Println(largestThreeElements([]int{10, 4, 3, 50, 23, 90}))\n    fmt.Println(largestThreeElements([]int{10, 4, 3, 50, 23, 90, 1, 100, 49}))\n}\n\nfunc largestThreeElements(arr []int) []int {\n    // sort the input array in descending order\n    sort.Sort(sort.Reverse(sort.IntSlice(arr)))\n\n    // return the first 3 elements\n    return arr[:3]\n}\n",
  "haskell": "import Data.List (delete)\n\nfindLargestThree :: Ord a => [a] -> [a]\nfindLargestThree arr = take 3 (largestThree arr)\n\nlargestThree :: Ord a => [a] -> [a]\nlargestThree [] = []\nlargestThree [x] = [x]\nlargestThree [x, y] = [max x y]\nlargestThree (x:y:z:xs) = let largest = maximumOfThree x y z\n                           in largest : largestThree (delete largest (x:y:z:xs))\n\nmaximumOfThree :: Ord a => a -> a -> a -> a\nmaximumOfThree x y z = max x (max y z)\n\nmain :: IO ()\nmain = do\n    let arr1 = [10, 4, 3, 50, 23, 90]\n    let arr2 = [10, 4, 3, 50, 23, 90, 1, 100, 49]\n    putStrLn \"Input array 1: \"\n    print arr1\n    putStrLn \"Largest three elements: \"\n    print (findLargestThree arr1)\n    putStrLn \"Input array 2: \"\n    print arr2\n    putStrLn \"Largest three elements: \"\n    print (findLargestThree arr2)\n\n",
  "php": "<?php\n$input = array(10, 4, 3, 50, 23, 90);\n\nif(count($input) < 3 ) {\n    echo \"Array should have a minimum of 3 elements\";\n} else {\nrsort($input);\n$arrlength = count($input); \necho $input[0].\",\".$input[1].\",\".$input[2];\n}\n?>\n",
  "perl": "@input = (10, 4, 3, 50, 23, 90);\n@input = sort { $b <=> $a } @input;\nif(scalar @input < 3){\n    print \"Array should have atleast 3 elements\";\n}else{\n    print \"@input[0],@input[1],@input[2]\\n\";\n}\n",
  "python": "def main():\n    seq = [10, 4, 3, 50, 23, 90, 1, 100, 49]\n    print(largest_three_elements(seq))\n\n\ndef largest_three_elements(S):\n    \"\"\"Return the three largest elements of sequence S\"\"\"\n    max1 = S[0]\n    max2 = S[0]\n    max3 = S[0]\n\n    for val in S:\n        if val > max1:\n            max3 = max2\n            max2 = max1\n            max1 = val\n        elif val > max2:\n            max3 = max2\n            max2 = val\n        elif val > max3:\n            max3 = val\n    return (max1, max2, max3)\n\n\nif __name__ == \"__main__\":\n    main()\n",
  "r": "TheBigThree <- function(ARay) \r\n  {\r\n  if (length(ARay) < 3) \r\n    {\r\n    stop(\"ERROR! Input Array Size < 3\")\r\n  }\r\n  \r\n  sorted_arr <- sort(ARay, decreasing = TRUE)\r\n  \r\n  largest_three <- sorted_arr[1:3]\r\n  \r\n  cat(\"Output: \", paste(largest_three, collapse = \", \"), \"\\n\")\r\n}\r\n\r\nARay <- c(10, 4, 3, 50, 23, 90)\r\nTheBigThree(ARay)\r\n\r\nARay2 <- c(10, 4, 3, 50, 23, 90, 1, 100, 49)\r\nTheBigThree(ARay2)\r\n\r\n# Cautiously Crafted By Redzwinger #",
  "rust": "use std::io;\n\nfn main() {\n    println!(\"Enter the size of the array:\");\n    let mut size = String::new();\n    io::stdin().read_line(&mut size).expect(\"Failed to read line\");\n    let size: usize = size.trim().parse().expect(\"Invalid input\");\n    let mut numbers = Vec::new();\n\n    println!(\"Enter {} elements:\", size);\n    for _ in 0..size {\n        let mut input = String::new();\n        io::stdin().read_line(&mut input).expect(\"Failed to read line\");\n        let number: i32 = input.trim().parse().expect(\"Invalid input\");\n        numbers.push(number);\n    }\n    numbers.sort_by(|a, b| b.cmp(a));\n\n \n    println!(\"The largest three elements are:\");\n    for i in 0..3 {\n        println!(\"{}\", numbers[i]);\n    }\n}\n",
  "languages": [
    "c",
    "c-plus-plus",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "typescript",
    "julia",
    "scala",
    "dart",
    "go",
    "haskell",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}