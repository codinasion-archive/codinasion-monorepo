{
  "slug": "check-integer-or-float",
  "title": "Check Integer Or Float",
  "c": "#include <stdio.h>\n\nint main() {\n\n    char number[100];\n\n    int flag = 0;\n\n    printf(\"Enter the number to check integer or float: \");\n\n    scanf(\"%s\", number);\n\n    //loop through each character of input\n\n    for (int i = 0; number[i] != 0; i++) {\n\n    //if decimal \".\" is found, it means it is float\n\n        if (number[i] == '.') {\n\n            flag = 1;\n\n            break;\n\n        }\n\n    }\n\n    if (flag)\n\n    {\n\n       printf(\"\\n%s is a floating-point number.\\n\", number);\n\n    }\n\n    else{\n\n       printf(\"\\n%s is an integer number.\\n\", number);\n\n    }\n\n    return 0;\n\n}\n",
  "c-plus-plus": "// C++ Program to Check Whether a Number is Integer or Not using While loop\n\n#include <iostream>\n\nusing namespace std;\n\nint main() {\n\n    char random_number[100];\n\n    int f = 0, i = 0;\n\n    cout << \"Enter the number to check integer or float: \";\n\n    cin >> random_number;\n\n    while (random_number[i++] != '\\0') {\n\n        if (random_number[i] == '.') {\n\n            f = 1;\n\n            break;\n\n        }\n\n    }\n\n    if (f)\n\n        cout << endl << random_number << \" is a floating-point number.\\n\";\n\n    else\n\n        cout << endl << random_number << \" is an integer number.\\n\";\n\n    return 0;\n\n}\n",
  "c-sharp": "using System;\nnamespace NumCheck\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n;\n            double d;\n            Console.Write(\"Enter any number : \");\n            d = double.Parse(Console.ReadLine());\n            n = (int) d;\n            if (n == d)\n            {\n                Console.WriteLine(\"Number is Integer\");\n            }\n            else\n            {\n                Console.WriteLine(\"Number is Float\");\n            }\n            Console.ReadLine();\n        }\n    }\n}\n",
  "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class CheckIntegerOrFloat {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        String number = br.readLine();\n        boolean isInt = false;\n        boolean isFloat = false;\n        try {\n            Integer.parseInt(number);\n            isInt = true;\n        } catch (NumberFormatException ignored) {\n\n        }\n\n        try {\n            Float.parseFloat(number);\n            isFloat = true;\n        } catch (NumberFormatException ignored) {\n\n        }\n\n        if (isInt) {\n            System.out.println(\"Integer\");\n        } else if (isFloat) {\n            System.out.println(\"Float\");\n        } else {\n            System.out.println(\"Neither Integer nor Float\");\n        }\n\n    }\n}\n",
  "javascript": "/**\n * @name This program check the number is integer or float\n * @param {number} number\n * @returns {string}\n *\n * @example\n * ```js\n * const _int   = CheckIntegerOrFloat(2) // Integer\n * const _float = CheckIntegerOrFloat(3.21) // Float\n * ```\n *\n * @author Tanishq Singh\n */\nfunction CheckIntegerOrFloat(number) {\n  return number % 1 === 0 ? \"Integer\" : \"Float\";\n}\n\n// Console Tests\nconsole.log(CheckIntegerOrFloat(2) + \" // Integer\");\nconsole.log(CheckIntegerOrFloat(5.3) + \" // Float\");\n",
  "kotlin": "import java.util.*;\nfun main() {\n    val sc = Scanner(System.`in`)\n    println(\"Enter the number: \");\n    val number = sc.nextLine()\n    var isInteger = false;\n    var isFloat = false;\n    try {\n        number.toInt()\n        isInteger = true;\n    } catch (e: NumberFormatException)  {\n    }\n    try {\n        number.toFloat()\n        isFloat = true;\n    } catch (e: NumberFormatException)  {\n    }\n    if (isInteger) {\n        println(\"Integer\");\n    } else if (isFloat) {\n        println(\"Float\");\n    } else {\n        println(\"Neither float or Integer\");\n    }\n}\n",
  "ruby": "num = 1\nif num.integer?\n    print 'Integer'\nelse\n    print 'Float'\nend\n",
  "swift": "//Write a Swift program to check integer or float\nimport Foundation\n\nfunc checkNumberType(_ number: String) -> String {\n    if let integerValue = Int(number) {\n        return \"Integer\"\n    } else if let floatValue = Float(number) {\n        return \"Float\"\n    } else {\n        return \"Not a valid number\"\n    }\n}\n\nif let userInput = readLine() {\n    let result = checkNumberType(userInput)\n    print(\"Input: \\(userInput)\\nOutput: \\(result)\")\n} else {\n    print(\"Invalid input\")\n}",
  "typescript": "/**\n * @name This program check the number is integer or float\n * @param {number} number\n * @returns {string}\n *\n * @example\n * ```ts\n * const _int: number   = CheckIntegerOrFloat(2) // Integer\n * const _float: number = CheckIntegerOrFloat(3.21) // Float\n * ```\n *\n * @author Tanishq Singh\n */\nfunction CheckIntegerOrFloat(number: number): \"Integer\" | \"Float\" {\n  return number % 1 === 0 ? \"Integer\" : \"Float\";\n}\n\n// Console Tests\nconsole.log(CheckIntegerOrFloat(2) + \" // Integer\");\nconsole.log(CheckIntegerOrFloat(5.3) + \" // Float\");\n",
  "description": "\n## Write a program to check integer or float\n\n```txt\nInput  : 1\nOutput : Integer\n```\n\n---\n",
  "trackId": 4521,
  "lastUpdated": "2024-01-06T10:06:42Z",
  "contributors": [
    "harshraj8843",
    "anandfresh",
    "LeventCelik",
    "sahanasurapureddy",
    "VinayReddy-vr",
    "joao-vitor-souza",
    "priya1011",
    "codingkush",
    "mrajen27",
    "tanishq-singh-2407",
    "hrishibargal",
    "Forsigg"
  ],
  "julia": "i = 1\nif (typeof(i) == Int64) \n    println(\"Integer\") \nelseif(typeof(i) == Float64) \n    println(\"Float\") \nelse\n    println(\"Invalid Type\") \nend \n",
  "scala": "import scala.io.StdIn._;\n\nobject intergerOrFloat {\n  def main(args:Array[String]):Unit={\n    println(\"Enter a number :\");\n    var n = readLine();\n    var result = n.toIntOption.isDefined;\n    if(result){\n        println(\"Integer\");\n    } else {\n        println(\"Float\");\n    }\n  }\n}\n\n\n",
  "dart": "void main() {\n  dynamic a = 1;\n  print(a is int\n      ? \"Integer\"\n      : a is double\n          ? \"Float\"\n          : \"Unknown\");\n}\n",
  "go": "package main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n)\n\nfunc main() {\n\tvar input string\n\tfmt.Printf(\"Enter the number to check integer or float: \")\n\tfmt.Scanf(\"%s\", &input)\n\n\tif len(input) == 0 {\n\t\tlog.Println(\"Looks like you didn't enter anything. Please enter a number to continue!\")\n\t\treturn\n\t}\n\n\tflag := true\n\n\tfor i := 0; i < len(input); i++{\n\t\tif input[i] == '.'{\n\t\t\tflag = false\n\t\t\tbreak\n\t\t}\n\t}\n\t\n\tif flag{\n\t\tfmt.Println(\"Integer\")\n\t}else{\n\t\tfmt.Println(\"Float\")\n\t}\n\n}\n",
  "php": "<?php\n\nfunction checkIntegerOrFloat($num) {\n\techo strpos($num,'.') !== false ? 'Float' : 'Integer';\n}\n\necho checkIntegerOrFloat(1);\n\n?>\n",
  "perl": "print \"Enter a number: \";\nmy $input = <STDIN>;\nprint \"\\nGiven number is Integer\\n\" if ($input =~/^-?\\d+$/); \nprint \"\\nGiven number is Float\\n\" if ($input =~/^-?\\d*\\.\\d+$/);\n",
  "python": "def check_integer_or_float(input_str: str) -> None:\n    if \".\" in input_str:\n        print(\"Float\")\n    else:\n        print(\"Integer\")\n\n\nguess = input()\ncheck_integer_or_float(guess)\n",
  "r": "# Function to check if a number is an integer or a float\ncheckNumberType <- function(number) {\n  if (is.integer(number)) {\n    return(\"Integer\")\n  } else if (is.numeric(number)) {\n    return(\"Float\")\n  } else {\n    return(\"Not a valid number\")\n  }\n}\n\n# Example usage \ninputNumber <- 3.14 \nresult <- checkNumberType(inputNumber)\ncat(\"Input:\", inputNumber, \"\\nOutput:\", result, \"\\n\")\n",
  "rust": "/// # Author\n/// Written by Levent Ã‡elik, 2023.\n\n\n/// Finds the index of a character in a string.\n///\n/// # Arguments\n///\n/// `s` - String in which to search for target.\n/// `target` - Character to search in s.\n///\n/// # Returns\n///\n/// Option unwrapping to the index of target in s. \nfn find_char_index(s: &str, target: char) -> Option<usize> {\n    s.char_indices()\n        .find(|&(_, c)| c == target)\n        .map(|(index, _)| index)\n}\n\n/// Prints whether the input string represents an integer value or a floating\n/// point value. Note that this function uses mathematical logic; i.e.,\n/// \"5.0\" -> Integer.\n///\n/// # Arguments\n///\n/// `num` - String representing an number\n///\n/// # Returns\n///\n/// ()\n///\n/// # Safety\n///\n/// Does not check whether the input is valid. So, \"abc\" -> Integer\n///\nfn integer_or_float_extended(num: &str) {\n    match find_char_index(&num, '.') {\n        Some(index) => {\n            if index == num.len()-1 {\n            println!(\"Integer\");\n            return;\n            }\n            for i in index+1..num.len() {\n                if num.chars().nth(i).map_or(false, |c| c != '0') {\n                    println!(\"Float\");\n                    return;\n                }\n            }\n            println!(\"Integer\");\n        },\n        None => println!(\"Integer\")\n    }\n}\n\n/// Prints whether the input string represents an integer value or a floating\n/// point value. Note that this function uses programming logic; i.e.,\n/// \"5.0\" -> Float.\n///\n/// # Arguments\n///\n/// `num` - String representing an number\n///\n/// # Returns\n///\n/// ()\n///\n/// # Safety\n///\n/// Does not check whether the input is valid. So, \"abc\" -> Integer\nfn integer_or_float(num: &str) {\n    match find_char_index(&num, '.') {\n        Some(index) => println!(\"Float\"),\n        None => println!(\"Integer\")\n    }\n    \n}\n\nfn main() {\n    let text = \"5.0\";\n    integer_or_float(&text);\n    integer_or_float_extended(&text);\n}\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "scala",
    "dart",
    "go",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}