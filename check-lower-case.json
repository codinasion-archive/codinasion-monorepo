{
  "slug": "check-lower-case",
  "title": "Check Lower Case",
  "c": "#include <stdio.h> /*printf, scanf*/\n\nint IsLowerCase(char character);\n\nint main()\n{\n    char character = 0;\n\n    int is_good = scanf(\"%c\",&character);\n    \n    if(is_good != 1)\n    {\n        return -1;\n    }\n\n    if(IsLowerCase(character))\n    {\n        printf(\"lower case\\n\");\n    }\n\n    return 0;\n}\n\n\nint IsLowerCase(char character)\n{\n    if(character <= 'z' && character >= 'a')\n    {\n        return 1;\n    }\n\n    return 0;\n}\n",
  "c-plus-plus": "#include <iostream>\nusing namespace std;\n\nvoid checkLowerCase(char ch){\n    if(ch >= 'a' && ch <= 'z'){\n        cout << \"Lower Case\";\n    }\n    else if(ch >= 'A' && ch <= 'Z'){\n        cout << \"Upper Case\";\n    }\n    else{\n        cout << \"The character is not an alphabet\";\n    }\n}\n\nint main(){\n    char ch;\n    cout << \"Enter a character: \";\n    cin >> ch;\n    checkLowerCase(ch);\n    return 0;\n}\n",
  "c-sharp": "using System;\nusing System.Linq;\nnamespace StringCheck\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.WriteLine(lowerCase(\"a\"));\n        }\n        public static bool lowerCase(string str1)\n        {\n           return str1 == str1.ToLower();\n        }\n    }\n}\n",
  "java": "import java.util.Scanner;\n\npublic class CheckLowerCase {\n    public static void main(String []args) {\n        Scanner my_scanner = new Scanner(System.in);\n        System.out.print(\"Enter a character : \");\n        String val = my_scanner.next();\n        char ch = val.charAt(0);\n        if (Character.isLowerCase(ch)) {\n            System.out.println(\"Lower Case\");\n        } else {\n            System.out.println(\"Upper Case\");\n        }\n    }\n}\n",
  "javascript": "function checkLowerCase(str) {\n  let asciiValue = str.charCodeAt(0);\n\n  if (asciiValue >= 97 && asciiValue <= 123) {\n    console.log(\"It is Lower Case\");\n  } else {\n    console.log(\"It is not Lower Case\");\n  }\n}\n\ncheckLowerCase(\"a\");\n",
  "kotlin": "import java.util.*\nimport kotlin.test.*\n\nfun main(args: Array<String>) {\n    val scanner = Scanner(System.`in`)\n\n    //Input Character\n    print(\"Enter a character : \")\n    val char = scanner.next()[0]\n\n    val lowerCase = char.isLowerCase()\n    if(lowerCase){\n        println(\"Lower Case\")\n    } else{\n        println(\"Not Lower Case\")\n    }\n}\n",
  "ruby": "puts \"Enter a letter to check if it's lowercase: \"\nuser_input = gets\n\ndef checkLowerCase letter\n    puts letter == letter.downcase ? \"Lowercase\" : \"Not Lowercase\"\nend\n\ncheckLowerCase user_input",
  "swift": "import Swift\nimport Foundation\n\nvar x: Character = \"a\"\nprint(\"a is lowercase: \", x.isLowercase)\n\nvar y: Character = \"K\"\nprint(\"K is lowercase: \", y.isLowercase)\n",
  "typescript": "function checkLowerCase(character: string) {\n  if (character == character.toLowerCase()) {\n    return \"Lower Case\";\n  } else {\n    return \"Not Lower Case\";\n  }\n}\n",
  "description": "\n## Write a program to check lower case\n\nCheck if given character is lower case (a-z).\n\n```txt\nInput  : a\nOutput : Lower Case\n```\n\n---\n",
  "trackId": 4334,
  "lastUpdated": "2024-02-26T19:35:22Z",
  "contributors": [
    "lingalaviran",
    "anandfresh",
    "james-tharit",
    "harshraj8843",
    "Tushar12222",
    "esivakumar26",
    "hyperion912",
    "Osher160",
    "yashasvini121",
    "jfinley6",
    "rksp25",
    "tahakocabuga",
    "s4lat",
    "greeshma-d",
    "Forsigg"
  ],
  "julia": "char = 'a'\nif(islowercase(char)) \n  println(\"Lower Case\")\nelse\n  println(\"Not a Lower Case\")\nend\n",
  "perl": "my $str = <STDIN>;\nif ($str eq lc $str) {\n  print \"lower case\\n\";\n} else {\n  print \"UPPER CASE\\n\";\n}\n",
  "scala": "object HelloWorld {\n\tdef main(args: Array[String]): Unit = {\n\t  val line = scala.io.StdIn.readChar();\n\t  if(line.isLower) {\n\t    println(\"lower case\");\n\t  } else {\n\t    println(\"upper case\")\n\t  }\n\t}\n}\n",
  "dart": "void checkLower(String c){\n  int ascii = c.codeUnitAt(0);\n  if(ascii >= 97 && ascii <= 122){\n    print(\"Character is in lower case.\");\n  }\n  else{\n    print(\"Character is not in lower case.\");\n  }\n}\n\nvoid main() {\n  checkLower(\"s\");\n}",
  "go": "package main\n\nimport (\n\t\"fmt\"\n\t\"unicode\"\n)\n\nfunc main() {\n\tvar char rune\n\tfmt.Scanf(\"%c\", &char)\n\tif unicode.IsLower(char) {\n\t\tfmt.Printf(\"Character '%c' is lower case\\n\", char)\n\t} else {\n\t\tfmt.Printf(\"Character '%c' is not in lower case\\n\", char)\n\t}\n}\n",
  "php": "<?php\n\nfunction checkLowerCase($char) {\n   return ctype_lower($char) ? 'Lower Case' : ' Not a Lower Case';\n}\n\necho checkLowerCase('a');\n\n?>\n",
  "python": "def is_lower_case(char: str) -> bool:\n    if char.lower() == char:\n        return True\n    else:\n        return False\n\n\nchar_inp = input()\nif char_inp.isalpha():\n    if is_lower_case(char_inp):\n        print(\"Lower Case\")\n    else:\n        print(\"Not Lower Case\")\nelse:\n    print(\"Not a valid string\")\n",
  "r": "check_lower_case <- function(char) {\n  if (char %in% letters) {\n    return(\"Lower Case\")\n  } else {\n    return(\"Not Lower Case\")\n  }\n}\n\n# Example usage:\ninput_char <- 'A'\nresult <- check_lower_case(input_char)\ncat(\"Output:\", result)\n",
  "rust": "use std::io::{self, Write};\n\nfn main() { \n   print!(\"Input: \");\n    io::stdout().flush().expect(\"flush failed!\");\n\n    let mut str = String::new();\n    match io::stdin().read_line(&mut str) {\n        Ok(_) => (),\n        Err(err) => println!(\"Could not parse input: {}\", err)\n    }\n\n    for i in str.chars() {\n        if i.is_uppercase() {\n          println!(\"Output: Upper Case\");\n            return;\n        }\n    }\n    println!(\"Output: Lower Case\")\n}\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "perl",
    "scala",
    "dart",
    "go",
    "php",
    "python",
    "r",
    "rust"
  ]
}