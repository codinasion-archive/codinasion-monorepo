{
  "slug": "find-average-of-numbers",
  "title": "Find Average Of Numbers",
  "c": "#include <stdio.h>\nint main()\n{\n    int numEl, i, size = 10;\n    float num[size], result = 0.00, avg;\n\n    printf(\"Enter the numbers of elements: \");\n    scanf(\"%d\", &numEl);\n    while (numEl > size || numEl < 1)\n    {\n        printf(\"Enter a valid range (1 - 10).\\n\");\n        printf(\"Enter the number of element again: \");\n        scanf(\"%d\", &numEl);\n    }\n    for (i = 0; i < numEl; ++i)\n    {\n        scanf(\"%f\", &num[i]);\n        result += num[i];\n    }\n\n    avg = result / numEl;\n    printf(\"Average :%.2f\", avg);\n    return 0;\n}\n",
  "c-plus-plus": "#include<iostream>\nusing namespace std;\nint main(){\n    int numEl, i, size = 10;\n    float num[size], result = 0.0, avg;\n\n    cout << \"Enter the numbers of elements :\";\n    cin >> numEl;\n    while (numEl > size || numEl < 1)\n    {\n        cout << \"Enter a valid range (1 - 10).\\n\" ;\n        cout <<\"Enter the number of element again :\";\n        cin >> numEl\n    }\n    for (i = 0; i < numEl; ++i)\n    {\n        cin >> num[i];\n        result += num[i];\n    }\n    avg = result / numEl;\n   cout << \"Average :%.2f\" << avg;\n    return 0;\n}",
  "c-sharp": "using System;\nusing System.IO;\npublic class Average\n{\n  public static void Main()\n  {\n     double number1,number2,number3,number4;\n\n     Console.Write(\"Enter the First number: \");\n     number1 = Convert.ToDouble(Console.ReadLine());\n\n     Console.Write(\"Enter the Second number: \");\n     number2 = Convert.ToDouble(Console.ReadLine());\n\n     Console.Write(\"Enter the third number: \");\n     number3 = Convert.ToDouble(Console.ReadLine());\n\n     Console.Write(\"Enter the fourth number: \");\n     number4 = Convert.ToDouble(Console.ReadLine());\n\n     double result = (number1 + number2 + number3 + number4) / 4;\n     Console.WriteLine(\"The average of {0}, {1}, {2}, {3} is: {4} \",\n  number1, number2, number3, number4, result);\n   }\n}",
  "java": "class FindAverageOfNumbers {\n    public static void main(String[] args) {\n        int num = 12345;\n        int sum = 0;\n        int size = 0;\n\n        while (num != 0) {\n            sum += num % 10;\n            size++;\n            num = num / 10;\n        }\n\n        int average = sum / size;\n\n        System.out.println(average);\n    }\n}",
  "javascript": "/**\n *\n * @name This program find average of numbers given.\n * @param {number[]} nums Array of numbers\n * @returns {number}\n *\n * @example\n * ```js\n * const avg1 = FindAverageOfNumbers(2, 4, 6) // 4\n * const avg2 = FindAverageOfNumbers(1, 2, 3, 4, 5) // 3\n * ```\n */\nfunction FindAverageOfNumbers(...nums) {\n  let sum = 0;\n  nums.map((val) => (sum += val));\n\n  return sum / nums.length;\n}\n\n// Console Tests\nconsole.log(\"Average of 2, 4, and 6.\");\nconsole.log(\"That is\" + FindAverageOfNumbers(2, 4, 6) + \"// 4\");\n\nconsole.log(\"Average of 1, 2, and 3.\");\nconsole.log(\"That is\" + FindAverageOfNumbers(1, 2, 3) + \"// 2\");\n\nconsole.log(\"Average of 12, and 43.\");\nconsole.log(\"That is\" + FindAverageOfNumbers(12, 43) + \"// 27.5\");\n",
  "kotlin": "fun main() {\n    print(\"Input : \")\n    println()\n    var input = readLine()\n\n    println(\"Average of number $input is : \" + FindAverageOfNumbers(input!!))\n\n}\n\nprivate fun FindAverageOfNumbers(input: String): Double {\n    val list = input.toCharArray().map(Character::getNumericValue)\n\n    val avg = list.average()\n\n    return avg\n}",
  "ruby": "def findAverageOfNumbers numArray\n    average = (numArray.reduce(:+) / numArray.count.to_f).to_s\n    puts average.to_s.gsub(/(\\.)0+$/, '')  #to_s.gsub method strips any trailing zeros\nend\n\nfindAverageOfNumbers [1,2,3,4,5]",
  "swift": "import Swift\nimport Foundation\n\nvar myArray : [Int] = [1,2,3,4,5]\nvar arraySum = myArray.reduce(0, +)\nvar length = myArray.count\nvar average = Double(arraySum)/Double(length)\n\nprint(\"Array:\", myArray)\nprint(\"Average:\", average)\n",
  "typescript": "/**\n *\n * @name This program find average of numbers given.\n * @param {number[]} nums Array of numbers\n * @returns {number}\n *\n * @example\n * ```js\n * const avg1: number = FindAverageOfNumbersTs(2, 4, 6) // 4\n * const avg2: number = FindAverageOfNumbersTs(1, 2, 3, 4, 5) // 3\n * ```\n */\nfunction FindAverageOfNumbersTs(...nums: number[]): number {\n  let sum = 0;\n  nums.map((val) => (sum += val));\n\n  return sum / nums.length;\n}\n\n// Console Tests\nconsole.log(\"Average of 2, 4, and 6.\");\nconsole.log(\"That is\" + FindAverageOfNumbersTs(2, 4, 6) + \"// 4\");\n\nconsole.log(\"Average of 1, 2, and 3.\");\nconsole.log(\"That is\" + FindAverageOfNumbersTs(1, 2, 3) + \"// 2\");\n\nconsole.log(\"Average of 12, and 43.\");\nconsole.log(\"That is\" + FindAverageOfNumbersTs(12, 43) + \"// 27.5\");\n",
  "description": "\n## Write a program to find average of numbers\n\nAverage of numbers is the sum of all numbers divided by the number of numbers.\n\n```txt\nInput  : 1 2 3 4 5\nOutput : 3\n```\n\n---\n",
  "trackId": 1855,
  "lastUpdated": "2024-06-16T16:59:29Z",
  "contributors": [
    "harshraj8843",
    "Varshitha-vankadaru",
    "anandfresh",
    "vedantpople4",
    "esivakumar26",
    "jfinley6",
    "rksp25",
    "joao-vitor-souza",
    "thekavikumar",
    "koookee",
    "tanishq-singh-2407",
    "Harsh3341",
    "grraghav120",
    "KaptainCS3"
  ],
  "julia": "using Statistics\nA = [1 2 3 4 5]\nprintln(mean(A))\n",
  "scala": "object HelloWorld {\n \tdef main(args: Array[String]): Unit = {\n \t  var nums = Array(1, 2, 3, 4, 5);\n \t  \n \t  //Sum using for loop\n    var total = 0.0;      \n    for ( i <- 0 to (nums.length - 1)) {\n      total += nums(i);\n    }\n    println(s\"\\nAverage value of the array elements is: ${total/nums.length}\");\n \t}\n }\n",
  "go": "package main\n\nimport \"fmt\"\n\nfunc main() {\n\tarr := [5]int{1, 2, 3, 4, 5}\n\tvar sum int\n\tfor i := 0; i < 5; i++ {\n\t\tsum += arr[i]\n\t}\n\tfmt.Println(float64(sum / len(arr)))\n\n}\n",
  "php": "<?php\n$input = readline(\"Enter numbers seperated by a space: \");\n$arr = explode(\" \", $input);\n$sumOfNums = 0;\nfor ($i = 0; $i <= count($arr); $i++) {\n    $sumOfNums += $arr[$i];\n}\n$average = $sumOfNums / count($arr);\necho \"The average is $average\";\n?>",
  "perl": "print \"Enter the number of elements: \";\nmy $n = <STDIN>;\nchomp $n;\nmy $sum = 0;\nfor (my $i = 0; $i < $n; $i++) {\n  print \"Enter element \" . ($i+1) . \": \";\n  my $num = <STDIN>;\n  chomp $num; \n  $sum += $num;\n}\nmy $average = $sum / $n;\nprintf \"Average = %.2f\\n\", $average;\n",
  "python": "lst = list(map(int, input().split(\" \")))\nsum = 0\nn = len(lst)\nfor i in range(0, n):\n    sum = sum + lst[i]\nprint(sum / n)\n",
  "rust": "fn main(){\n    let numbers = vec![1,2,3,4,5,6,7,8,9,10];\n    let avg: f32;\n    let mut sum: i32 = 0;\n    {\n        for i in &numbers{\n            sum = sum + i;\n        }\n        avg = sum as f32 / numbers.len() as f32;\n    } \n    println!(\"{}\", avg);\n}",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "scala",
    "go",
    "php",
    "perl",
    "python",
    "rust"
  ]
}