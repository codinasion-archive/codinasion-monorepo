{
  "slug": "convert-hexadecimal-to-octal",
  "title": "Convert Hexadecimal To Octal",
  "c": "#include <stdio.h>\n#include <string.h>\n\n// This gives value of char in decimal\nint NumberCharToValue(char ch, int base)\n{\n    if (ch >= '0' && ch <= '9')\n    {\n        return (int)(ch - '0');\n    }\n    // next will be A,B,C....\n    return ((int)(ch - 'A') + 10);\n}\n// This gives char of value in decimal\nchar NumberValueToChar(int num, int base)\n{\n    if (num <= 9)\n    {\n        return (char)('0' + num);\n    }\n    // num will be 10,11,12 ...\n    return (char)(num - 10 + 'A');\n}\n// idea is to convert input to decimal then from decimal to output\nvoid convertNumberSystem(char *input, char *output, int fromBase, int toBase)\n{\n    // convert input to decimal\n    int inputLength = strlen(input);\n    long long decimal = 0, digitPower = 1;\n\n    for (int i = inputLength - 1; i >= 0; i--)\n    {\n        decimal += NumberCharToValue(input[i], fromBase) * digitPower;\n        digitPower *= fromBase;\n    }\n    // convert decimal to reversed output\n    int outputIndex = 0;\n    while (decimal != 0)\n    {\n        output[outputIndex++] = NumberValueToChar(decimal % toBase, toBase);\n        decimal /= toBase;\n    }\n\n    // reverse the output to get actual output\n    for (int i = 0; i < outputIndex / 2; i++)\n    {\n        int temp = output[i];\n        output[i] = output[outputIndex - i - 1];\n        output[outputIndex - i - 1] = temp;\n    }\n}\n\nint main()\n{\n\n    char input[10000], output[10000];\n\n    scanf(\"%s\", input);\n\n    convertNumberSystem(input, output, 16, 8); // This function can convert from a number from any base to another base\n\n    printf(\"%s\\n\", output);\n\n    return 0;\n}",
  "c-plus-plus": "#include <iostream>\r\n#include <string>\r\n#include <unordered_map>\r\n#include <math.h>\r\n\r\nusing namespace std;\r\n\r\nstring hex_to_oct(string hex_num) {\r\n    // Map containing hexadecimal to decimal conversion\r\n    unordered_map<char, int> hex_to_dec_map = {\r\n            {'0', 0},\r\n            {'1', 1},\r\n            {'2', 2},\r\n            {'3', 3},\r\n            {'4', 4},\r\n            {'5', 5},\r\n            {'6', 6},\r\n            {'7', 7},\r\n            {'8', 8},\r\n            {'9', 9},\r\n            {'A', 10},\r\n            {'B', 11},\r\n            {'C', 12},\r\n            {'D', 13},\r\n            {'E', 14},\r\n            {'F', 15}\r\n    };\r\n    int decimal = 0;\r\n    int p = hex_num.length() - 1;\r\n    for (char d: hex_num) {\r\n        decimal += pow(16, p) * hex_to_dec_map[d];\r\n        p--;\r\n    }\r\n    string octal_str = \"\";\r\n    while (decimal != 0) {\r\n        int rest = decimal % 8;\r\n        octal_str = to_string(rest) + octal_str;\r\n        decimal /= 8;\r\n    }\r\n    return octal_str;\r\n}\r\n\r\nint main() {\r\n    string hex_num;\r\n    cout << \"Type a HexaDecimal number: \"; // Type a number and press enter\r\n    cin >> hex_num; // Get user input from the keyboard\r\n    cout << \"Your Octal number is:\" << endl;\r\n    cout << hex_to_oct(hex_num) << endl;\r\n    return 0;\r\n}",
  "c-sharp": "using System;\nclass HexaToOctal{\npublic static void Main(string[] args)\n{\n  int dec = 0;\n  Console.WriteLine (\"Please enter a hexadecimal value : \");\n  string hexa = Console.ReadLine();\n  int c = hexa.Length - 1;\n\n  for(int i = 0; i < hexa.Length ; i ++ )\n  {\n    char ch = hexa[i];\n    switch (ch)\n    {\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n        dec = dec + Int32.Parse(ch.ToString())*\n                               (int)Math.Pow(16, c);\n        c--;\n        break;\n      case 'a':\n      case 'A':\n        dec = dec + 10 * (int)Math.Pow(16, c);\n        c--;\n        break;\n      case 'b':\n      case 'B':\n        dec = dec + 11 * (int)Math.Pow(16, c);\n        c--;\n        break;\n      case 'c':\n      case 'C':\n        dec = dec + 12 * (int)Math.Pow(16, c);\n        c--;\n        break;\n      case 'd':\n      case 'D':\n        dec = dec + 13 * (int)Math.Pow(16, c);\n        c--;\n        break;\n      case 'e':\n      case 'E':\n        dec = dec + 14 * (int)Math.Pow(16, c);\n        c--;\n        break;\n      case 'f':\n      case 'F':\n        dec = dec + 15 * (int)Math.Pow(16, c);\n        c--;\n        break;\n      default:\n        Console.Write(\"Invalid hexa input\");\n        break;\n    }\n  }\n\n  string oct = \"\";\n  while(dec > 0)\n  {\n    oct = dec % 8 + oct;\n    dec = dec / 8;\n  }\n\n  Console.Write(\"Equivalent Octal Value = \"+oct);\n}\n}\n",
  "java": "public class hexadecimalToOctal {\n    static String hexatoOctal(String hex){\n        Integer binary=Integer.parseInt(hex,16);\n        return Integer.toOctalString(binary);\n    }\n\n    public static void main(String[] args) {\n        System.out.println(hexatoOctal(\"7B316\"));\n    }\n    \n  }\n  ",
  "javascript": "function convertHexadecimalToOctal(hex) {\n  const decimal = parseInt(hex, 16);\n  return decimal.toString(8);\n}\n\nlet input = \"A\";\nconsole.log(\n  `Hexadecimal '${input}' in octal is: '${convertHexadecimalToOctal(input)}'`,\n);\n",
  "kotlin": "import kotlin.math.pow\n\nfun main() {\n    print(\"Enter Hexadecimal Number to Convert in Octal: \")\n    val num = readln()\n    print(\"Octal Number is: ${convertHexadecimalToOctal(num)}\")\n}\n\nprivate fun convertHexadecimalToOctal(nums: String): Int {\n    val decimal = convertHexadecimalToDecimal(nums)\n    return convertDecimalToOctal(decimal)\n}\n\nprivate fun convertDecimalToOctal(decimal: Int): Int {\n    var digit = decimal % 8\n    var rem = decimal\n    var i = 0\n    var octal = 0\n    while (rem != 0) {\n        octal += digit * 10.0.pow(i).toInt()\n        rem /= 8\n        digit = rem % 8\n        i++\n    }\n    return octal\n}\n\nprivate fun convertHexadecimalToDecimal(str: String): Int {\n    var num = 0\n    var i = str.lastIndex\n    str.forEach {\n        val digit = when (it) {\n            'A' -> 10\n            'B' -> 11\n            'C' -> 12\n            'D' -> 13\n            'E' -> 14\n            'F' -> 15\n            else -> it - '0'\n        }\n        num += 16.0.pow(i).toInt() * digit\n        i--\n    }\n    return num\n}",
  "ruby": "def hex_to_decimal(hex)\n  decimal = 0\n  hex = hex.reverse.upcase # Reverse the hexadecimal string and convert to uppercase\n\n  hex.each_char.with_index do |char, index|\n    digit_value = case char\n      when '0'..'9' then char.to_i\n      when 'A'..'F' then char.ord - 'A'.ord + 10\n      else\n        raise ArgumentError, \"Invalid hexadecimal digit: #{char}\"\n    end\n\n    decimal += digit_value * (16 ** index)\n  end\n\n  return decimal\nend\n\ndef decimal_to_octal(decimal)\n  octal = \"\"\n  while decimal > 0\n    remainder = decimal % 8\n    octal = remainder.to_s + octal\n    decimal /= 8\n  end\n\n  return octal\nend\n\n# Input hexadecimal number\nprint \"Enter a hexadecimal number: \"\nhexadecimal = gets.chomp\n\nbegin\n  decimal = hex_to_decimal(hexadecimal)\n  octal = decimal_to_octal(decimal)\n  puts \"Octal representation: #{octal}\"\nrescue ArgumentError => e\n  puts \"Error: #{e.message}\"\nend\n",
  "swift": "class HexadecimalToOctalConverter {\n    func hexToDecimal(_ hex: String) -> Int {\n        let decimal = Int(hex, radix: 16) ?? 0\n        return decimal\n    }\n    \n    func decimalToOctal(_ decimal: Int) -> String {\n        var decimalNumber = decimal\n        var octalNumber = \"\"\n        \n        while decimalNumber != 0 {\n            let remainder = decimalNumber % 8\n            octalNumber = String(remainder) + octalNumber\n            decimalNumber /= 8\n        }\n        \n        return octalNumber\n    }\n    \n    func hexToOctal(_ hex: String) -> String {\n        let decimal = hexToDecimal(hex)\n        let octal = decimalToOctal(decimal)\n        return octal\n    }\n}\n\n\nlet converter = HexadecimalToOctalConverter()\nlet hexInput = \"A\"\nlet octalOutput = converter.hexToOctal(hexInput)\nprint(\"Output: \\(octalOutput)\") // Output: 12\n",
  "typescript": "function convertHexadecimalToOctal(hex: string): string {\n  const decimal: number = parseInt(hex, 16);\n  return decimal.toString(8);\n}\n\nconst input = \"A\";\nconsole.log(\n  `Hexadecimal '${input}' in octal is: '${convertHexadecimalToOctal(input)}'`,\n);\n",
  "description": "\n## Write a program to convert hexadecimal to octal\n\nHexadecimal is a base-16 number system. It uses sixteen digits: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, and F. The digits are called hexits. A hexit is the smallest unit of information in a computer. A hexit can be used to represent a single value, such as 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, or F, or it can be used to represent a single state, such as on or off.\n\nOctal is a base-8 number system. It uses only eight digits: 0, 1, 2, 3, 4, 5, 6, and 7. The digits are called octits. An octit is the smallest unit of information in a computer. An octit can be used to represent a single value, such as 0, 1, 2, 3, 4, 5, 6, or 7, or it can be used to represent a single state, such as on or off.\n\nTo convert a hexadecimal number to octal, we can use the following algorithm:\n\n1. Convert the hexadecimal number to decimal.\n2. Convert the decimal number to octal.\n\n```txt\nInput  : A\nOutput : 12\n```\n\n---\n",
  "trackId": 1432,
  "lastUpdated": "2024-04-21T18:12:59Z",
  "contributors": [
    "AMiracle-creator",
    "harshraj8843",
    "madhusgowda",
    "anandfresh",
    "RiteshK-611",
    "AdityaNarayanPradhan",
    "ohad1s",
    "joao-vitor-souza",
    "UsmanFani",
    "CodingWithHardik",
    "jyotik09",
    "rahmat-dev",
    "amoghrajesh",
    "Anuj-Rathore24"
  ],
  "julia": "println(\"Enter a hexadecimal number: \") \nx = readline()\ny = parse(Int, x, base=16)\ny = string(y, base=8)\nprintln(\"Octal of \", x, \": \", y)",
  "go": "package main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"strconv\"\n)\n\nfunc main() {\n\tvar hex string\n\tfmt.Scanln(&hex)\n\n\t// first convert to decimal\n\tdecimal, err := strconv.ParseInt(hex, 16, 64)\n\n\tif err != nil {\n\t\tfmt.Errorf(\"could not convert hex: %v to octal\", hex)\n\t\tos.Exit(1)\n\t}\n\n\t// convert the decimal to octal\n\toct := fmt.Sprintf(\"%o\", decimal)\n\tfmt.Printf(\"the octal for hex: %v is oct: %v \\n\", hex, oct)\n}\n",
  "php": "<?php\n\nfunction convert_hexadecimal_to_octal($input)\n{\n\treturn decoct(hexdec($input));\n}\n\necho convert_hexadecimal_to_octal('A');\n",
  "perl": "print \"Enter the hexadecimal value :\";\nmy $hex_str = hex(<STDIN>);\nmy $oct_value = sprintf(\"%o\", $hex_str);\nprint \"Equivalent Octal value :\".$oct_value;\n",
  "python": "def HexToOct(h):\n    return oct(int(h, 16))\n\n\nprint(\"Input  : \", end=\"\")\nhnum = input()\n\nonum = HexToOct(hnum)\nprint(\"Output : \", onum[2:])\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "go",
    "php",
    "perl",
    "python"
  ]
}