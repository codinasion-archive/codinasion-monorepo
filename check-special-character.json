{
  "slug": "check-special-character",
  "title": "Check Special Character",
  "c": "#include <stdio.h>\n\nvoid charCheck(char ch){\n\tif ( !(((ch >= 65 && ch <= 90) || (ch >= 97 && ch <= 122))) && !(ch >= 48 && ch <= 57)  )\n        printf(\"Special Character\");\n    else \n        printf(\"Not a Special Character\");\n}\n\n// Driver Code\nint main()\n{\n    char ch;\n    scanf(\"%c\", &ch);\n\tcharCheck(ch);\n\treturn 0;\n}\n",
  "c-plus-plus": "#include <iostream>\nusing namespace std;\n\nvoid charCheck(char input_char){\n\tif ( !(((input_char >= 65 && input_char <= 90) || (input_char >= 97 && input_char <= 122))) && !(input_char >= 48 && input_char <= 57)  )\n\t\tcout << \"Special Character \";\n    else \n        cout<<\"Not A Special Character\";\n}\n\n// Driver Code\nint main()\n{\n\tchar input;\n    cin>>input;\n\tcharCheck(input);\n\treturn 0;\n}",
  "c-sharp": "using System;\nusing System.Text.RegularExpressions;\nclass SpecialCharacters{\n\npublic static void onlySpecialchars(String str)\n{\nString regex = \"[^a-zA-Z0-9]+\";\n\nRegex rgex = new Regex(regex);\n\nif (str == null)\n{\n\tConsole.WriteLine(\"Not a Special Character\");\n\treturn;\n}\n\nMatchCollection matchedAuthors = rgex.Matches(str);\n\nif (matchedAuthors.Count != 0)\n\tConsole.WriteLine(\"Special Character\");\nelse\n\tConsole.WriteLine(\"Not a Special Character\");\n}\n\npublic static void Main(String []args)\n{\n\nString str = \"@\";\n\nonlySpecialchars(str);\n}\n}\n",
  "java": "import java.util.*;\n\npublic class SpecialChar {\n\n    public static void main(String[] args) {\n\n        String specialCharacters = \" !#$%&'()*+,-./:;<=>?@[]^_`{|}\";\n\n        System.out.println(\"Enter the Character : \");\n        Scanner scanner = new Scanner(System.in);\n\n        char c = scanner.next().charAt(0);\n        if (specialCharacters.contains(Character.toString(c))) {\n\n            System.out.println(\"Special character\");\n        } else {\n            System.out.println(\"Not a Special character\");\n\n        }\n\n    }\n\n}\n",
  "javascript": "// function to check for special character\nfunction checkSpecialCharacter(char) {\n  const reg = /[^a-zA-Z0-9]/g;\n  return reg.test(char);\n}\n\nconst callFun = checkSpecialCharacter(\"*\");\nconsole.log(callFun);\n",
  "kotlin": "package com.includehelp.basic\n\nimport java.util.*\n\n\nfun main(args: Array<String>) {\n\n    val scanner = Scanner(System.`in`)\n\n    //Input Character\n    print(\"Enter Character : \")\n    val char = scanner.next()[0]\n\n    when {\n        char.isDigit() ->\n        char.isLetter() ->\n        else -> println(\"Special Character\")\n    }\n}\n",
  "swift": "import Swift\nimport Foundation\n\nlet characterset = CharacterSet(charactersIn:\n   \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n)\nlet givenCharacter = \"@\"\n\nif givenCharacter.rangeOfCharacter(from: characterset.inverted) != nil {\n   print(\"Special Character\")\n} else {\n  print(\"Not a Special Character\")\n}\n",
  "typescript": "function checkSpecialCharacter(str: string) {\n  let isSpecialCharacter = \"false\";\n  const format = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n\n  if (format.test(str)) {\n    isSpecialCharacter = \"true\";\n  } else {\n    isSpecialCharacter = \"false\";\n  }\n\n  console.log(isSpecialCharacter);\n}\n\ncheckSpecialCharacter(\">\");\n",
  "description": "\n## Write a program to check special character\n\nCheck if given character is a special character (not a letter or a number).\n\n```txt\nInput  : @\nOutput : Special Character\n```\n\n---\n",
  "trackId": 2961,
  "lastUpdated": "2024-03-28T15:30:29Z",
  "contributors": [
    "anandfresh",
    "harshraj8843",
    "esivakumar26",
    "0ME9A",
    "joao-vitor-souza",
    "Marsh-sudo",
    "prajwalprogrammer",
    "Suraj-Kumar-07",
    "vedang-eng",
    "PoweredByCaffein",
    "greeshma-d"
  ],
  "scala": "object HelloWorld {\n\tdef main(args: Array[String]): Unit = {\n\t  val string = scala.io.StdIn.readLine();\n\t  if(string.matches(\"^[a-zA-Z0-9]*$\")){\n\t    println(\"String does not contain Special Charaters\");\n\t  } else {\n\t    println(\"String contains Special Charaters\");\n\t  }\n\t}\n}\n",
  "dart": "void main() {\n  final regExp = RegExp(\n    r'[\\^$*.\\[\\]{}()?\\-\"!@#%&/\\,><:;_~`+='\n    \"'\"\n    ']'\n  );\n  \n  final string = '@';\n\n  if(string.contains(regExp))\n    print(\"Special Character\");\n  else\n    print(\"Not a Special Character\");\n}\n",
  "php": "<?php\n  $string = readLine(\"Enter String: \");\n  if (preg_match('/[\\'^£$%&*()}{@#~?><>,|=_+¬-]/', $string)) {\n    echo \"one or more 'special characters' found\";\n  } else {\n    echo \"no 'special characters' found\";\n  }\n?>\n",
  "perl": "print \"Please enter a character: \";\nmy $char = <STDIN>;\nchomp $char;\n\nif ($char =~ /[^a-zA-Z0-9]/) {\n    print \"Special Character\\n\";\n} else {\n    print \"Not a Special Character\\n\";\n}\n",
  "python": "import re\n\n\n# function to check for special character\ndef run(string):\n    regex = re.compile(\"[@_!#$%^&*()<>?/\\|}{~:]\")\n    if regex.search(string) == None:\n        print(\"Not a special character found!\")\n    else:\n        print(\"This is a special character\")\n\n\n# driver code\nif __name__ == \"__main__\":\n    user = input(\"Input:\")\n    run(user)\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "java",
    "javascript",
    "kotlin",
    "swift",
    "typescript",
    "scala",
    "dart",
    "php",
    "perl",
    "python"
  ]
}