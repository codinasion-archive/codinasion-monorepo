{
  "slug": "divide-two-numbers",
  "title": "Divide Two Numbers",
  "c": "#include <stdio.h> /* printf, scanf */\n\n/* divides number1 with number2 */\nfloat DivideTwoNumbers(int num1, int num2);\n\nint main()\n{\n    int num1 = 0;\n    int num2 = 0;\n    printf(\"please enter two numbers to divide\\n\");\n\n    if(scanf(\"%d%d\",&num1,&num2) != 2)\n    {\n        return -1;\n    }\n\n    printf(\"%.2f\\n\",DivideTwoNumbers(num1,num2));\n\n    return 0;\n}\n\nfloat DivideTwoNumbers(int num1, int num2)\n{\n    return (((float)num1 / num2));\n}",
  "c-plus-plus": "#include <iostream> // cout, cin\nusing namespace std;\n\nfloat Divide2Numbers(int x, int y);\n\nint main()\n{\n    int x = 0;\n    int y = 0;\n\n    cout << \"please enter two numbers to divide:\" << endl;\n\n    cin >> x;\n    cin >> y;\n\n    cout << Divide2Numbers(x,y);\n}\n\nfloat Divide2Numbers(int x, int y)\n{\n    return ((static_cast<float> (x)) / y);\n}\n",
  "c-sharp": "using System;\nnamespace Sample {\n   class Demo {\n      static void Main(string[] args) {\n         int num1 = 50;\n         int num2 = 25;\n         int result;\n         result = num1 / num2;\n         Console.WriteLine(\"Division: Value is {0}\", result); \n      }\n   }\n}\n",
  "f-sharp": "let divideTwoNumbers num1 num2 : float =\n  num1 / num2\n\nlet result =  divideTwoNumbers 2.0 4.0\n\nprintfn \"Division of given two numbers : %f\" result\n",
  "java": "package MyClass;\nimport java.util.Scanner;\npublic class DivideTwoNumbers {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tdouble a = sc.nextInt();\n\t\tdouble b = sc.nextInt();\n\t\t\n\t\t double divide = a / b;\n\t\tSystem.out.println(divide);\n\n\t}\n\n}\n",
  "javascript": "// Program to divide two numbers using JavaScript\nfunction divideTwoNumbers(num1, num2) {\n  if (num2 === 0) {\n    console.error(\"Divide by Zero Error!\");\n    return null;\n  }\n  return num1 / num2;\n}\n\n// Testing on Browser\n// const n1 = prompt(\"Num 1: \");\n// const n2 = prompt(\"Num 2: \");\n// alert(divideTwoNumbers(n1, n2));\n\n// Console Tests\nconst n1 = 15;\nconst n2 = 5;\nconsole.log(\"Normal Case\");\nconsole.log(`Input: n1 = ${n1} and n2 = ${n2}`);\nconsole.log(`Output: ${divideTwoNumbers(n1, n2)}`);\nconsole.log(\"Edge Case\");\nconsole.log(`Input: n1 = ${n1} and n2 = 0`);\nconsole.log(`Output: ${divideTwoNumbers(n1, 0)}`);\n",
  "kotlin": "import kotlin.math.PI\nimport java.util.Scanner\n\nfun main(args: Array<String>) {\n  val scanner = Scanner(System.`in`)\n  val a = scanner.nextDouble()\n  val b = scanner.nextDouble()\n\n  val division = a / b\n  println(division)\n}\n",
  "ruby": "print \"Enter first number : \"\na = gets.chomp.to_f\nprint \"Enter second number : \"\nb = gets.chomp.to_f\nc=a/b\nprint \"Answer : %.1f\" %c",
  "swift": "import Swift\nimport Foundation\n\nfunc divide(num1: Double, num2: Double) -> Double {\n  return num1/num2\n}\n\nvar result = divide(num1:2, num2:8)\nprint(\"Result: \", result)\n",
  "typescript": "const firstNumber = 2;\nconst secondNumber = 4;\n\nfunction divide(n1: number, n2: number): number {\n  return n1 / n2;\n}\n\nconsole.log(\"First Number: \", firstNumber);\nconsole.log(\"Second Number: \", secondNumber);\n\nconsole.log(\"Output : \", divide(firstNumber, secondNumber));\n",
  "description": "\n## Write a program to divide two numbers\n\n```txt\nInput  : 2 4\nOutput : 0.5\n```\n\n---\n",
  "trackId": 105,
  "lastUpdated": "2023-08-03T20:39:16Z",
  "contributors": [
    "harshraj8843",
    "anandfresh",
    "nicoleSosa",
    "esivakumar26",
    "Osher160",
    "joao-vitor-souza",
    "PraaneshSelvaraj",
    "Zeuhz-Droid",
    "praveenscience",
    "renanlmiranda",
    "Arun8850",
    "anastazir",
    "ashankritwik07"
  ],
  "julia": "print(\"Enter the first number: \")\nnum1 = parse(Float64, readline(stdin))\nprint(\"Enter the second number: \")\nnum2 = parse(Float64, readline(stdin))\nprintln(\"Output: \", num1 / num2)",
  "scala": "import scala.io.StdIn._;\n\nobject divideNumbers {\n  def main(args:Array[String]):Unit={\n    val num1 = readLine().toFloat;\n    println(\"Enter the number 1 : \"+num1);\n    val num2 = readLine().toFloat;\n    println(\"Enter the number 2 : \"+num2);\n    val div = num1/num2;\n    println(\"Division of given two numbers :\"+div);\n  }\n}\n",
  "dart": "import 'dart:io';\nvoid main(){\n  print(\"Enter the number 1 :\");\n  var num1 = double.parse(stdin.readLineSync()!);\n  print(\"Enter the number 2 :\");\n  var num2 = double.parse(stdin.readLineSync()!);\n  var divide = num1/num2;\n  print('Division of two given numbers : $divide');\n}\n",
  "go": "package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc divide(dividend int, divisor int) int {\n\toutput := dividend / divisor\n\n\treturn output\n}\n\nfunc main() {\n\toutput := divide(10, 2)\n\tfmt.Println(output)\n\n\toutput := divide(2, 4)\n\tfmt.Println(output)\n}",
  "php": "<?php\n\t// Program to divide two numbers.\n\tfunction divide_two_numbers($num1, $num2 = 1) {\n\t\tif (!is_numeric($num1) || !is_numeric($num2) || $num2 == 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn $num1 / $num2;\n\t}\n\t// Tests\n\tprint_r(divide_two_numbers(2, 4));        // 0.5\n\tprint_r(divide_two_numbers(15, \"5\"));     // 3\n\tprint_r(divide_two_numbers(\"600\", 0));    // null or empty\n\tprint_r(divide_two_numbers(\"Hello\"));     // null or empty\n",
  "perl": "#!/usr/bin/perl\nuse warnings;\nuse strict;\nprint \"Enter a number 1 : \";\nmy $number1 = <STDIN>;\nprint \"Enter a number 2 : \";\nmy $number2 = <STDIN>;\nprint \"Division of given two numbers :\".$number1/$number2, \"\\n\";\n",
  "python": "a, b = map(int, input().split())\nans = a / b\nprint(ans)\n",
  "r": "a <- 2\nb <- 4\n\nc <- a / b\n\nprint(paste(\"Output is: \", c))",
  "rust": "fn main()\n{\n    let a = 2;\n    let b = 4;\n    let c = a / b;\n\n    println!(\"Division of {0} and {1} is {2}\", a, b, a as f32/ b as f32);\n}\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "scala",
    "dart",
    "go",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}