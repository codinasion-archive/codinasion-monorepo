{
  "slug": "convert-hours-to-minutes",
  "title": "Convert Hours To Minutes",
  "c": "#include<stdio.h>\nvoid main()\n{\n    int x;\n    printf(\"Input: \");\n    scanf(\"%d\", &x);\n    printf(\"Output : %d\\n\", x*60);\n}\n",
  "c-plus-plus": "#include <iostream>\nusing namespace std;\n\nint main()\n{\n    int x;\n    cout << \"Input: \" ;\n    cin >> x;\n    cout << \"Output: \" << x*60 <<endl;\n    return 0;\n}\n",
  "c-sharp": "using System;\n\n/**\n * ConvertHoursToMinutes\n */\npublic class ConvertHoursToMinutes {\n\n    static void Main(string[] args)\n    {\n        Console.WriteLine(\"Enter Hours \");\n        int input = Convert.ToInt32(Console.ReadLine());\n        Console.WriteLine(\"Input: \" + input);\n        Console.WriteLine(\"Output: \" + (input * 60));\n    }\n}\n",
  "f-sharp": "let hoursToMinutes hours : int =\n   hours * 60\n\nlet minutes = hoursToMinutes 5\n\nprintfn \"Equivalent minutes : %d\" minutes\n",
  "java": "import java.util.Scanner;\n\n/**\n * ConvertHoursToMinutes\n */\npublic class ConvertHoursToMinutes {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        System.out.print(\"Input: \");\n        int x = sc.nextInt();\n        sc.close();\n        System.out.println(\"Output: \" + (x * 60));\n    }\n}\n",
  "javascript": "let hours = 2;\n\nfunction convertHoursToMinutes(hour) {\n  return hour * 60;\n}\n\nconsole.log(convertHoursToMinutes(hours));\n",
  "kotlin": "import java.util.Scanner\n\nfun main() {\n    val hour = Scanner(System.`in`)\n    println(\"Enter the hours: \")\n    val hours: Int = hour.nextInt()\n    val minutes = hours *60\n    println(\"$hours  hours to minutes is $minutes \")\n}\n",
  "ruby": "print \"Enter hours : \"\nhours = gets.chomp.to_i\nminutes = hours * 60\nprint \"Minutes : #{minutes}\"",
  "swift": "import Swift\nimport Foundation\n\nprint(\"Enter hours: \")\nvar hours = Int(readLine()!)!\nprint(\"Minutes: \", hours * 60)\n",
  "typescript": "/**\n *\n * @name This program convert hours to minutes\n * @param {number} hours\n * @returns {number}\n *\n * @example\n * ```ts\n * const minutes1: number = ConvertHoursToMinutes(3) // 180\n * const minutes2: number = ConvertHoursToMinutes(1.5) // 90\n * ```\n *\n * @author Tanishq Singh\n */\nfunction ConvertHoursToMinutes(hours: number): number {\n  const minutesInHour = 60;\n\n  return hours * minutesInHour;\n}\n\n// Console Tests\nconsole.log(\"Numer of minutes in 1 hours: \");\nconsole.log(\"That is \" + ConvertHoursToMinutes(1) + \" // 60\");\n\nconsole.log(\"Numer of minutes in 2 hours: \");\nconsole.log(\"That is \" + ConvertHoursToMinutes(2) + \" // 120\");\n",
  "description": "\n## Write a program to convert hours to minutes\n\n1 hour = 60 minutes\n\n```txt\nInput  : 5\nOutput : 300\n```\n\n---\n",
  "trackId": 4635,
  "lastUpdated": "2023-08-03T20:39:16Z",
  "contributors": [
    "harshraj8843",
    "RiteshK-611",
    "anandfresh",
    "esivakumar26",
    "tanishq-singh-2407",
    "Hsanchez9711",
    "watacodes",
    "mon842",
    "SekarMylsamy",
    "mrajen27",
    "sureshsgith",
    "PraaneshSelvaraj",
    "brundabharadwaj",
    "Medmly20208"
  ],
  "julia": "println(\"Enter value in hours: \")\nhours = readline()\nhours = parse(Int, hours)\nminutes = hours * 60\nprintln(hours, \" hours equals \", minutes, \" minutes\")",
  "scala": "import scala.io.StdIn._;\n\nobject hoursToMinutes {\n  def main(args:Array[String]):Unit={\n    println(\"Enter the hours : \");\n    var hours = readLine();\n    var minutes = hours.toInt * 60;\n    println(hours+\" hours is \"+minutes+\" minutes\");\n  }\n}\n",
  "dart": "import 'dart:io';\nvoid main(){\n  print(\"Enter the hours :\");\n  var hours =int.parse(stdin.readLineSync());\n  var minutes = hours * 60;\n  print('Equivalent minutes : $minutes');\n}\n",
  "go": "package main\n\nimport \"fmt\"\n\nfunc main() {\n\n  var hours int\n  var minutes int\n  fmt.Println(\"Please enter hours:\")\n  fmt.Scanf(\"%d\", &hours)\n  minutes = hours * 60\n  fmt.Println(minutes , \" Minutes\")\n}\n",
  "haskell": "module  Main where\n\nhoursToMins :: Int -> Int\nhoursToMins hours = hours * 60\n\n",
  "php": "<?php\n\nfunction hours2Minutes($hours) {\n\treturn $hours * 60;\n}\n\necho hours2Minutes(5)\n\n?>\n",
  "perl": "print \"Enter the hours: \";\nmy $hours = <STDIN> ;\n\nmy $res = hoursToMinutes($hours);\nprint \"$hours hours is $res minutes\";\n\nsub hoursToMinutes\n{\n    my ($x) = @_;\n    my $res = $hours * 60;\n    return $res ;   \n}\n",
  "python": "def convertHoursToMinutes(hours: float) -> float:\n    \"\"\"\n    convert hours to minutes\n    Arguments:\n        hours:float\n    Returns:\n        minutes:float\n    \"\"\"\n\n    return hours * 60\n\n\nif __name__ == \"__main__\":\n    hours = float(input(\"Type number of hours: \"))\n    print(\"Number of minutes is:\", convertHoursToMinutes(hours))\n\n\n# contributed by MedMly20208 Mohamed Moulay\n",
  "r": "hours = 5\nminutes = hours * 60\ncat(\"minutes: \", minutes)\n",
  "rust": "use std::io;\n\nfn main() {\n    println!(\"Enter the number of hours:\");\n    let mut input = String::new();\n    io::stdin()\n        .read_line(&mut input)\n        .expect(\"Failed to read input.\");\n    \n    let hours: u32 = match input.trim().parse() {\n        Ok(num) => num,\n        Err(_) => {\n            println!(\"Invalid input. Please enter a valid number of hours.\");\n            return;\n        }\n    };\n    \n    let minutes = hours * 60;\n    \n    println!(\"{} hours is equal to {} minutes.\", hours, minutes);\n}",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "scala",
    "dart",
    "go",
    "haskell",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}