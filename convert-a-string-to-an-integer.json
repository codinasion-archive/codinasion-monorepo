{
  "slug": "convert-a-string-to-an-integer",
  "title": "Convert A String To An Integer",
  "c": "#include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int num;\n    char word[20];\n\n    printf(\"Enter a string to convert into Integer  :   \");\n    scanf(\"%s\", word);\n\n    num = atoi(word);\n\n    printf(\"The Integer is  :   %i\", num);\n    \n    return 0;\n}\n",
  "c-plus-plus": "#include <iostream>\n\nusing namespace std;\n\nint string_to_integer(string str) {\n\treturn stoi(str);\n}\n\nint main() {\n\tstring s;\n\tcin >> s;\n\tcout << string_to_integer(s);\n\treturn 0;\n}",
  "c-sharp": "using System;\nclass MainClass {\n    public static void Main (string[] args) {\n    Console.WriteLine(Convert.ToInt16(\"123\"));\n\n  }\n}\n",
  "f-sharp": "open System\n\nlet test = \"123\"\nlet mutable result = 0\n\nif Int32.TryParse(test, &result) then\n    printfn \"%A\" result\nelse \n    fprintf stderr \"Error: Not a number\"\n",
  "java": "import java.util.Scanner;\npublic class ConvertAStringToAnInteger {\n\n\tpublic static void main(String[] args)\n\t{\n\t\tScanner sc = new Scanner(System.in);\n\t\ttry{\n\t\t    System.out.print(\"Enter the string that needs to be converted to INT: \");\n\t\t    String string = sc.nextLine();\n\t\t    sc.close();\n\t\t    Integer intVal = Integer.valueOf(string);\n\t\t    System.out.print(\"Value converted is: \" + intVal);\n\n\t\t}catch(Exception e){\n\t\t    System.out.println(\"Invalid input: \" + e);\n\t\t}\n\t}\n}\n",
  "javascript": "// Javascript program to convert a String to an Integer\n\nfunction convertWithUnary(str) {\n  // converts string representations of integers or decimals\n  return +str;\n}\n\nfunction parseInteger(str, radix = 0) {\n  // radix is an integer between 2 - 36\n  return parseInt(str, radix);\n}\n\nfunction floor(str) {\n  return Math.floor(str);\n}\n\nfunction round(str) {\n  return Math.round(str);\n}\n\n// Examples:\n\nconsole.log(convertWithUnary(\"2342\")); // 2342\nconsole.log(convertWithUnary(\"234.67\")); // 234.67\n\nconsole.log(Number(\"1234\")); // 1234 - native JS Number Method\nconsole.log(~~\"1234\"); // 1234 - Double Tilde - bitwise negation\n\nconsole.log(parseInteger(\"321\")); // 321\nconsole.log(parseInteger(\"234.33\")); // 234\nconsole.log(parseInteger(\"6234sadf\")); // 6234 - converts numbers in the string untill alphabets/special characters are found\nconsole.log(parseInteger(\"0xD\")); // 13 - converts 0xD hexadecimal-base 16 with Decimal base 10\nconsole.log(parseInteger(\"0xD\", 2)); // 0 - converts 0xD hexadecimal with radix 2\nconsole.log(parseInteger(\"0xD\", 36)); // 1201 - converts 0xD hexadecimal with radix 36\nconsole.log(parseInteger(\"0xD\", 42)); // NaN - returns Nan with radix out of range\n\nconsole.log(floor(\"234.234\")); // 234 // rounds down to the integer less than or equal to the given value\nconsole.log(floor(\"234.999\")); // 234 // rounds down to the integer less than or equal to the given value\nconsole.log(floor(\"234adf.234\")); // NaN // works only on string representations of numbers\n\nconsole.log(round(\"234.234\")); // 234 // rounds to the nearest integer\nconsole.log(round(\"234.999\")); // 235 // rounds to the nearest integer\nconsole.log(round(\"234adf.234\")); // NaN // works only on string representations of numbers\n",
  "kotlin": "import java.util.Scanner\nfun main() {\n    val scanner = Scanner(System.`in`)\n    print(\"Enter the string::\")\n    val inputString = scanner.nextLine();\n    scanner.close();\n    try {\n        val integer = inputString.toInt();\n        print(\"Integer value is::\"+integer)\n    } catch(exe:NumberFormatException) {\n        print(\"Invalid Input\")\n    }\n}\n",
  "ruby": "def stringToNumber(string)\n  num = string.to_i\n  num if num.to_s == string\nend\n\nputs stringToNumber '123'\n",
  "swift": "import Swift\nimport Foundation\n\nInt(\"123\")\n// 123\n\nInt(\"+123\")\n// 123\n\nInt(\"-123\")\n// -123\n",
  "typescript": "const stringToInteger = (str: string): number => {\n  return parseInt(str);\n};\n\nconsole.log(stringToInteger(\"123\"));\n",
  "description": "\n## Write a program to convert a string to an integer\n\n```txt\nInput  : \"123\"\nOutput : 123\n```\n\n---\n",
  "trackId": 4403,
  "lastUpdated": "2023-12-04T16:32:28Z",
  "contributors": [
    "ShounaKulkarni",
    "anandfresh",
    "harshraj8843",
    "Tushar12222",
    "RiteshK-611",
    "esivakumar26",
    "pokharel-nishan",
    "sancoLgates",
    "Deep-Chandra-Mathpal",
    "sureshsgith",
    "mrajen27",
    "avireni",
    "AryanKansagara",
    "brundabharadwaj"
  ],
  "julia": "println(\"Enter number in string: \")\nstr = readline()\nint = parse(Int, str)\nprintln(\"String to Integer: \", int)",
  "scala": "import scala.io.StdIn._;\n\nobject stringToInteger {\n    def main(args:Array[String]):Unit={\n        println(\"Enter a number in String : \");\n        var n = readLine().toInt;\n        println(\"String to Integer : \"+n);\n    }\n}\n",
  "dart": "import 'dart:convert';\nvoid stringToInt(String s){\n  int no = int.parse(s);\n  print(no);\n}\n\nvoid main() {\n  stringToInt(\"123\");\n}",
  "go": "package main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc StrtoInt(s string) int {\n\t//converting string to int\n\n\tnum,err:=strconv.Atoi(s)\n\n\tif err!=nil{\n\t\tfmt.Println(err)\n\t}\n\n\t//returing number\n\n\treturn num\n}\n\nfunc main(){\n\tfmt.Printf(\"Enter a String number:\")\n\tvar s string\n\tfmt.Scanf(\"%v\",&s)\n\t//printing the output\n\tfmt.Println(\"After converting str to int:\",StrtoInt(s))\n}\n",
  "php": "<?php\n\t$str = (string)readline(\"input string of number: \");\n\techo intval($str);\n?>\n\n",
  "perl": "$string = \"123\";\n$num = int($string);\n\nprint \"String to Integer conversion : $num\\n\";\n",
  "python": "n = input()\nnumber = int(input())\nprint(number)\n",
  "r": "# Prompt the user for input\nstring_value <- readline(prompt=\"Enter: \")\n\n# Convert the string to an integer\ninteger_value <- as.integer(string_value)\n\n# Print the result\nprint(integer_value)\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "scala",
    "dart",
    "go",
    "php",
    "perl",
    "python",
    "r"
  ]
}