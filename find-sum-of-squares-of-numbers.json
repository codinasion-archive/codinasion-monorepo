{
  "slug": "find-sum-of-squares-of-numbers",
  "title": "Find Sum Of Squares Of Numbers",
  "c": "#include <stdio.h>\n\nint sum_squares(int input[],int n);\n\nint main()\n{   \n    printf(\"Enter the size of the input array :\");\n    int n;  scanf(\"%d\",&n);\n    int input[n];\n    \n    \n    printf(\"Enter the values :\\n\");\n    for(int i =0;i<n;i++){\n        scanf(\"%d\" , &input[i]);\n    }\n    \n    sum_squares(input,n);\n\n    return 0;\n}\n\nint sum_squares(int input[], int n)\n{\n    int i=0;\n    int sum=0;\n\n    for (i=0; i<n ; ++i)\n    {\n        sum+=(input[i]*input[i]);\n    }\n\n    printf(\"sum = %d\\n\",sum);\n\n    return sum;\n}\n",
  "c-plus-plus": "// Calculates the sum of square of the inputted numbers.\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\nint main(){\n    ll n;   cin>>n;\n    ll sum=0;\n    for(int i=0;i<n;i++){\n        ll input;   cin>>input;\n        sum+= input*input;\n    }\n\n    cout<<sum<<endl;\n\n    return 0;\n}\n\n/*\nContributed by : Kartikeya Saini\n*/",
  "c-sharp": "using System;\nusing System.Linq;\nnamespace exercise\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int[] nums = { 1, 2, 3 };\n            Console.WriteLine(\"Sum of squares of elements: \" + squares(nums));\n\n        }\n        public static int squares(int[] nums)\n        {\n            int squares_sum = 0;\n            for (int i = 0; i < nums.Length; i++)\n            {\n                squares_sum = squares_sum + (int)Math.Pow(nums[i], 2);\n            }\n            return (int)squares_sum;\n        }\n    }\n}\n",
  "f-sharp": "// a function to calculate the sum of squares\r\nlet sumOfSquares numbers = \r\n    numbers\r\n    |> List.map (fun x -> x * x) // Square each element\r\n    |> List.sum                // Sum the squared elements\r\n\r\n// Reads a list of numbers from the user\r\nprintfn \"Enter a list of numbers separated by spaces:\"\r\nlet input = System.Console.ReadLine()\r\nlet numbers = input.Split(' ') |> Array.toList |> List.map int\r\n\r\n// Calculate and print the sum of squares\r\nlet result = sumOfSquares numbers\r\nprintfn \"The sum of squares of the numbers is %d\" result",
  "java": "import java.util.Scanner;\npublic class Main\n{\n    public static int SquareSum(int a[],int size) \n    {\n        int sum=0;\n        int square=0;\n        for(int i=0;i<size;i++)\n        {\n            square=a[i]*a[i];\n            sum=sum+square;\n        }\n        return sum;\n    }\n\n    public static void main(String[] args) \n    {\n        int j=0;\n        int[] arr=new int[40];\n        Scanner sc=new Scanner(System.in);\n        System.out.println(\"Enter the size of array\");\n        int size=sc.nextInt();\n        System.out.println(\"Enter the elements\");\n        for(int i=0;i<size;i++)\n              arr[i]=sc.nextInt();\n        System.out.print(\"Sum of squares of elements is : \"+SquareSum(arr,size));\n     }\n}\n",
  "javascript": "let input = [1, 2, 3, 4, 5];\n\nlet sumOfSquaresOfNumbers = 0;\n\nfor (let i = 0; i < input.length; i++) {\n  sumOfSquaresOfNumbers = sumOfSquaresOfNumbers + Math.pow(input[i], 2);\n}\n\nconsole.log(sumOfSquaresOfNumbers);\n",
  "kotlin": "fun main() {\n   val array = intArrayOf(1,2,3)\n   var sum = 0\n   for (element in array) {\n       sum += (element * element)\n   }\n   println(sum)\n}\n",
  "ruby": "def findSumOfSquaresOfNumbers numArray\n    sum = 0\n    numArray.each {|num| sum += num ** 2 }\n    puts sum\nend\n\nfindSumOfSquaresOfNumbers [1, 2, 3, 4, 5]",
  "swift": "import Swift\nimport Foundation\n\nlet numbers = [1, 2, 3, 4, 5]\nvar sum = 0\nfor i in numbers {\n  sum = sum + i * i\n}\n\nprint(sum)\n",
  "typescript": "function sumOfSquares(numbers: number[]): number {\n  let sum = 0;\n  for (const number of numbers) {\n    sum += number * number;\n  }\n  return sum;\n}\n",
  "description": "\n## Write a program to find sum of squares of numbers\n\nSuppose you have a list of numbers, and you want to find the sum of the squares of those numbers. For example, if you have the list `[1, 2, 3]`, you want to find the sum of the squares of those numbers, which is `1^2 + 2^2 + 3^2 = 14`.\n\n```txt\nInput  : 1 2 3 4 5\nOutput : 55\n```\n\n---\n",
  "trackId": 5250,
  "lastUpdated": "2023-11-29T12:31:10Z",
  "contributors": [
    "anvithayerneni",
    "swapnilmukherjee",
    "SaideepKondur",
    "lululululu0907",
    "anandfresh",
    "rakibul-islam-raju",
    "harshraj8843",
    "Tushar12222",
    "Ayush-Sarda",
    "esivakumar26",
    "gsquareg2",
    "bnzone",
    "Noga212",
    "jfinley6",
    "SarthakSanjay"
  ],
  "julia": "function sum_of_squares(numbers::Array{Int, 1})\n    return sum(x -> x^2, numbers)\nend\n\nfunction get_user_input()\n    println(\"Enter numbers separated by spaces:\")\n    input_line = readline()\n    try\n        return [parse(Int, x) for x in split(input_line)]\n    catch\n        println(\"Error: Invalid input. Please enter only integers separated by spaces.\")\n        return []\n    end\nend\n\n# Main program execution\nnumbers = get_user_input()\nif !isempty(numbers)\n    println(\"Sum of squares: \", sum_of_squares(numbers))\nelse\n    println(\"No valid input provided.\")\nend\n",
  "scala": "val numbers = List(1, 2, 3, 4, 5)\nval sum = numbers.map(num => num * num).sum\n\nprintln(sum)\n",
  "dart": "int sumOfSq(List<int> arr){\n  int sum = 0;\n  for(var i = 0; i < arr.length; i++){\n    sum += (arr[i] * arr[i]);\n  }\n  return sum;\n}\nvoid main(){\n  List<int> arr = [1 ,2 ,3 ,4 ,5];\n  print(sumOfSq(arr));\n}\n\n ",
  "go": "package main\n\nimport \"fmt\"\n\nfunc findSumOfSquaresOfNumbers(arr []int) int {\n   sum := 0\n   for e := range arr {\n      sum += e * e\n   }\n   return sum\n}\n\nfunc main(){\n   fmt.Println(findSumOfSquaresOfNumbers([]int{1, 2, 3, 4, 5}))\n}",
  "haskell": "-- Define a function to calculate the sum of squares\nsumOfSquares :: [Int] -> Int\nsumOfSquares [] = 0\nsumOfSquares (x:xs) = x^2 + sumOfSquares xs\n\n-- Main function to read input and print output\nmain :: IO ()\nmain = do\n  putStrLn \"Enter a list of numbers separated by spaces:\"\n  input <- getLine\n  let numbers = map read (words input) :: [Int]\n  let result = sumOfSquares numbers\n  putStrLn $ \"Sum of squares: \" ++ show result",
  "php": "<?php\n\nfunction sumofSquares($n)\n{\n    $sum = 0;\n    for ($i = 1; $i <= count($n); $i++)\n        $sum += ($i * $i);\n \n    return $sum;\n}\n \n\necho sumofSquares([1,2,3,4,5]);\n     \n\n?>\n",
  "perl": "my $array = [1, 2, 3, 4, 5];\nmy $iter_sum = 0;\nfor my $each (@$array) {\n    $iter_sum += $each * $each;\n}\nprint $iter_sum;\n",
  "python": "numbers = [1, 2, 3, 4, 5]\nsum = 0\nfor num in numbers:\n    sum = sum + num**2\n\nprint(sum)\n",
  "r": "numbers <- c(1, 2, 3, 4, 5)\nsquare_sum <- sum(numbers^2)\n\nprint(paste(\"The sum of squares of the numbers is:\", square_sum))\n",
  "rust": "fn sum_of_squares(numbers: &[i32]) -> i32 {\n    let mut sum = 0;\n    for &num in numbers {\n        sum += num * num;\n    }\n    sum\n}\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "scala",
    "dart",
    "go",
    "haskell",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}