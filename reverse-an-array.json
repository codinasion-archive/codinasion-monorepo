{
  "slug": "reverse-an-array",
  "title": "Reverse An Array",
  "description": "\n## Write a program to reverse an array\n\n```txt\nInput  : [1, 2, 3, 4, 5]\nOutput : [5, 4, 3, 2, 1]\n```\n\n---\n",
  "trackId": 4950,
  "lastUpdated": "2023-12-01T16:40:04Z",
  "contributors": [
    "namrata18s",
    "devbyharshit",
    "harshraj8843",
    "anandfresh",
    "esivakumar26",
    "gsquareg2",
    "Osher160",
    "vedantpople4",
    "hi-Kartik2004",
    "hugosmoreira",
    "Sdfeagt",
    "dineshlalam15",
    "loesking"
  ],
  "c": "#include <stdio.h> /* printf */\n#include <stdlib.h> /* size_t */\n/*****************************************************************/\n/* function to reverse the arr, O(N) */\nvoid ReverseAnArray(int *arr, size_t size);\n\n/* function to print the array*/\n\nvoid PrintArr(int *arr,size_t size);\n/*****************************************************************/\nint main()\n{\n    int *arr = NULL;\n    size_t size = 0;\n    size_t i = 0;\n    int new_elem = 0;\n    printf(\"size of the arr:\");\n    scanf(\"%lu\",&size);\n    \n    printf(\"\\nplease enter elements:\");\n\n    arr = (int *) malloc(size * sizeof(int));\n\n    for(i = 0; i < size;++i)\n    {\n        scanf(\"%d\",&new_elem);\n\n        arr[i] = new_elem;\n    }\n    \n    ReverseAnArray(arr,size);\n\n    PrintArr(arr,size);\n\n    free(arr);\n\n    return 0;\n}\n/*****************************************************************/\nvoid ReverseAnArray(int *arr, size_t size)\n{\n    size_t i = 0;\n    size_t rev = size - 1;\n    int tmp = 0;\n\n    for(i = 0; i< (size/2); ++i, --rev)\n    {\n        tmp = arr[i];\n\n        arr[i] = arr[rev];\n        arr[rev] = tmp;    \n    }\n}\n/*****************************************************************/\nvoid PrintArr(int *arr,size_t size)\n{\n    size_t i = 0;\n\n    printf(\"\\n\");\n\n    for(i = 0; i < size;++i)\n    {\n        printf(\"%d \",arr[i]);\n    }\n}",
  "c-plus-plus": "#include <bits/stdc++.h>\n#define ll long long // fot typing ease ll = long long\nusing namespace std;\n\nint main(){\n    // configuring the input\n    cout<<\"Enter the length of the array:\";\n    ll n;   cin>>n;\n    ll a[n];\n    ll ans[n]; // temp\n\n    //Taking array input\n    cout<<\"Enter the \"<<n<<\" numbers : \";\n    for(int i=0;i<n;i++){\n        cin>>a[i];\n    }\n\n    //Reverse the array\n    for(int i=0;i<n;i++){\n        ans[i] = a[n-1-i];\n    }\n\n    // Changing the reverse array to the inputted array.\n    for(int i=0;i<n;i++){\n        a[i]=ans[i];\n    }\n\n    // Show the reversed array\n    cout<<\"The reversed array is :\"<<endl;\n    for(int i=0;i<n;i++){\n        cout<<a[i]<<\" \";\n    }\n    return 0;\n}\n\n/*\nAuthor : Kartikeya Saini\n*/",
  "c-sharp": "using System;\n \npublic class Reverse\n{\n    public static void Main()\n    {\n        int[] array = { 1, 2, 3, 4, 5 };\n        Array.Reverse(array);\n \n        Console.WriteLine(String.Join(',', array));\n    }\n}\n",
  "f-sharp": "// function to reverse an array\nlet reverseArray (arr: int array) =\n    let mutable reversedArr = Array.zeroCreate arr.Length\n    for i = 0 to arr.Length - 1 do\n        reversedArr.[arr.Length - 1 - i] <- arr.[i]\n    reversedArr\n\nlet inputArray = [|1; 2; 3; 4; 5|]\nlet reversedArray = reverseArray inputArray\nprintfn \"%A\" reversedArray\n",
  "java": "import java.util.Arrays;\n\npublic class ReverseAnArray {\n    public static void main(String[] args) {\n        int [] arr = {1,2,3,4,5};\n        System.out.println(Arrays.toString(reverseArray(arr)));\n    }\n    public static int [] reverseArray(int [] arr){\n        int [] reverseArray = new int[arr.length];\n        for(int i = 0; i < arr.length; i++){\n            reverseArray[i] = arr[arr.length - 1 -i];\n        } return reverseArray;\n    }\n}\n",
  "javascript": "const revArr = (arr) => {\n  arr.reverse();\n  console.log(arr);\n};\n\nrevArr([1, 2, 3, 4, 5]);\n",
  "kotlin": "fun main() {\n    val arr: Array<Int?> = arrayOf(1, 2, 3, 4, 5)\n\tarr.reverse();\n    println(arr.contentToString())\n}\n",
  "ruby": "a = [1, 2, 3, 4, 5]\nputs \"Reverse of the given array : #{a.reverse()}\\n\\n\"\n",
  "swift": "import Swift\nimport Foundation\n\nvar numbers = [1, 2, 3, 4, 5]\nnumbers.reverse()\nprint(\"Reversed Array: \", numbers)\n",
  "typescript": "const reverseArray = (arr: number[]): number[] => {\n  return arr.reverse();\n};\n\nconsole.log(reverseArray([1, 2, 3, 4, 5]));\n",
  "julia": "array = Vector(1:5)\nprintln(reverse(array))\n",
  "scala": "import scala.io.StdIn._;\n\nobject arrayReverse {\n    def main(args:Array[String]):Unit={\n        val mylist: List[Int] = List(1, 2, 3, 4, 5); \n        println(\"Array Reverse : \"+mylist.reverse);\n    }\n}\n",
  "dart": "void main(){\n    var myList = [1, 2, 3, 4, 5];\n    var reversedList = new List.from(myList.reversed);\n    print(reversedList);\n}\n",
  "go": "package main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar arr = []int{5, 2, 3, 4, 5, 7, 8, 9}\n\tfor i := len(arr) - 1; i >= 0; i-- {\n\t\tfmt.Print(arr[i], \" \")\n\t}\n}\n",
  "haskell": "reverse_list :: [Int] -> [Int]\nreverse_list = \\list ->\n    case list of\n        [] -> []\n        x:xs -> reverse_list xs ++ [x]\nmain = print (reverse [1, 2, 3, 4, 5])\n",
  "php": "<?php\n\nfunction reverseArray($array) {\n  return array_reverse($array);\n}\n\nprint_r(reverseArray([1,2,3,4,5]));\n\n?>\n",
  "perl": "use strict;\nuse warnings;\nuse 5.010;\n \nmy @array = qw(1 2 3 4 5);\nmy @rev = reverse @array;\nsay join ' ', @rev;\n",
  "python": "print(\n    list(\n        map(\n            lambda x: int(x.strip()),\n            input().replace(\"[\", \"\").replace(\"]\", \"\").split(\",\"),\n        )\n    )[::-1]\n)\n",
  "r": "# Function to reverse an array\nreverse_array <- function(arr) {\n  return(rev(arr))\n}\n\n# Example usage\ninput_array <- c(1, 2, 3, 4, 5)\noutput_array <- reverse_array(input_array)\n\n# Print the result\ncat(\"Input array: \", input_array, \"\\n\")\ncat(\"Reversed array: \", output_array, \"\\n\")\n",
  "rust": "fn main() {\n    // Declare the array to be reversed\n    let mut arr = [1, 2, 3, 4, 5];\n\n    // Reverse the array in place\n    arr.reverse();\n\n    // Print the reversed array\n    println!(\"{:?}\", arr);\n}\n\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "scala",
    "dart",
    "go",
    "haskell",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}