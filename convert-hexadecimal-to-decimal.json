{
  "slug": "convert-hexadecimal-to-decimal",
  "title": "Convert Hexadecimal To Decimal",
  "c": "// C program to convert hexadecimal to decimal\n\n#include <math.h>\n#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tchar hexdecnumber[17] = \"2D\";\n\tint decimalnumber, place;\n\tint i = 0, val, len;\n\tdecimalnumber = 0;\n\n\t// finding the length of hexadecnumber\n\tlen = strlen(hexdecnumber);\n\tlen--;\n\n\t// while loop executes the statements until the\n\t// condition is false\n\twhile (hexdecnumber[i] != '\\0') {\n\n\t\t// finding the equivalent decimal digit for each\n\t\t// hexa decimal digit\n\t\tif (hexdecnumber[i] >= '0'\n\t\t\t&& hexdecnumber[i] <= '9') {\n\t\t\tval = hexdecnumber[i] - 48;\n\t\t}\n\t\telse if (hexdecnumber[i] >= 'a'\n\t\t\t\t&& hexdecnumber[i] <= 'f') {\n\t\t\tval = hexdecnumber[i] - 97 + 10;\n\t\t}\n\t\telse if (hexdecnumber[i] >= 'A'\n\t\t\t\t&& hexdecnumber[i] <= 'F') {\n\t\t\tval = hexdecnumber[i] - 65 + 10;\n\t\t}\n\t\t// final decimal number\n\t\tdecimalnumber += val * pow(16, len);\n\t\tlen--;\n\t\ti++;\n\t}\n\t// printing the result\n\tprintf(\"Hexadecimal number = %s\\n\", hexdecnumber);\n\tprintf(\"Decimal number = %d\", decimalnumber);\n\treturn 0;\n}\n",
  "c-plus-plus": "#include<iostream>\n#include<string.h>\nusing namespace std;\n//convert hexadecimal to decimal\nint convert(char num[]) {\n   int len = strlen(num);\n   int base = 1;\n   int temp = 0;\n   for (int i=len-1; i>=0; i--) {\n      if (num[i]>='0' && num[i]<='9') {\n         temp += (num[i] - 48)*base;\n         base = base * 16;\n      }\n      else if (num[i]>='A' && num[i]<='F') {\n         temp += (num[i] - 55)*base;\n         base = base*16;\n      }\n   }\n   return temp;\n}\nint main() {\n   char num[20];\n   cout<<\"Enter a Headecimal Number\"<<endl;\n   cin>>num;\n   cout<<num<<\" after converting to deciaml becomes : \"<<convert(num)<<endl;\n   return 0;\n}",
  "c-sharp": "using System;\nusing System.Collections.Generic;\npublic class HexaToDecimal {\n public static void Main() {\n     string hexval = \"A\";\n     Console.WriteLine(\"Hexadecimal number: \"+hexval);\n     int decValue = int.Parse(hexval, System.Globalization.NumberStyles.HexNumber);\n     Console.WriteLine(\"Equivalent Decimal number: \"+decValue);\n   }\n}\n",
  "java": "/**\n * CONTRIBUTOR: JASMIN, RAMON EMMIEL P.\n * COUNTRY: PHILIPPINES\n * DATE: FEBRUARY 13, 2022\n */\n\npublic class ConvertHexadecimalToDecimal{\n    public static void main(String[] args) {\n        String hexadecimal = \"A\";\n        System.out.println(\"HEXADECIMAL: \" + hexadecimal);\n        System.out.println(\"DECIMAL EQUIVALENT: \" + convertHexaToDeci(hexadecimal));\n    }\n    public static String convertHexaToDeci(String hexaValue){\n        return Integer.toString(Integer.parseInt(hexaValue, 16));\n    }\n}",
  "javascript": "function hexadecimalToDecimal(hexString) {\n  var hex = hexString.toString();\n  var str = \"0123456789ABCDEF\";\n  var dec = 0;\n  for (var i = 0; i < hex.length; i++) {\n    dec += str.indexOf(hex.charAt(i)) * Math.pow(16, hex.length - i - 1);\n  }\n  return dec;\n}\nconsole.log(hexadecimalToDecimal(\"A\"));\n",
  "kotlin": "import kotlin.math.pow\n\nfun main() {\n    print(\"Enter Hexadecimal Number to Convert: \")\n    val num = readln()\n    print(\"Decimal Number is: ${convert(num)}\")\n}\n\nprivate fun convert(str: String): Int {\n    var num = 0\n    var i = str.lastIndex\n    str.forEach {\n        val digit = when (it) {\n            'A' -> 10\n            'B' -> 11\n            'C' -> 12\n            'D' -> 13\n            'E' -> 14\n            'F' -> 15\n            else -> it - '0'\n        }\n        num += 16.0.pow(i).toInt() * digit\n        i--\n    }\n    return num\n}",
  "ruby": "def hex_to_decimal(hex)\n  hex_digits = \"0123456789ABCDEF\"\n  hex = hex.upcase\n  decimal = 0\n\n  hex.reverse.each_char.with_index do |h, index|\n    decimal += hex_digits.index(h) * (16 ** index)\n  end\n\n  return decimal\nend\n\n# Input a hexadecimal number as a string\nhexadecimal_number = \"1A3\"\ndecimal_result = hex_to_decimal(hexadecimal_number)\n\nputs \"Hexadecimal: #{hexadecimal_number}\"\nputs \"Decimal: #{decimal_result}\"\n",
  "swift": "import Foundation\n\nfunc hexToDecimal(_ hex: String) -> Int {\n    let hexMap: [Character: Int] = [\"0\": 0, \"1\": 1, \"2\": 2, \"3\": 3, \"4\": 4, \"5\": 5, \"6\": 6, \"7\": 7, \"8\": 8, \"9\": 9,\n                                    \"A\": 10, \"B\": 11, \"C\": 12, \"D\": 13, \"E\": 14, \"F\": 15,\n                                    \"a\": 10, \"b\": 11, \"c\": 12, \"d\": 13, \"e\": 14, \"f\": 15]\n    return hex.uppercased().reversed().enumerated().reduce(0) {\n        $0 + (hexMap[$1.element]! * Int(pow(16.0, Double($1.offset))))\n    }\n}\n\n\nprint(\"Enter a hexadecimal number: \")\nif let inputHex = readLine() {\n    let decimalValue = hexToDecimal(inputHex)\n    print(\"Hexadecimal: \\(inputHex), Decimal: \\(decimalValue)\")\n} else {\n    print(\"Invalid input or no input was read.\")\n}",
  "typescript": "const alphabetToNumberMap = {\n  a: 10,\n  b: 11,\n  c: 12,\n  d: 13,\n  e: 14,\n  f: 15,\n};\n\nconst convertHexadecimalToDecimal = (hexaDecimal: string): number => {\n  let sum = 0;\n\n  for (let i = hexaDecimal.length - 1; i >= 0; i--) {\n    const value =\n      alphabetToNumberMap[hexaDecimal[i].toLowerCase()] ||\n      Number(hexaDecimal[i]);\n\n    sum += value * Math.pow(16, hexaDecimal.length - 1 - i);\n  }\n\n  return sum;\n};\n\nconsole.log(convertHexadecimalToDecimal(\"a\"));\n",
  "description": "\n## Write a program to convert hexadecimal to decimal\n\nHexadecimal is a base-16 number system. It uses sixteen digits: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, and F. The digits are called hexits. A hexit is the smallest unit of information in a computer. A hexit can be used to represent a single value, such as 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, or F, or it can be used to represent a single state, such as on or off.\n\nTo convert a hexadecimal number to decimal, we can use the following algorithm:\n\n1. Multiply the first hexit by 16^0.\n2. Multiply the second hexit by 16^1.\n3. Multiply the third hexit by 16^2.\n4. Multiply the fourth hexit by 16^3.\n5. Repeat steps 3 and 4 until the last hexit.\n6. Add the results of all the multiplications.\n7. The decimal number is the sum of all the multiplications.\n\n```txt\nInput  : A\nOutput : 10\n```\n\n---\n",
  "trackId": 1659,
  "lastUpdated": "2023-11-28T19:17:39Z",
  "contributors": [
    "psmanam",
    "MadhuS-1605",
    "anandfresh",
    "apurvagandhi",
    "harshraj8843",
    "RiteshK-611",
    "saintramon",
    "joao-vitor-souza",
    "UsmanFani",
    "CodingWithHardik",
    "AshishSharma1203",
    "chetanchandel31",
    "prasanta10"
  ],
  "julia": "println(\"Enter a hexadecimal number: \") \nx = readline()\ny = parse(Int, x, base=16)\nprintln(\"Decimal of \", x, \": \", y)",
  "go": "package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc hexadecimalToDecimal(hexadecimalNumber string) int {\n\tvar decimalNumber int\n\tvar power int = 0\n\n\tfor i := len(hexadecimalNumber) - 1; i >= 0; i-- {\n\t\tdigit := hexadecimalNumber[i]\n\n\t\tif digit >= '0' && digit <= '9' {\n\t\t\tdecimalNumber += int(digit-'0') * int(math.Pow(16, float64(power)))\n\t\t} else if digit >= 'A' && digit <= 'F' {\n\t\t\tdecimalNumber += int(digit-'A'+10) * int(math.Pow(16, float64(power)))\n\t\t}\n\n\t\tpower++\n\t}\n\n\treturn decimalNumber\n}\n\nfunc main() {\n\thexadecimalNumber := \"F\"\n\tdecimalNumber := hexadecimalToDecimal(hexadecimalNumber)\n\tfmt.Println(\"Hexadecimal number:\", hexadecimalNumber)\n\tfmt.Println(\"Decimal number:\", decimalNumber)\n}\n",
  "php": "<?php\n\n$hexadecimal = readline();\n$possibleChars = [\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\"\n];\n$hexaCharsMapping = [\n    \"A\" => \"10\",\n    \"a\" => \"10\",\n    \"B\" => \"11\",\n    \"b\" => \"11\",\n    \"C\" => \"12\",\n    \"c\" => \"12\",\n    \"D\" => \"13\",\n    \"d\" => \"13\",\n    \"E\" => \"14\",\n    \"e\" => \"14\",\n    \"F\" => \"15\",\n    \"f\" => \"15\",\n];\n$decimal = 0;\n\nfunction map($num)\n{\n    global $hexaCharsMapping;\n    if (in_array($num, [\"A\", \"a\", \"B\", \"b\", \"C\", \"c\", \"D\", \"d\", \"E\", \"e\", \"F\", \"f\"])) {\n        return $hexaCharsMapping[$num];\n    } else {\n        return $num;\n    }\n}\n\nforeach (str_split($hexadecimal) as $key => $value) {\n    if (!in_array($value, $possibleChars)) {\n        exit(\"Input contains an invalid value: \" . $value . \"\\n\");\n    } else {\n        $decimal += map($value) * pow(16, (int) (strlen($hexadecimal) - $key - 1));\n    }\n}\n\necho $decimal . \"\\n\";\n\n?>",
  "perl": "print \"Please enter a Hexadecimal value : \";\n$hex = hex(<STDIN>);\nprintf(\"Equivalent decimal value : \".$hex);\n",
  "python": "hexadec = input()\n\ndec = int(hexadec, 16)\n\nprint(dec)\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "go",
    "php",
    "perl",
    "python"
  ]
}