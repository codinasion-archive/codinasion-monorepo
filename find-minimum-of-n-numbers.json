{
  "slug": "find-minimum-of-n-numbers",
  "title": "Find Minimum Of N Numbers",
  "c": "#include <stdio.h>\n\nint findMinimumOfNNumbers(int* arr, int n)\n{\n\tint min = arr[0], i;\n\t//in defualt the first num in arr is the minimum\n\n\tfor(i = 1; i < n ; i++)\n\t{\n\t\tif (arr[i] < min)\n\t\t{\n\t\t\tmin = arr[i];\n\t\t}\n\t}\n\treturn (min);\n}",
  "c-plus-plus": "#include<iostream>\nusing namespace std;\n\nint main(){\n    int min,k;\n    cin>>min;\n    while(cin>>k){\n        if(k<min){\n            min=k;\n        }\n    }\n    cout<<min;\n}\n",
  "c-sharp": "using System;\r\n\r\npublic class FindMinimumOfNNumbers {\r\n    public static void Main(String[] args){\r\n        int[] arr = { 10, 20, 30, 40, 50 };\r\n        Console.Write(\"Input  : \");\r\n        for (int i = 0; i < 5; i++)\r\n        {\r\n            Console.Write(arr[i] + \" \");\r\n        }\r\n        int min = arr[0];\r\n        for (int i = 0; i < 5; i++)\r\n        {\r\n            if (arr[i] < min)\r\n            {\r\n                min = arr[i];\r\n            }\r\n        }\r\n        Console.WriteLine();\r\n        Console.WriteLine(\"Output : \" + min);\r\n    }\r\n}\r\n\r\n",
  "java": "import java.util.*;\n\npublic class FindMinimumOfNNumbers {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    System.out.print(\"Enter number of elements in the array:\");\n    int n = sc.nextInt();\n    int[] arr = new int[n];\n\n    System.out.println(\"Enter elements of array:\");\n    for (int i = 0; i < n; i++) {\n      arr[i] = sc.nextInt();\n    }\n\n    int mini = Integer.MAX_VALUE;\n    for (int i = 0; i < n; i++) {\n      if (arr[i] < mini) mini = arr[i];\n    }\n\n    System.out.println(\"Minimum value: \" + mini);\n  }\n}\n",
  "javascript": "/**\n * function to find minimum of n numbers\n * @param {Array.<number>} inputArray - The input array\n * @returns {number|string} - The minimum value from inputArray or the error message\n */\nconst findMinimumOfNNumbers = (inputArray) => {\n  if (!Array.isArray(inputArray)) {\n    return \"Error: Input should be array\";\n  }\n\n  if (inputArray.length === 0) {\n    return \"Error: Input array should not be empty\";\n  }\n\n  // Ignore invalid numbers from input array\n  const validNumbers = inputArray.filter((input) => Number.isFinite(input));\n\n  if (validNumbers.length === 0) {\n    return \"Error: Input array should have at least one valid number\";\n  }\n\n  let minimumValue = validNumbers[0];\n\n  validNumbers.forEach((number) => {\n    if (number < minimumValue) {\n      minimumValue = number;\n    }\n  });\n\n  return minimumValue;\n};\n\nconsole.log(findMinimumOfNNumbers(\"random string\"));\nconsole.log(findMinimumOfNNumbers([]));\nconsole.log(findMinimumOfNNumbers([\"10\"]));\nconsole.log(findMinimumOfNNumbers([10]));\nconsole.log(findMinimumOfNNumbers([10, \"20\", undefined, 100, NaN]));\nconsole.log(findMinimumOfNNumbers([10, -20, 50, 99]));\n",
  "kotlin": "fun main() {\n   val n = arrayOf(10, 20, 30, 40, 50)\n   findMiniOfNumber(n)\n}\n\nfun findMiniOfNumber(arr: Array<Int>) {\n    var min = Int.MAX_VALUE\n    for (i in arr) {\n        min = min.coerceAtMost(i)\n    }\n    println(min)\n}\n",
  "ruby": "def find_minimum_of_n_numbers(numbers)\n  sorted_numbers = numbers.sort\n  # many methods to get it:\n  # sorted_numbers[0]\n  # sorted_numbers.first\n  sorted_numbers.min\nend\n\nputs find_minimum_of_n_numbers([300, 50, 10, 2, 20, 34, 45])\n",
  "swift": "import Swift\nimport Foundation\n\nlet numbers = [10, 20, 30, 40, 50]\nprint(\"Minimum number: \", numbers.reduce(Int.max, { min($0, $1) }))\n",
  "typescript": "function findMinimumOfNNumbers(...args: Array<number>) {\n  const numbers = [...args];\n\n  const sortedNumbers = numbers.sort((a, b) => a - b);\n\n  return sortedNumbers[0];\n}\n",
  "description": "\n## Write a program to find minimum of n numbers\n\n```txt\nInput  : 10 20 30 40 50\nOutput : 10\n```\n\n---\n",
  "trackId": 3750,
  "lastUpdated": "2023-12-08T04:59:30Z",
  "contributors": [
    "anandfresh",
    "harshraj8843",
    "esivakumar26",
    "roberanegussie",
    "sancoLgates",
    "rafaover",
    "deveshpandee",
    "vfon98",
    "amiqyolo",
    "grraghav120",
    "ba-ppp",
    "GilAzani"
  ],
  "go": "package main\n\nimport \"fmt\"\n\nfunc main() {\n\tarr := [...]int{10, 20, 30, 40, 50}\n\tmin_num := arr[0]\n\tfor _, value := range arr {\n\t\tif (value < min_num) {\n\t\t\tmin_num = value\n\t\t}\n\t}\n\tfmt.Println(min_num)\n}\n",
  "haskell": "minNum:: Ord b => [b]-> b\nminNum [x] = x\nminNum (x:x':xs) = minNum ((if x <= x' then x else x'):xs)\n\nmain = print (minNum [10, 20, 30, 40, 50])\n",
  "php": "<?php\n\n\techo min(10, 20, 30, 40, 50);\n?>\n",
  "perl": "#!/usr/bin/perl\nuse strict;\nuse warnings;\nmy @array = sort { $a <=> $b } qw(10 20 30 40 50);\nprint \"min: $array[0]\\n\";\n",
  "python": "def find_minimum_of_n_numbers(numbers):\n    sorted_nums = sorted(numbers)\n    return sorted_nums[0]\n",
  "rust": "fn find_minimum_of_n_numbers(nums: &mut [i32]) -> i32 {\n    nums.sort();\n    return nums[0];\n}\n\n// testing\nfn main() {\n    let mut arr: [i32; 4] = [1, 5, 3, 6];\n    let rs = find_minimum_of_n_numbers(&mut arr);\n    println!(\"Minimum of n numbers is {:?}\", rs);\n}",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "go",
    "haskell",
    "php",
    "perl",
    "python",
    "rust"
  ]
}