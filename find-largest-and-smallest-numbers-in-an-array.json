{
  "slug": "find-largest-and-smallest-numbers-in-an-array",
  "title": "Find Largest And Smallest Numbers In An Array",
  "c": "#include<stdio.h>\n#include<stdlib.h>\n\n\n\n\nint main()\n{\n    int n , largest , smallest;\n    printf(\"Enter the number of elements in array\");\n    scanf(\"%d\", &n);\n\n    int array[n];\n    printf(\"Enter the elememts\");\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\", &array[i]);\n    }\n\n    // edge case\n    if( n == 0)\n    {\n        printf(\"No elements in array\");\n        exit(0);\n    }\n\n    \n    largest = array[0];\n    smallest = array[0];\n\n    for(int i=0;i<n;i++)\n    {\n        // condition to largest element\n        if(array[i] > largest)\n            largest = array[i];\n\n        // condition to smallest element\n        if(array[i] < smallest)\n            smallest = array[i];\n        \n    }\n\n    printf(\"%d %d\", largest , smallest);\n    return 0;\n}",
  "c-plus-plus": "#include<iostream>\nusing namespace std;\nint main()\n{\nint * pointer ;\ncout<< \"Enter the size of array :\";\nint input,max,min;\ncin>>input;\npointer =new int[input];\nint temp;\n\nfor(int counter =0 ; counter <input ; counter ++){\n    cout<< \"enter the item  \"<<counter+1 << endl;\n    cin>>temp;\n    *(pointer+counter) =temp;\n}\nmax= pointer[0];\nmin = pointer[0];\nfor(int i=0 ; i< input ;i++){\n if(max < pointer[i]){\n    max=pointer[i];\n }\n if(min > pointer[i]){\n    min = pointer[i];\n }\n}\ncout<< max << \", \"<<min;\n\n\n\n return 0;\n}\n",
  "c-sharp": "using System;\nnamespace LargestAndSmallest\n{\n    class Program\n    {\n        public static void Main()\n        {\n            int n;\n            float large, small;\n            int[] a = new int[50];\n            Console.WriteLine(\"Enter the size of Array\");\n            string s = Console.ReadLine();\n            n = Int32.Parse(s);\n            Console.WriteLine(\"Enter the array elements\");\n            for (int i = 0; i < n; i++)\n            {\n                string s1 = Console.ReadLine();\n                a[i] = Int32.Parse(s1);\n            }\n            Console.Write(\"\");\n            large = a[0];\n            small = a[0];\n            for (int i = 1; i < n; i++)\n            {\n                if (a[i] > large)\n                    large = a[i];\n                else if (a[i] < small)\n                    small = a[i];\n            }\n            Console.WriteLine(\"Largest element in the array is {0}\", large);\n            Console.WriteLine(\"Smallest element in the array is {0}\", small);\n        }\n    }\n \n}\n",
  "f-sharp": "let FindLargestAndSmallestNumbersInAnArray (input: int list) =\n    let sortedInput = List.sort input\n    let smallest = sortedInput.[0]\n    let largest = sortedInput.[sortedInput.Length-1]\n    printfn \"Smallest Number in the array: %d\" smallest\n    printfn \"Largest Number in the array: %d\" largest\n\nlet input = [1; 2; 3; 9; 6; 4; 5]\nFindLargestAndSmallestNumbersInAnArray input\n",
  "java": "public class FindLargestSmallestNumber {\n\n public static void main(String[] args) {\n\n\n  int numbers[] = new int[]{1,2,3,4,5};\n\n  int smallest = numbers[0];\n  int largetst = numbers[0];\n\n  for (int i = 1; i < numbers.length; i++) {\n   if (numbers[i] > largetst)\n    largetst = numbers[i];\n   else if (numbers[i] < smallest)\n    smallest = numbers[i];\n  }\n\n  System.out.println(largetst);\n  System.out.println(smallest);\n }\n}\n\n",
  "javascript": "function findingSmallestLargest(numArr) {\n  return [Math.max(...numArr), Math.min(...numArr)];\n}\n\nconst numberArrTest = [1, 2, 3, 4, 5];\nfindingSmallLarge(numberArrTest);\n",
  "kotlin": "fun findLargestAndSmallestNumbers(numbers: Array<Int>): String {\n\tnumbers.sort()\n\tval largestNumber = numbers[numbers.size - 1]\n\tval smallestNumber = numbers[0]\n\treturn \"${largestNumber}, ${smallestNumber}\"\n}\n\nfun main() {\n\tval inputs = arrayOf<Int>(1, 2, 3, 4, 5)\n\tprintln(findLargestAndSmallestNumbers(inputs))\n}\n",
  "ruby": "#programme to find the larget and smallest numbers in a array in ruby...\n\ndef findLargestAndSmallestNumbersInAnArray numArray\n    puts \"#{numArray.max}, #{numArray.min}\"\nend\n\nfindLargestAndSmallestNumbersInAnArray [1,2,3,4,5]\n",
  "swift": "import Swift\nimport Foundation\n\nlet numbers = [1, 2, 3, 4, 5]\nprint(\"Largest number: \", numbers.reduce(Int.min, { max($0, $1) }))\nprint(\"Smallest number: \", numbers.reduce(Int.max, { min($0, $1) }))\n",
  "typescript": "function findingSmallLarge(numArr: number[]) {\n  return [Math.max(...numArr), Math.min(...numArr)];\n}\n\nconst numberArr: number[] = [1, 2, 3, 4, 5];\nfindingSmallLarge(numberArr);\n",
  "description": "\n## Write a program to find largest and smallest numbers in an array\n\n```txt\nInput  : [1, 2, 3, 4, 5]\nOutput : 5, 1\n```\n\n---\n",
  "trackId": 2224,
  "lastUpdated": "2024-02-04T17:46:20Z",
  "contributors": [
    "anandfresh",
    "harshraj8843",
    "esivakumar26",
    "pelegsch666",
    "jfinley6",
    "joao-vitor-souza",
    "neelesh08",
    "rahmat-dev",
    "MadhuS-1605",
    "ArinCodes",
    "destroyer5067",
    "GamerCreator1"
  ],
  "julia": "array = [1,2,3,4,5]\narray = sort(array)\nsmallest_element = array[1]\nlargest_element = array[length(array)]\nprintln(\"The smallest number is : \", smallest_element)\nprintln(\"\\nThe largest number is : \", largest_element)\n",
  "go": "package main\n\nimport \"fmt\"\n\nfunc main() {\n    var arrsize, i, minPosition, maxPosition int\n\n    fmt.Print(\"Enter the Array Size to find Smallest & Largest = \")\n    fmt.Scan(&arrsize)\n\n    arr := make([]int, arrsize)\n\n    fmt.Print(\"Enter the Array Items  = \")\n    for i = 0; i < arrsize; i++ {\n        fmt.Scan(&arrsize[i])\n    }\n    largest := arr[0]\n    smallest := arr[0]\n\n    for i = 0; i < arrsize; i++ {\n        if largest < arr[i] {\n            largest = arr[i]\n            maxPosition = i\n        }\n        if smallest > arr[i] {\n            smallest = arr[i]\n            minPosition = i\n        }\n    }\n    fmt.Println(\"\\nThe Largest Number in this Array    = \", largest)\n    fmt.Println(\"The Index Position of Largest Number = \", maxPosition)\n    fmt.Println(\"\\nThe Smallest Number in this Array    = \", smallest)\n    fmt.Println(\"The Index Position of Smallest Number = \", minPosition)\n}\n",
  "php": "<?php\n\nfunction find_largest_and_smallest_numbers_in_an_array($numbers)\n{\n\tsort($numbers);\n\t$largestNumber = $numbers[count($numbers) - 1];\n\t$smallestNumber = $numbers[0];\n\treturn \"$largestNumber, $smallestNumber\";\n}\n\n$inputs = [1, 2, 3, 4, 5];\necho find_largest_and_smallest_numbers_in_an_array($inputs);\n",
  "perl": "sub large_and_small {   \n    my (@numbers);\n    @numbers = @_;\n\n    my ($small, $large);\n    $large = $numbers[0];\n    $small = $numbers[0];\n\n    foreach my $i (@numbers) {\n\n        if ($i > $large) {         \n\n            $large = $i;  \n        }        \n        elsif ($i < $small) {\n\n            $small = $i;  \n        }\n    }\n    return ($small, $large);\n}\n\n\nmy (@my_array, @ret);\n@my_array = (1,2,3,4,5);\n@ret = large_and_small(@my_array);\nprint \"Largest value : \", $ret[1], \"\\n\";\nprint \"Smallest value : \", $ret[0], \"\\n\";\n",
  "python": "numbers = [int(input()) for _ in range(int(input(\"How many numbers: \")))]\nprint(f\"{max(numbers)}, {min(numbers)}\")\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "go",
    "php",
    "perl",
    "python"
  ]
}