{
  "slug": "print-pattern-1",
  "title": "Print Pattern 1",
  "c": "#include<stdio.h>\n\nvoid printPattern(int n) {\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=1;j<=i;j++) {\n\t\t\tprintf(\"%2d\",j);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n}\nvoid main() {\n\tint n;\n\tprintf(\"Enter number of rows: \");\n\tscanf(\"%d\",&n);\n\tprintPattern(n);\n}\n",
  "c-plus-plus": "#include<iostream>\nusing namespace std;\nint main(){\n    int n;\n    cin>>n;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<=i;j++){\n            cout<<j+1<<\" \";\n        }\n        cout<<endl;\n    }\n}\n",
  "c-sharp": "using System;\n\npublic class pattern {\n    public static void Main(string[] args) {\n        Console.WriteLine(\"Enter length of pattern: \");\n        int n = Convert.ToInt32(Console.ReadLine());\n        int i, j, num;\n        for (i = 0; i < n; i++) {\n            num = 1;\n            for (j = 0; j <= i; j++) {\n                Console.Write(num + \" \");\n                num++;\n            }\n            Console.WriteLine();\n\n        }\n    \n    }\n\n}",
  "java": "public class PrintPattern1 {\n    public static void main(String[] args) {\n        for (int i = 1; i <= 5; i++) {\n            for (int j = 1; j <= i; j++) {\n                System.out.print(j + \" \");\n            }\n            System.out.println();\n        }\n    }\n}",
  "javascript": "function printPattern(n) {\n  for (let i = 1; i <= n; i++) {\n    let str = \"\";\n    for (let j = 1; j <= i; j++) {\n      str += j + \" \";\n    }\n    console.log(str);\n  }\n}\n\nlet n = 5;\nprintPattern(n);\n",
  "kotlin": "/*\nProgram to print pyramid pattern\n\nInput  : 5\nOutput :\n1\n1 2 \n1 2 3\n1 2 3 4\n1 2 3 4 5\n\n*/\n\nfun main(args : Array<String>){\n\n    var n = readLine()!!.toInt()\n\n    for(i in 1..n) {\n        for(j in 1..i) {\n            print(j)\n            print(\" \")\n        }\n        println()\n    }\n}",
  "ruby": "print \"Enter number : \"\nnum = gets.chomp.to_i\n\nfor i in 1..num do\n    for j in 1..i do\n        print \"#{j} \"\n    end\n    puts \"\"\nend",
  "swift": "import Foundation\n\n// Function to print the pattern\nfunc printPattern(upTo n: Int) {\n    for i in 1...n {\n        for j in 1...i {\n            print(j, terminator: \" \")\n        }\n        print()\n    }\n}\n\n// Reading user input\nprint(\"Enter a number: \", terminator: \"\")\nif let input = readLine(), let number = Int(input) {\n    printPattern(upTo: number)\n} else {\n    print(\"Invalid input\")\n}\n",
  "typescript": "const input = 5;\n\nfor (let i = 1; i <= input; i++) {\n  for (let k = 1; k <= i; k++) {\n    process.stdout.write(k.toString() + \" \");\n  }\n  console.log(\"\");\n}\n",
  "description": "\n## Write a program to print pattern 1\n\n```txt\nInput  : 5\n\nOutput :\n1\n1 2\n1 2 3\n1 2 3 4\n1 2 3 4 5\n```\n\n---\n",
  "trackId": 4113,
  "lastUpdated": "2024-04-15T13:22:37Z",
  "contributors": [
    "charan-hash",
    "ShivangiRai1310",
    "ApurvaR1",
    "ShounaKulkarni",
    "harshraj8843",
    "vedantpople4",
    "Tushar12222",
    "PavanKumarCB",
    "roberanegussie",
    "roshan798",
    "anandfresh",
    "joao-vitor-souza",
    "vedha-vikash-pixel",
    "123shuklaayush",
    "harrytjbreen",
    "pramaai",
    "PraaneshSelvaraj"
  ],
  "scala": "object NumberPattern {\n  def main(args: Array[String]): Unit = {\n    // Taking input from the user\n    println(\"Enter the number of rows:\")\n    val numRows = scala.io.StdIn.readInt()\n\n    // Printing the pattern\n    for (row <- 1 to numRows) {\n      // For each row, print numbers from 1 to row\n      for (num <- 1 to row) {\n        print(s\"$num \")\n      }\n      println() // Move to the next line after printing each row\n    }\n  }\n}\n",
  "dart": "import 'dart:io';\nvoid printPattern(int n){\n  for(var i = 1 ; i <= n ; i++){\n    for(var j = 1 ; j <= i ; j++){\n     stdout.write(j);\n    }\n    stdout.write(\"\\n\");\n  }\n}\n\nvoid main() {\n  printPattern(5);\n}",
  "go": "package main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar rows int\n\tfmt.Scanf(\"%d\", &rows)\n\tfor i := 1; i <= rows; i++ {\n\t\tfor j := 1; j <= i; j++ {\n\t\t\tfmt.Printf(\"%d \", j)\n\t\t}\n\t\tfmt.Println()\n\t}\n}\n",
  "php": "<?php\t\n\nfunction printPattern($n){\nfor ($i=1; $i<=$n; $i++)\t\n{\t \nfor($j=1;$j<=$i;$j++)\t  \n{\t  \t\necho $j.\" \";\t \n}\t  \t\necho \"<br/>\";   \t\n}  \n}\nprintPattern(5);\n\n?>\n",
  "python": "num = int(input(\"Enter number : \"))\n\nfor i in range(1, num + 1):\n    for j in range(1, i + 1):\n        print(j, end=\" \")\n    print(\"\")\n",
  "r": "printPattern <- function(n) {\n  for (i in 1:n) {\n    for (j in 1:i) {\n      cat(j, \" \")\n    }\n    cat(\"\\n\") # Move to the next line after each row\n  }\n}\n\n# Test the function with input 5\nprintPattern(5)\n",
  "rust": "fn main(){\n    let rows = 5;\n    for i in 1..=rows{\n        for j in 1..=i {\n            print!(\"{} \", j);\n        }\n        println!();\n    }\n}",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "scala",
    "dart",
    "go",
    "php",
    "python",
    "r",
    "rust"
  ]
}