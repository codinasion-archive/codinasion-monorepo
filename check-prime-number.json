{
  "slug": "check-prime-number",
  "title": "Check Prime Number",
  "c": "#include <stdio.h>\nint main()\n{\n    int a, number, count = 0;\n    printf(\"enter number to check for prime or not prime :\");\n    scanf(\"%d\", &number);\n    for (a = 1; a <= number; a++)\n        if (number % a == 0)\n            count++;\n    if (count == 2)\n        printf(\"prime number\\n\");\n    else\n        printf(\"it is not a prime number\\n\");\n    return 0;\n}",
  "c-plus-plus": "#include <iostream.h>\nusing namespace std;\nint main()\n{\n    int a, number, count = 0;\n    cout << \"enter number to check for prime or not prime :\";\n    cin >> number;\n    for (a = 1; a <= number; a++)\n        if (number % a == 0)\n            count++;\n    if (count == 2)\n        cout << \"prime number\\n\";\n    else\n        cout << \"it is not a prime number\\n\";\n    return 0;\n}",
  "c-sharp": "using System;  \n  public class PrimeNumber \n   {  \n     public static void Main(string[] args)  \n      {  \n          int n, i, m=0, flag=0;    \n          Console.Write(\"Enter a Number to check :\");    \n          n = int.Parse(Console.ReadLine());  \n          m=n/2;    \n          for(i = 2; i <= m; i++)    \n          {    \n           if(n % i == 0)    \n            {    \n             Console.Write(\"{0} is not a Prime Number.\",n);    \n             flag=1;    \n             break;    \n            }    \n          }    \n          if (flag==0)    \n           Console.Write(\"{0} is a Prime Number.\",n);       \n     }  \n   }  \n",
  "java": "import java.util.Scanner;\n\nclass CheckPrimeNumber {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"Enter a number to check prime number or not\");\n\n        int num = sc.nextInt();\n        boolean isPrime = true;\n        \n        if (num <= 1) {\n            isPrime = false;\n        } else {\n            for (int i = 2; i <= Math.sqrt(num); i++) {\n                if (num % i == 0) {\n                    isPrime = false;\n                    break;\n                }\n            }\n        }\n\n        if (isPrime) {\n            System.out.println(num + \" is a prime number\");\n        } else {\n            System.out.println(num + \" is not a prime number\");\n        }\n    }\n}",
  "javascript": "function isPrime(num) {\n  for (let i = 2; i < Math.sqrt(num); i++) {\n    if (num % i === 0) return false;\n  }\n  return num > 1;\n}\nconsole.log(isPrime(17));\n",
  "kotlin": "import kotlin.math.sqrt\n\nfun main() {\n    print(\"Enter No. to check Prime: \")\n    val num = readln().toInt()\n    if (checkPrime(num)) print(\"$num is Prime Number\")\n    else print(\"$num is Not a Prime Number\")\n}\n\nprivate fun checkPrime(num: Int): Boolean {\n    if (num <= 1) return false\n    if (num == 2 || num == 3) return true\n    if (num % 2 == 0 || num % 3 == 0) return false\n\n    for (i in 5..sqrt(num.toDouble()).toInt() step 6) {\n        if (num % i == 0 || num % (i + 2) == 0) return false\n    }\n    return true\n}",
  "ruby": "module PrimeNumber\n\n  Prime = \"Prime Number\"\n  NotPrime = \"Not Prime Number\"\n\n  def self.check_prime(number)\n    \n    return NotPrime if (0..2).include?(number) || number.negative?\n\n    2.upto(number-1) do |n|\n      if number % n == 0\n        return NotPrime\n      end\n    end\n    \n    Prime\n  end\nend\n\nputs PrimeNumber.check_prime(41) # => Prime Number\nputs PrimeNumber.check_prime(16) # => Not Prime Number",
  "swift": "import Swift\nimport Foundation\n\nfunc isPrime(_ n: Int) -> Bool {\n    guard n >= 2     else { return false }\n    guard n != 2     else { return true  }\n    guard n % 2 != 0 else { return false }\n    return !stride(from: 3, through: Int(sqrt(Double(n))), by: 2).contains { n % $0 == 0 }\n}\n\nvar number1 = 5\nprint(\"5 is a prime number: \" , isPrime(number1))\n\nvar number2 = 9\nprint(\"9 is a prime number: \" , isPrime(number2))\n",
  "typescript": "function isPrime(num: number) {\n  for (let i = 2; i < Math.sqrt(num); i++) {\n    if (num % i === 0) return false;\n  }\n\n  return num > 1;\n}\n\nconsole.log(isPrime(17));\n",
  "description": "\n## Write a program to check prime number\n\nA prime number is a natural number greater than 1 that has no positive divisors other than 1 and itself.\n\n```txt\nInput  : 5\nOutput : Prime Number\n```\n\n---\n",
  "trackId": 1832,
  "lastUpdated": "2023-12-11T04:16:55Z",
  "contributors": [
    "anandfresh",
    "harshraj8843",
    "esivakumar26",
    "sancoLgates",
    "Fukurokudzu",
    "joao-vitor-souza",
    "deniss-eh",
    "Ipankaj07",
    "ynbh",
    "UsmanFani",
    "grraghav120",
    "KaptainCS3"
  ],
  "julia": "function checkPrime(num)    \n    isPrime = true\n        for i in 2:convert(Int64, round(num/2, digits = 0))\n            if num % i == 0\n                isPrime = false\n                break\n            end\n        end\n    return isPrime\nend\n\nprint(\"Enter a number: \")\nnum = parse(Int, readline(stdin))\nisPrime = checkPrime(num)\nif num == 1\n    println(\"1 is neither prime nor composite.\")\nelseif isPrime == true\n    println(\"Entered number is prime\")\nelse\n    println(\"Entered number is not prime\")\nend\n",
  "scala": "object HelloWorld {\n\tdef main(args: Array[String]): Unit = {\n\t  val num = scala.io.StdIn.readInt();\n\n    if (isPrime(num)) {\n      System.out.println(num + \" is a prime number\");\n    } else {\n      System.out.println(num + \" is not a prime number\");\n    }\n\t}\n\t\n\tdef isPrime(num:Int):Boolean = {\n    (num > 1) && !(2 to scala.math.sqrt(num).toInt).exists(x => num % x == 0)\n  }\n}\n",
  "go": "package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc checkIsPrime(num int) bool {\n\tsquare_root := int(math.Sqrt(float64(num)))\n\tfor i:=2; i<square_root; i++ {\n\t\tif num % i == 0 {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn num > 1\n}\n\nfunc main() {\n\tvar i int\n\tfmt.Print(\"Enter Number: \")\n\tfmt.Scan(&i)\n\tisPrime := checkIsPrime(i)\n\t\n\tif (isPrime) {\n\t\tfmt.Println(\"Prime Number\")\n\t} else {\n\t\tfmt.Println(\"Not Prime Number\")\n\t}\n}\n",
  "php": "<?php\n  $num = readline('Enter Number: ');\n  \n  if ($num <= 1) {\n    echo \"Not a Prime Number\";\n  } else {\n    for ($i = 2; $i <= $num/2; $i++) {\n      if ($num % $i == 0) {\n        echo \"Not a Prime Number\";\n        return;\n      }\n    }\n  }\n  \n  echo \"Prime Number\";\n?>\n",
  "perl": "use warnings;\nuse strict;\nsub checkprime\n{\nmy $m = shift @_;\nmy $i = 2;\nwhile ($i < $m)\n{\nreturn 0 unless ($m % $i++);\n}\nreturn 1;\n}\nprint \"Enter a number : \\n\";\nchomp (my $n = <STDIN>);\nmy $FindPrime = checkprime $n;\nif ( $FindPrime == 1)\n{\nprint \"It's a Prime number \\n\";\n}\nelse\n{\nprint \"It's not a Prime number \\n\";\n}\n",
  "python": "a = int(input())\nc = 0\nif a == 1:\n    print(\"Not Prime Number\")\nelif a == 2:\n    print(\"Prime Number\")\nelse:\n    for i in range(2, a + 1):\n        if a % i == 0:\n            c = c + 1\n    if c >= 2:\n        print(\"Not Prime Number\")\n    else:\n        print(\"Prime Number\")\n\n# Contributed by Raghav Garg\n",
  "rust": "fn is_prime(n: u32) -> bool {\n    if n<=1 {\n        return false;\n    }\n\n    for i in 2..n {\n        if n%i == 0 {\n            return false;\n        }\n    }\n\n    return true\n}\n\nfn main() {\n    let n = is_prime(17);\n    println!(\"{}\", n);\n}",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "scala",
    "go",
    "php",
    "perl",
    "python",
    "rust"
  ]
}