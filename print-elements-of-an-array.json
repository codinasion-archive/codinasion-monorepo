{
  "slug": "print-elements-of-an-array",
  "title": "Print Elements Of An Array",
  "c": "# include <stdio.h>\r\n\r\n// Prints int array\r\nvoid PrintArray(int *array)\r\n{\r\n\tint len = sizeof(array);\r\n\tfor (int i = 0; i < len; ++i)\r\n\t{\r\n\t\tprintf(\"%d\\n\", array[i]);\r\n\t}\r\n}\r\n\r\nvoid main()\r\n{\r\n\tint array[] = {1, 2, 3, 4};\r\n\tPrintArray(array);\r\n}",
  "c-plus-plus": "#include <bits/stdc++.h>\nusing namespace std;\nint main(){\n    int n;cin>>n;\n    vector<int> v(n);\n    for(int i=0;i<n;i++) cin>>v[i];\n    for(int i=0;i<n;i++) cout<<v[i]<<\" \";\n    cout<<'\\n';\n    return 0;\n}\n\n// Contributed by Raghav Garg",
  "c-sharp": "using System;\npublic class Example\n{\n    public static void Main()\n    {\n        int[] array = { 1, 2, 3, 4, 5 };\n        foreach (int i in array) {\n            Console.Write(\"{0} \", i);\n        }\n    }\n}\n",
  "f-sharp": "let printArrayElements (arr : int[]) =\n    for i in arr do\n        printf \"%d \" i\n\n// Here's how to use the function:\nlet arr = [|1; 2; 3; 4; 5|]\nprintArrayElements arr // Output: 1 2 3 4 5\n",
  "java": "public class PrintElementsOfAnArray {\n    public static void main(String[] args) {\n        int [] arr = {1,2,3,4,5};\n        printArrayElements(arr);\n    }\n    static void printArrayElements(int [] nums){\n        for(int element: nums){\n            System.out.print(element + \" \");\n        }\n    }\n}\n",
  "javascript": "let array = [1, 2, 3, 4, 5];\nconsole.log(...array);\n\n// here ... is spread operator\n",
  "kotlin": "fun main() {\n   val array = intArrayOf(1, 2, 3, 4, 5)\n   for (element in array) {\n        print(element)\n        print(' ')\n    }\n}\n",
  "ruby": "def printArrayElements array\n    puts array.join(\" \")\nend\n\nprintArrayElements [1,2,3,4,5]",
  "swift": "import Swift\nimport Foundation\n\nvar myArray : [Int] = [1,2,3,4,5]\n\nfor i in myArray {\n  print(i)\n}\n",
  "typescript": "function printElementsOfAnArray(array: any[]): void {\n  console.log(...array);\n}\n\nprintElementsOfAnArray([\"1\", \"2\", \"3\", \"4\"]);\n",
  "description": "\n## Write a program to print elements of an array\n\n```txt\nInput  : [1, 2, 3, 4, 5]\nOutput : 1 2 3 4 5\n```\n\n---\n",
  "trackId": 5465,
  "lastUpdated": "2023-11-15T19:07:35Z",
  "contributors": [
    "harshraj8843",
    "pranavsilimkhan",
    "anandfresh",
    "esivakumar26",
    "Amirth24",
    "gsquareg2",
    "Preetiraj3697",
    "vedantpople4",
    "grraghav120",
    "Pinklemonade33",
    "hugosmoreira",
    "jfinley6",
    "Sttormx",
    "SarthakSanjay",
    "dineshlalam15",
    "AleksiUu"
  ],
  "julia": "arr = [1,2,3,4,5]\nforeach(println, arr)\n",
  "scala": "object printArray {\n    def main(args:Array[String]):Unit={\n        val nums: List[Int] = List(1, 2, 3, 4, 5); \n        for ( i <- 0 to (nums.length - 1)) {\n         print(nums{i});\n        }\n    }\n}\n",
  "dart": "void main(List<String> args) {\n  List<dynamic> list = [1, \"2\", false, 3.5];\n  print(list);\n}\n",
  "go": "package main\n\nimport \"fmt\"\n\nfunc main() {\n\tarr := [5]int{1, 2, 3, 4, 5}\n\tfmt.Println(arr)\n}\n",
  "haskell": "showArr :: Show a => [a] -> String\nshowArr [x] = show x\nshowArr (x:xs) = show x ++ \" \" ++ showArr xs\n\nprintArr :: Show a => [a] -> IO ()\nprintArr = (putStrLn . showArr)\n\nmain :: IO ()\nmain = do \n    input <- getLine\n    let arr = read input :: [Int] \n    printArr arr\n",
  "php": "<?php\n\nfunction printElements($arr) {\n  foreach($arr as $item){\n    echo $item . \"\\n\";\n}\n}\n\nprintElements([1,2,3,4,5])\n\n?>\n",
  "perl": "@num = (1, 2, 3, 4, 5);\nprint \"@num\\n\";\n",
  "python": "arr = [1, 2, 3, 4, 5]\n\nfor num in arr:\n    print(num, end=\" \")\n",
  "r": "# Function to print elements in an array\nprintArrayElements <- function(arr) {\n  n <- length(arr)\n  \n  for (i in 1:n) {\n    cat(\" \", arr[i])\n  }\n}\n\n# Function call\nmyArray <- c(1, 2, 3, 4, 5)\nprintArrayElements(myArray)\n",
  "rust": "fn main() {\n    let arr = [1, 2, 3, 4, 5];\n\n    for i in 0..arr.len() {\n        println!(\"{}\", arr[i]);\n    }\n}\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "scala",
    "dart",
    "go",
    "haskell",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}