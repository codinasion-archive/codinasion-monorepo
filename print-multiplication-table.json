{
  "slug": "print-multiplication-table",
  "title": "Print Multiplication Table",
  "c": "#include <stdio.h>\nint main() {\n  int n, i;\n  printf(\"Input: \");\n  scanf(\"%d\", &n);\n  for (i = 1; i <= 10; ++i) {\n    printf(\"%d x %d = %d \\n\", n, i, n * i);\n  }\n  return 0;\n}\n",
  "c-plus-plus": "/*\nAuthor -> Abhinav Prabhat\nDate   -> 28-01-2023\n*/\n\n#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n\n    int number;\n\n    cout << \"\\n\\nEnter the number whose table you want -> \";\n    cin >> number;\n\n    int temp = 1;\n\n    while (temp < 11)\n    {\n        cout << number << \" x \" << temp << \" = \" << number * temp << endl;\n        temp++;\n    }\n\n    return 0;\n}\n",
  "c-sharp": "using System;  \npublic class Multiplication  \n{  \n    public static void Main() \n{\n   int j,n;\n   Console.Write(\"Enter a number to generate multiplication table: \");\n   n= Convert.ToInt32(Console.ReadLine());   \n   Console.Write(\"\\n\");\n   for(j=1;j<=10;j++)\n   {\n     Console.Write(\"{0} X {1} = {2} \\n\",n,j,n*j);\n   }\n  }\n}\n",
  "java": "import java.util.Scanner;  \npublic class TableExample  \n{  \npublic static void main(String args[])   \n{  \nScanner sc = new Scanner(System.in);  \nSystem.out.print(\"Enter number: \");       \n//reading a number whose table is to be print  \nint num=sc.nextInt();  \n//loop start execution form and execute until the condition i<=10 becomes false  \nfor(int i=1; i <= 10; i++)  \n{  \n//prints table of the entered number      \nSystem.out.println(num+\" * \"+i+\" = \"+num*i);  \n}  \n}  \n}  \n",
  "javascript": "function PrintMultiplicationTable() {\n  const number = parseInt(prompt(\"Enter an integer:\"));\n  const range = parseInt(prompt(\"Enter a range:\"));\n\n  for (let i = 1; i <= range; i++) {\n    const prod = number * i;\n    console.log(`${number} x ${i} = ${prod}`);\n  }\n  return;\n}\n",
  "ruby": "# Multiplication table in ruby...\n\nputs \"Enter the number whose multiples must be shown : \"\nuser_input = gets\ndef printMultiplicationTable number\n    numArray = (1..10).to_a\n    numArray.each do |num|\n        puts \"#{number} x #{num} = #{num*number}\"\n    end\n\nend\nprintMultiplicationTable Integer (user_input)\n",
  "swift": "import Swift\nimport Foundation\n\nprint(\"Enter number: \")\nvar tablenumber = Int(readLine()!)!\nprint(\"Enter range: \")\nvar tableRange = Int(readLine()!)!\n\nprint(\"Multiplication table of \\(tablenumber): \")\nfor j in 1...tableRange{\n\tprint(\"\\(tablenumber) * \\(j) = \\(tablenumber * j)\")\n}\n",
  "typescript": "const printMultiplicationTable = (num: number) => {\n  for (let i = 1; i <= 10; i++) {\n    console.log(`${num} x ${i} = ${num * i}`);\n  }\n};\n\nprintMultiplicationTable(2);\n",
  "description": "\n## Write a program to print multiplication table\n\n```txt\nInput  : 2\n\n2 x 1 = 2\n2 x 2 = 4\n2 x 3 = 6\n2 x 4 = 8\n2 x 5 = 10\n2 x 6 = 12\n2 x 7 = 14\n2 x 8 = 16\n2 x 9 = 18\n2 x 10 = 20\n```\n\n---\n",
  "trackId": 1686,
  "lastUpdated": "2023-11-04T18:35:09Z",
  "contributors": [
    "harshraj8843",
    "Preetraj2002",
    "james-tharit",
    "apurvagandhi",
    "anandfresh",
    "esivakumar26",
    "AbhinavPrabhat01",
    "jfinley6",
    "codingkush",
    "Chirag8023",
    "metaloozee",
    "xinwei47",
    "joao-vitor-souza"
  ],
  "julia": "print(\"Enter a number : \")\nnum = parse(Int64, readline(stdin))\nfor i in 1:10\n    println(\"$num x $i = \",num*i)\nend  \n",
  "scala": "def multab(tblnum: Int) = {\n    var tab = 0\n    for (i <-(1 to 10)) { tab += tblnum \n    println(tblnum+ \" x \" +i+ \" = \"+ tab)\n }} \nmultab(2)\n",
  "go": "package main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\t// Get the number from the user\n\tvar number int\n\tfmt.Print(\"Enter a number: \")\n\tfmt.Scanf(\"%d\", &number)\n\n\t// Print the multiplication table\n\tfor i := 1; i <= 10; i++ {\n\t\tfmt.Printf(\"%d x %d = %d\\n\", number, i, number*i)\n\t}\n}\n",
  "php": "<?php\n\nfunction multiplicationTable($n)\n{\n    for ($i = 1; $i <= 10; $i++) {\n        echo \"$n * $i = \" . $n * $i . \"\\n\";\n    }\n}\n\n$n = (int) readline();\nmultiplicationTable($n);\n\n?>\n",
  "perl": "&table(2);\n\nsub table{\n\t\n\tmy $i = 1;\n\tmy $loop;\n\t\n\tforeach $loop(@_){\n\t\tfor($i;$i<=10;$i++){\n\t\t  my $ans = $i*$loop;\n\t      print\"$loop x $i = $ans \\n\";\n\t\t}\t  \n\t   print\"\\n\";   \n\t}\n}\n",
  "python": "n = int(input())\n\nfor i in range(1, 11):\n    print(f\"{n} x {i} = {n * i}\")\n",
  "r": "# Take user input for the number\nnumber <- as.numeric(readline(\"Input: \"))\n\n# Validate input\nif (!is.numeric(number)) {\n  cat(\"Invalid input. Please enter a valid number.\")\n} else {\n  # Print multiplication table\n  for (i in 1:10) {\n    result <- number * i\n    cat(number, \"x\", i, \"=\", result, \"\\n\")\n  }\n}\n",
  "rust": "use std::io::{self, Write};\n\nfn main() { \n   print!(\"Input: \");\n    io::stdout().flush().expect(\"flush failed!\");\n\n    let mut str = String::new();\n    match io::stdin().read_line(&mut str) {\n        Ok(_) => (),\n        Err(err) => println!(\"Could not parse input: {}\", err)\n    }\n\n    print_multi_table(&str);\n\n}\n\n\nfn print_multi_table(str:&String) {\n    let n:i8 = str.trim().parse().expect(\"Failed to parse\");\n    let mut i = 1;\n    while i <= 10 {\n        println!(\"{n} x {i} = {}\",n*i);\n        i=i+1;\n    };\n}\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "java",
    "javascript",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "scala",
    "go",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}