{
  "slug": "merge-two-strings",
  "title": "Merge Two Strings",
  "c": "#include <stdio.h>\n#include <string.h>\n\nint main() {\n\tchar str1[20], str2[20], merged[40];\n\tscanf(\"%s %s\", str1, str2);\n\tstrcpy(merged, str1);\n\tstrcat(merged, str2);\n\n\tprintf(\"%s\", merged);\n\treturn 0;\n}\n",
  "c-plus-plus": "// Concatenates two strings.\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\nstring Concat(string a, string b){\n    return a+b;\n}\nint main(){\n    string s,s2;   cin>>s>>s2;\n    cout<<Concat(s,s2)<<endl;\n    return 0;\n}\n\n/*\nContributed by : Kartikeya Saini\n*/",
  "c-sharp": "using System;\nclass Program\n{\n    static void Main()\n    {\n        string s1 = \"ABC\";\n        string s2 = \"DEF\";\n        Console.WriteLine(string.Concat(s1, s2));\n        Console.ReadLine();\n    }\n}\n",
  "f-sharp": "let mergeStrings str1 str2 =\n    String.Concat([|str1; str2|])\n    \n// Example usage\nlet merged = mergeStrings \"ABC\" \"DEF\"\nprintfn \"%s\" merged // Outputs \"ABCDEF\"\n",
  "java": "import java.util.Scanner;\n\npublic class MergeTwoStrings {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        System.out.print(\"Enter String 1: \");\n        String s1 = sc.nextLine();\n        System.out.print(\"Enter String 2: \");\n        String s2 = sc.nextLine();\n        System.out.println(\"Resultant String: \" +s1 + s2);\n    }\n}\n",
  "javascript": "function mergeStrings(str1, str2) {\n  return str1 + str2;\n}\n\nconsole.log(mergeStrings(\"ABC\", \"DEF\"));\n",
  "kotlin": "fun main(args: Array<String>) {\n    val a = \"Hello\"\n    val b = \"World\"\n    val c = a.plus(\" \").plus(b)\n    val d = a + \" \" + b\n\n    println(c)\n    println(d)\n}\n",
  "ruby": "def mergeStrings(str1, str2)\n   puts str1+str2;\nend\n\nmergeStrings('ABC', 'DEF')\n",
  "swift": "import Swift\nimport Foundation\n\nprint(\"Enter string1: \")\nvar string1 = readLine()!\n\nprint(\"Enter string2: \")\nvar string2 = readLine()!\n\nprint(string1 + string2)\n",
  "typescript": "const MergeTwoStrings = (s1: string, s2: string): string => {\n  return s1.concat(s2.toString());\n};\nexport default MergeTwoStrings;\n",
  "description": "\n## Write a program to merge two strings\n\n```txt\nInput  : ABC DEF\nOutput : ABCDEF\n```\n\n---\n",
  "trackId": 5423,
  "lastUpdated": "2023-10-23T09:27:22Z",
  "contributors": [
    "einan202",
    "harshraj8843",
    "anandfresh",
    "Preetiraj3697",
    "esivakumar26",
    "tom-laplace",
    "vipulkmr02",
    "james-tharit",
    "iamtejasmane",
    "SarthakSanjay",
    "Varun-Dhruv",
    "Dcastro99",
    "dineshlalam15"
  ],
  "julia": "print(\"Enter the first string : \")\ns1 = readline()\nprint(\"Enter the second string : \")\ns2 = readline()\ns = s1 * s2\nprint(\"Merged String : \"*s)\n",
  "scala": "import scala.io.StdIn._;\n\nobject mergeStrings {\n    def main(args:Array[String]):Unit={\n        println(\"Enter the String1 : \");\n        var string1 = readLine();\n        println(\"Enter the String2 : \");\n        var string2 = readLine();\n        var mergedString = string1+string2;\n        println(\"Merged String : \"+mergedString);\n    }\n}\n",
  "dart": "String _mergeStrings(String str1, String str2) {\n  return str1 + str2;\n}\n\nvoid main() {\n  print(_mergeStrings('ABC', 'DEF'));\n}\n",
  "go": "package main\n\nimport \"fmt\"\n\nfunc merge(a, b string) string {\n\treturn a + b\n}\nfunc main() {\n\tvar str1 string\n\tvar str2 string\n\n\tfmt.Println(\"Enter two strings:\")\n\tfmt.Scanln(&str1)\n\tfmt.Scanln(&str2)\n\n\tfmt.Println(merge(str1, str2))\n}",
  "php": "<?php\n\nfunction mergeStrings($str1, $str2){\n  return $str1.$str2;\n}\n\necho mergeStrings('ABC', 'DEF');\n\n?>\n",
  "perl": "$str1 = \"ABC\";\n$str2 = \"DEF\";\n\n$merge = $str1.$str2;\n\nprint $merge;\n",
  "python": "# This python script calculates the  concatenation of two given strings str1 and str2\n\nstring1 = str(input(\"Enter a string  : \"))\nstring2 = str(input(\"Enter another string : \"))\n\n\ndef mergeString(str1: str, str2: str) -> str:\n    return str1 + str2\n\n\nprint(\"Merged String : \", mergeString(string1, string2))\n",
  "r": "string1 = 'ABC'\nstring2 = 'DEF'\ncat(\"Merged String : \", paste(string1, string2))\n",
  "rust": "fn merge_two_strings(str1: &str, str2: &str) -> String {\n    let mut str3 = String::new();\n    str3.push_str(str1);\n    str3.push_str(str2);\n    return str3\n}\n\nfn main() {\n    println!(\"{}\", merge_two_strings(\"ABC\", \"DEF\"));\n}",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "scala",
    "dart",
    "go",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}