{
  "slug": "check-alphabet",
  "title": "Check Alphabet",
  "c": "\n//CheckAlphabet.c\n\n#include <stdio.h>\n\nint main()\n{\n    char ch;\n    scanf(\"%c\",&ch);\n    if((ch>='A' && ch<='Z') || (ch>='a' && ch<='z')) printf(\"Alphabet\\n\");\n    else printf(\"Not Alphabet\\n\");\n    return 0;\n}\n",
  "c-plus-plus": "//Contributed by Raghav Garg\n//CheckAlphabet.cpp\n#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n    char ch;\n    cin>>ch;\n    if((ch>='A' && ch<='Z') || (ch>='a' && ch<='z')) cout<<\"Alphabet\"<<'\\n';\n    else cout<<\"Not Alphabet\"<<'\\n';\n}\n",
  "c-sharp": "ï»¿using System;\r\n  \r\nclass CheckAlphabet {\r\n  \r\n    static public void Main()\r\n    {\r\n        Console.WriteLine(\"Input a character: \");\r\n        char ch = (char)Console.Read();\r\n        \r\n        if (Char.IsLetter(ch)) {\r\n             Console.WriteLine(ch + \" is an alphabet\");\r\n        } else {\r\n             Console.WriteLine(ch + \" is not an alphabet\");\r\n        }\r\n     \r\n    }\r\n}",
  "java": "import java.util.Scanner;\n\nclass CheckAlphabet {\n    public static void main(String[] args) {\n\n        Scanner input = new Scanner(System.in);\n        System.out.print(\"Input a character: \");\n\n        char ch = input.next().charAt(0);\n\n        if ((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z')) {\n            System.out.println(ch + \" is an alphabet\");\n        } else {\n            System.out.println(ch + \" is not an alphabet\");\n        }\n    }\n}",
  "javascript": "function isCharacterALetter(char) {\n  return /[a-zA-Z]/.test(char) ? \"Alphabet\" : \"Not Alphabet\";\n}\n\nconsole.log(isCharacterALetter(\"a\"));\nconsole.log(isCharacterALetter(\"Z\"));\nconsole.log(isCharacterALetter(\"!\"));\n",
  "kotlin": "fun main() {\n    print(\"Input : \")\n    println()\n    var input = readLine()\n\n    println(\"Is $input is an alphabet : \" + CheckAlphabet(input!!))\n\n}\n\nprivate fun CheckAlphabet(inputStr: String): Boolean {\n    val c = inputStr.first()\n    if (c in 'a'..'z' || c in 'A'..'Z')\n        return true\n    else\n        return false\n}\n",
  "ruby": "print \"Enter a string: \";\nstr = gets.chomp;  \n\nputs case \nwhen str.match(/\\d/)\n    \"Input string contains numbers\";    \nwhen str.match(/[a-zA-Z]/)\n    \"Input string contains letters\";    \nelse\n    \"Invalid choice\";    \nend\n",
  "swift": "import Swift\nimport Foundation\n\nextension String {\n    var isAlphabet: Bool {\n        return !isEmpty && range(of: \"[^a-zA-Z]\", options: .regularExpression) == nil\n    }\n}\n\nprint(\"A\".isAlphabet) //true\nprint(\"a\".isAlphabet) //true\nprint(\"1\".isAlphabet) //false\nprint(\"&\".isAlphabet) //false\n",
  "typescript": "function isCharacterALetter(char: string): string {\n  return /[a-zA-Z]/.test(char) ? \"Alphabet\" : \"Not Alphabet\";\n}\n\nconsole.log(isCharacterALetter(\"a\"));\nconsole.log(isCharacterALetter(\"Z\"));\nconsole.log(isCharacterALetter(\"!\"));\n",
  "description": "\n## Write a program to check alphabet\n\nCheck that the given character is an alphabet or not (a-z, A-Z).\n\n```txt\nInput  : a\nOutput : Alphabet\n```\n\n---\n",
  "trackId": 1512,
  "lastUpdated": "2023-10-12T00:32:41Z",
  "contributors": [
    "james-tharit",
    "harshraj8843",
    "esivakumar26",
    "anandfresh",
    "sancoLgates",
    "rksp25",
    "joao-vitor-souza",
    "ronaldvimal",
    "jyotik09",
    "Ipankaj07",
    "grraghav120",
    "rahmat-dev",
    "PraaneshSelvaraj"
  ],
  "scala": "object alphabets {\n  def main(args:Array[String]):Unit={\n    val ch = 'a';\n    val result = ch.isLetter;\n    println(\"Alphabet : \"+result);\n  }\n}\n",
  "go": "package main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nvar isAlphabet = regexp.MustCompile(`^[a-zA-Z]`).MatchString\n\nfunc main() {\n\tvar str string\n\tfmt.Print(\"Input a character: \")\n\tfmt.Scan(&str)\n\t\n\tif (isAlphabet(str)) {\n\t\tfmt.Println(\"Alphabet\")\n\t} else {\n\t\tfmt.Println(\"Non Alphabet\")\n\t}\n}\n",
  "php": "<?php\n\nfunction check_alphabet($text)\n{\n\treturn ctype_alpha($text);\n}\n\necho check_alphabet('a') ? 'Alphabet' : 'Non Alphabet';\n",
  "python": "alphabet = input(\"\")\n# checking using isalpha() function.\nif alphabet.isalpha():\n    print(\"Alphabet\")\nelse:\n    print(\"Not an Alphabet\")\n",
  "rust": "use std::io::{self, Write};\n\nfn main() {\n    print!(\"Input: \");\n    io::stdout().flush().expect(\"flush failed!\");\n\n    let mut input = String::new();\n    match io::stdin().read_line(&mut input) {\n        Ok(_) => (),\n        Err(err) => println!(\"Could not read input: {}\", err),\n    }\n\n    match input.trim().parse::<i32>() {\n        Ok(n) => print_multi_table(n),\n        Err(_) => println!(\"Input is not a valid number.\"),\n    }\n}\n\nfn print_multi_table(n: i32) {\n    let mut i = 1;\n    while i <= 10 {\n        println!(\"{n} x {i} = {result}\", n = n, i = i, result = n * i);\n        i += 1;\n    }\n}\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "scala",
    "go",
    "php",
    "python",
    "rust"
  ]
}