{
  "slug": "convert-string-to-vowelcase",
  "title": "Convert String To Vowelcase",
  "c": "#include <stdio.h>\n\nint main()\n{\n  char mystring[30];\n  \n  printf(\"Please input string for conversion: \");\n\n  scanf(\"%[^\\n]s\", &mystring);\n\n  for (size_t i = 0; i < sizeof(mystring); i++)\n  {\n    if (mystring[i] >=65 && mystring[i] <=90)\n    {\n      mystring[i] += 32;\n    }\n    \n    switch (mystring[i])\n    {\n    case 'a':\n      mystring[i] = 'A';\n      break;\n\n    case 'e':\n      mystring[i] = 'E';\n      break;\n\n    case 'i':\n      mystring[i] = 'I';\n      break;\n\n    case 'o':\n      mystring[i] = 'O';\n      break;\n\n    case 'u':\n      mystring[i] = 'U';\n      break;\n    \n    default:\n      break;\n    }\n  }  \n  printf(\"Converted string in Vowelcase is %s\", mystring);\n  \n  return 0;\n}",
  "c-plus-plus": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main() {\n\tstring str;\n\n\tcout << \"Enter the string:\" << endl;\n\n\tgetline(cin, str);\n\n\tfor (char &c : str) {\n    if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n        c = toupper(c);\n    } else if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n        continue;\n    } else {\n        c = tolower(c);\n    }\n\t}\n\n\tcout << \"String to vowel case:\\n\" << str << endl;\n\n\treturn 0;\n}",
  "c-sharp": "using System;\n\npublic class ConvertStringToVowelcase\n{\n    public static void Main(string[] args)\n    {\n        Console.WriteLine(\"Enter a text to convert\");\n        var text = Console.ReadLine();\n        Console.WriteLine(ConvertTextToVowelCase(text ?? \"\"));\n        Console.ReadLine();\n    }\n\n    private static string ConvertTextToVowelCase(string text)\n    {\n        var result = string.Empty;\n\n        foreach (var letter in text)\n        {\n            switch (letter) { \n                case 'a':\n                case 'e':\n                case 'i':\n                case 'o':\n                case 'u':\n                    result += char.ToUpper(letter);\n                    break;\n                default:\n                    result += char.ToLower(letter);\n                    break;\n            }\n        }\n\n        return result;\n    }\n}\n",
  "f-sharp": "let convertToVowelCase (inputString: string) =\n    let vowels = \"aeiouAEIOU\"\n    \n    let isVowel (c: char) = vowels.Contains(c)\n    \n    let applyVowelCase (c: char) =\n        if isVowel c then System.Char.ToUpper(c) else System.Char.ToLower(c)\n    \n    let result = inputString.ToCharArray() |> Array.map applyVowelCase |> System.String\n\n    result\n\n// Example usage:\nlet input = \"hello world\"\nlet output = convertToVowelCase input\nprintfn \"Input: %s\\nOutput: %s\" input output",
  "java": "public class ConvertStringToVowelcase {\n  public static void main(String[] args) {\n    String val = \"Hello world!\";\n    val.toLowerCase().chars().mapToObj(c -> (char) c).forEach(c -> {\n      if (\"aeiou\".contains(c.toString())) {\n        System.out.print(Character.toUpperCase(c));\n      } else {\n        System.out.print(c);\n      }\n    });\n  }\n}\n",
  "javascript": "const vowelCase = (str) => {\n  return str\n    .toLowerCase()\n    .split(\"\")\n    .reduce(\n      (a, c) => a + (/[aeiou]/i.test(c) ? c.toUpperCase() : c.toLowerCase()),\n      \"\",\n    );\n};\n\nconsole.log(vowelCase(\"hello world\"));\n",
  "kotlin": "import java.util.Scanner\n\nfun main() {\n    print(\"Enter String : \")\n    println()\n    var min = readLine()\n\n    println(\"Vowel Case: \" + ConvertStringToVowelcase(min!!.split(\" \")))\n\n}\n\nprivate fun ConvertStringToVowelcase(args: List<String>): String {\n    val buffer = StringBuffer()\n    for((index1,case) in args.withIndex()){\n        if(index1 != 0) {\n            buffer.append(\" \")\n        }\n        for((index2,ch) in case.withIndex()){\n            if(ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u'){\n                buffer.append(ch.uppercase())\n            }else{\n                buffer.append(ch.lowercase())\n            }\n        }\n    }\n\n    return buffer.toString()\n}",
  "ruby": "module Vowelcase\n\n  VOWELS = %w[a e i o u]\n  \n  def self.vowel(string)\n    result = \"\"\n    string.chars { |c| VOWELS.include?(c) ? result += c.upcase : result += c.downcase }\n    result\n  end\nend\n\nputs Vowelcase.vowel(\"hello world\") # => hEllO wOrld",
  "swift": "func convertToVowelCase(_ input: String) -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    \n    let result = input.map { char -> Character in\n        if vowels.contains(char.lowercased().first ?? Character(\"\")) {\n            return char.uppercased().first ?? char\n        } else {\n            return char.lowercased().first ?? char\n        }\n    }\n    \n    return String(result)\n}\n\n// Example usage\nlet inputString = \"hello world\"\nlet result = convertToVowelCase(inputString)\n//print(inputString)\nprint(\"Input: \\(inputString)\")\nprint(\"Output: \\(result)\")\n",
  "typescript": "const vowelCase = (str: string): string => {\n  return str\n    .toLowerCase()\n    .split(\"\")\n    .reduce(\n      (a, c) => a + (/[aeiou]/i.test(c) ? c.toUpperCase() : c.toLowerCase()),\n      \"\",\n    );\n};\n\nconsole.log(vowelCase(\"hello world\"));\n",
  "description": "\n## Write a program to convert string to vowelcase\n\nVowelcase is a style of writing in which all vowels are converted to uppercase and all consonants are converted to lowercase.\n\n```txt\nInput  : \"hello world\"\nOutput : \"hEllO wOrld\"\n```\n\n---\n",
  "trackId": 4929,
  "lastUpdated": "2023-12-04T17:05:57Z",
  "contributors": [
    "SaideepKondur",
    "rajatpandey441",
    "Shubham-2110",
    "anandfresh",
    "anejman",
    "namrata18s",
    "Shaileshalluri",
    "harshraj8843",
    "apurvagandhi",
    "RiteshK-611",
    "esivakumar26",
    "HadasBrave",
    "gbauermann",
    "Fukurokudzu",
    "cacti23",
    "ob-codes",
    "rksp25"
  ],
  "julia": "println(\"Enter a string: \")\nsub = split(lowercase(readline()), \"\")\nvowels = SubString{String}[\"a\",\"e\",\"i\",\"o\",\"u\"]\ns = \"\"\n\nfor i in sub\n  if i in vowels\n    global s = s * uppercase(i)\n  else\n    global s = s * i\n  end\nend\n\nprintln(\"Given string in vowelcase: \", s)",
  "dart": "import 'dart:io';\n\nString toVowelCase(String input) {\n  List<String> vowels = ['a', 'e', 'i', 'o', 'u'];\n\n  String result = '';\n  for (int i = 0; i < input.length; i++) {\n    if (vowels.contains(input[i].toLowerCase())) {\n      result += input[i].toUpperCase();\n    } else {\n      result += input[i].toLowerCase();\n    }\n  }\n\n  return result;\n}\n\nvoid main() {\n  // Take user input\n  print(\"Enter a string:\");\n  String? userInput = stdin.readLineSync();\n\n  if (userInput != null) {\n    // Convert to vowel-case and print the result\n    String vowelCaseString = toVowelCase(userInput);\n    print(\"Vowel-case: $vowelCaseString\");\n  }\n}\n",
  "go": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n)\n\nfunc main() {\n\tstr := \"hello world\"\n\n\t// Convert all vowels to uppercase.\n\tvowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n\tfor _, vowel := range vowels {\n\t\tstr = strings.Replace(str, vowel, strings.ToUpper(vowel), -1)\n\t}\n\n\t// Convert all consonants to lowercase.\n\tconsonants := []string{\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"}\n\tfor _, consonant := range consonants {\n\t\tstr = strings.Replace(str, consonant, strings.ToLower(consonant), -1)\n\t}\n\n\tfmt.Println(str)\n}\n",
  "haskell": "import Data.Char (toLower, toUpper)\r\n\r\nvowelCase :: String -> String\r\nvowelCase [] = [] -- base case for empty string\r\nvowelCase (x:xs)\r\n    | elem x \"aeiouAEIOU\" = toUpper x : vowelCase xs -- if vowel, convert to uppercase\r\n    | otherwise = toLower x : vowelCase xs -- if consonant, convert to lowercase\r\n\r\nmain :: IO ()\r\nmain = do\r\n    putStrLn \"Enter a string:\"\r\n    input <- getLine\r\n    let result = vowelCase input\r\n    putStrLn $ \"Vowel-case converted string: \" ++ result",
  "php": "<?php\n\tfunction vowelCase($str) {\n\t  $vowels = ['a','e','i','o','u'];\n\t  $res = '';\n\t  for($i=0; $i< strlen($str); $i++){\n\t    if (in_array(strtolower($str[$i]), $vowels)){\n\t      $res .= strtoupper($str[$i]);\n\t    } else {\n\t      $res .= strtolower($str[$i]);\n\t    }\n\t  }\n\t  return $res;\n\t}\n\t\necho vowelCase('hello world');\n?>\n",
  "perl": "print \"Enter a string: \";\nchomp(my $str = <STDIN>);\nmy $result = '';\n$str = lc($str);\nforeach my $char (split //, $str) \n{ \n  if ($char =~ /[aeiou]/) \n  {   \n    $result .= uc($char);\n  } \n  else\n  {    \n    $result .= lc($char);\n  }}\nprint $result;\n",
  "python": "def Check_Vow(char, vowels):\n    if char in vowels:\n        return char.upper()\n    return char.lower()\n\n\ndef vowelCasePy(string_):\n    vowels = \"AaEeIiOoUu\"\n    new_string = \"\"\n    for char in string_:\n        new_string += Check_Vow(char, vowels)\n    return new_string\n",
  "r": "convertToVowelcase <- function(inputString) {\n  # Define a function to check if a character is a vowel\n  isVowel <- function(char) {\n    vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\")\n    char <- tolower(char)  # Convert character to lowercase\n    return(char %in% vowels)\n  }\n  \n  # Convert the string to a vector of characters\n  charVector <- strsplit(inputString, NULL)[[1]]\n  \n  # Convert each character to vowelcase\n  result <- sapply(charVector, function(char) {\n    if (isVowel(char)) {\n      return(toupper(char))  # Convert vowel to uppercase\n    } else {\n      return(tolower(char))  # Convert consonant to lowercase\n    }\n  })\n  \n  # Combine the characters back into a string\n  resultString <- paste(result, collapse = \"\")\n  \n  return(resultString)\n}\n\n# Example usage\ninputString <- \"Programming IS Fun\"\noutputString <- convertToVowelcase(inputString)\ncat(\"Input  : \", inputString, \"\\n\")\ncat(\"Output : \", outputString, \"\\n\")\n",
  "rust": "fn to_vowel_case(input: &str) -> String {\n    let mut result = String::new();\n\n    for c in input.chars() {\n        match c.to_lowercase().next().unwrap() {\n            'a' | 'e' | 'i' | 'o' | 'u' => result.push(c.to_uppercase().next().unwrap()),\n            _ => result.push(c.to_lowercase().next().unwrap()),\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let input1 = \"hello world\";\n    let output1 = to_vowel_case(input1);\n    println!(\"Input: {}\\nOutput: {}\\n\", input1, output1);\n\n    let input2 = \"Programming IS Fun\";\n    let output2 = to_vowel_case(input2);\n    println!(\"Input: {}\\nOutput: {}\\n\", input2, output2);\n\n    let input3 = \"Rust Language\";\n    let output3 = to_vowel_case(input3);\n    println!(\"Input: {}\\nOutput: {}\\n\", input3, output3);\n}\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "dart",
    "go",
    "haskell",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}