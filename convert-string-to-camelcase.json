{
  "slug": "convert-string-to-camelcase",
  "title": "Convert String To Camelcase",
  "c": "#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    char str[100],camelcase[100];\n    int flag=0,i=0,j=0;\n    printf(\"Enter a sentence\\n\");\n    gets(str);\n    printf(\"Original String = %s\\n\",str);\n    while(str[i]!='\\0')\n    {\n        if(str[i]==' ')\n        {\n           i++;\n           flag=1;\n           continue;\n        }\n        if(flag==1)\n        {\n            camelcase[j]=str[i]-32;\n            flag=0;\n        }\n        else\n        {\n            camelcase[j]=str[i];\n        }\n        j++;\n        i++;\n    }\n    printf(\"Camel Case = %s\",camelcase);\n    return 0;\n}\n",
  "c-plus-plus": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n    string s;\n    getline(cin, s);\n\n    int ind = 0;\n    for (int i = 0; i < s.length(); i++){\n        if (s[i] == ' '){\n            s[i + 1] = toupper(s[i + 1]);\n            continue;\n        }\n        else\n            s[ind++] = s[i];\n    }\n\n    cout << s.substr(0, ind) << endl;\n    return 0;\n}\n",
  "c-sharp": "using System;\nclass CamelCase\n{\n    static void convert(String s)\n    {\n        int cnt= 0;\n        int n = s.Length;\n        char []ch = s.ToCharArray();\n        int res_ind = 0;\n \n        for (int i = 0; i < n; i++)\n        {\n            if (ch[i] == ' ')\n            {\n                cnt++;\n                ch[i + 1] = char.ToUpper(ch[i + 1]);\n                continue;\n            }\n            else\n                ch[res_ind++] = ch[i];\n        }\n \n        for(int i = 0; i < n - cnt; i++)\n            Console.Write(ch[i]);\n    }\n \n    public static void Main(String []args)\n    {\n        String str = \"hello world\";\n        convert(str);\n    }\n}\n",
  "java": "import java.util.Scanner;\n\npublic class ConvertStringToCamelCase {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Input: \");\n        String input = scanner.nextLine();\n        String[] inputArray = input.split(\" \");\n        StringBuilder output = new StringBuilder();\n        for(int i = 0; i < inputArray.length; i++) {\n            if(i == 0) {\n                output.append(inputArray[i]);\n            } else {\n                output.append(String.valueOf(inputArray[i].charAt(0)).toUpperCase()).append(inputArray[i].substring(1));\n            }\n        }\n        System.out.println(\"Output: \" + output);\n    }\n}",
  "javascript": "function convertStringToCamelCase(str) {\n  var splitVal = str.split(\" \");\n  for (var i = 1; i < splitVal.length; i++) {\n    splitVal[i] =\n      splitVal[i].substr(0, 1).toUpperCase() + splitVal[i].substr(1);\n  }\n  return splitVal.join(\"\");\n}\n\nconsole.log(convertStringToCamelCase(\"hello world\"));\n",
  "kotlin": "import java.util.Scanner\n\nfun main() {\n    print(\"Enter String : \")\n    println()\n    var min = readLine()\n\n    println(\"Camel Case: \" + CamelCase(min!!.split(\" \")))\n\n}\n\nprivate fun CamelCase(args: List<String>): String {\n    val buffer = StringBuffer()\n    for((index,day) in args.withIndex()){\n        //println(\"$index :$day\")\n        if(index == 0) {\n            buffer.append(day);\n        } else {\n            buffer.append(day.get(0).uppercase()).append(day.subSequence(1,day.length))\n        }\n    }\n\n    return buffer.toString()\n}",
  "ruby": "puts 'Please, insert your string: '\nuser_input = gets.chomp\nresult = user_input.split(' ').map(&:capitalize).join\nresult[0] = result[0].downcase\nputs result\n",
  "typescript": "function stringToCamelcase(str: string): string {\n  let i: number = 0;\n  const splitstr: string[] = str.split(\"\");\n\n  while (i < splitstr.length) {\n    if (splitstr[i] === \" \") {\n      splitstr.splice(i, 1);\n      splitstr[i] = splitstr[i].toUpperCase();\n    }\n    i++;\n  }\n  return splitstr.join(\"\");\n}\n\nconst str: string = \"hello world\";\nconsole.log(stringToCamelcase(str)); // \"helloWorld\"\n",
  "description": "\n## Write a program to convert string to camelcase\n\nCamelcase is a style of writing in which the first letter of each word is capitalized except the first word.\n\n```txt\nInput  : \"hello world\"\nOutput : \"helloWorld\"\n```\n\n---\n",
  "trackId": 3221,
  "lastUpdated": "2023-12-08T05:01:51Z",
  "contributors": [
    "anandfresh",
    "harshraj8843",
    "apurvagandhi",
    "RiteshK-611",
    "rafaover",
    "rksp25",
    "manishankardurai",
    "vedha-vikash-pixel",
    "astitva0011",
    "i-am-tj",
    "sanjeev0210",
    "Ludof63"
  ],
  "julia": "println(\"Enter a string: \")\nsub = split(readline(), \" \")\nn = length(sub)\ns = sub[1]\n\nfor i in 2:n\n global s = s * titlecase(sub[i])\nend\n\nprintln(\"Given string in camelcase: \", s)",
  "go": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n)\n\nfunc camelcase(str string) string {\n\twords := strings.Split(str, \" \")\n\tnew_words := []string{}\n\ti := 0\n\tfor _, word := range words {\n\t\tif len(word) > 1 && i > 0 {\n\t\t\tnew_words = append(new_words, strings.ToUpper(word[0:1])+(word[1:]))\n\t\t} else {\n\t\t\tnew_words = append(new_words, word)\n\t\t}\n\t\ti++\n\t}\n\treturn strings.Join(new_words, \"\")\n}\n\nfunc main() {\n\tstr := \"hello coders\"\n\tfmt.Println(camelcase(str))\n}\n",
  "php": "<?php\nfunction stringToCamelCase($string, $capitalizeFirstCharacter = false) \n{\n    $str = str_replace(' ', '', ucwords(str_replace(' ', ' ', $string)));\n    if (!$capitalizeFirstCharacter) {\n        $str[0] = strtolower($str[0]);\n    }\n    return $str;\n}\n\necho stringToCamelCase('hello world');\n?>\n",
  "perl": "my $str = 'hello world';\n$_ = $str;\n$_ = lc;\ns/(?<=[^\\W_]) +([^\\W_])|_+/\\U$1/g;\nprint;\n",
  "python": "from re import sub\n\na = input()\n# the below line removes _ or - with \" \", then each word's first letter is made capital,\n# and finally we proceed with replacing \" \" with \"\"\na = sub(\"r[_|-]\", \" \", a).title().replace(\" \", \"\")\nprint(\"\".join([a[0].lower(), a[1:]]))\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "typescript",
    "julia",
    "go",
    "php",
    "perl",
    "python"
  ]
}