{
  "slug": "convert-binary-to-hexadecimal",
  "title": "Convert Binary To Hexadecimal",
  "c": "#include <stdio.h>\nint main(){\n   long int binaryval, hexadecimalval = 0, i = 1, remainder;\n   printf(\"Enter the binary number: \");\n   scanf(\"%ld\", &binaryval);\n   while (binaryval != 0){\n      remainder = binaryval % 10;\n      hexadecimalval = hexadecimalval + remainder * i;\n      i = i * 2;\n      binaryval = binaryval / 10;\n   }\n   printf(\"Equivalent hexadecimal value: %lX\", hexadecimalval);\n   return 0;\n}\n",
  "c-plus-plus": "#include <iostream>\n#include <string>\n#include <bitset>\n\nint main() {\n    std::string binary;\n    std::cout << \"Enter a binary number: \";\n    std::cin >> binary;\n\n    // Convert binary string to hexadecimal using bitset\n    std::bitset<32> bit(binary); // We assume a 32-bit binary number\n    unsigned long hex = bit.to_ulong();\n\n    std::cout << \"The hexadecimal equivalent of \" << binary << \" is: \" << std::hex << hex << std::endl;\n\n    return 0;\n}",
  "c-sharp": "using System;\n\n\nnamespace ConsoleApp1\n{\n    internal class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.Write(\"Enter a binary number: \");\n            string BinaryInput = Console.ReadLine();\n            try {\n                int DecimalNumber = Convert.ToInt32(BinaryInput, 2);\n                string hexNumber = DecimalNumber.ToString(\"X\");\n                Console.WriteLine($\"Hexadecimal representation: {hexNumber}\");\n                Console.ReadLine();\n            } catch {\n                Console.WriteLine(\"Invalid binary number.\");\n                Console.ReadLine();\n            }\n        }\n    }\n}\n",
  "java": "import java.lang.*;\nimport java.util.*;\npublic class ConvertBinaryToHexadecimal{  \n    public static void main(String args[]){  \n    Scanner sc = new Scanner(System.in);\n    String binaryString=sc.nextLine();  \n    int decimal=Integer.parseInt(binaryString,2);  \n    System.out.println(Integer.toHexString(decimal).toUpperCase());  \n    }\n}",
  "javascript": "function binaryToHexaDecimal(num) {\n  return parseInt(num, 2).toString(16).toUpperCase();\n}\n\nconsole.log(\"Binary to HexaDecimal\", binaryToHexaDecimal(\"1011\"));\n",
  "ruby": "def binary_to_decimal(binary)\n  decimal = 0\n  binary.reverse.each_char.with_index do |bit, index|\n    decimal += bit.to_i * (2**index)\n  end\n  return decimal\nend\n\ndef decimal_to_hexadecimal(decimal)\n  hexadecimal = ''\n  while decimal > 0\n    remainder = decimal % 16\n    if remainder < 10\n      hexadecimal = remainder.to_s + hexadecimal\n    else\n      hexadecimal = ('A'.ord + remainder - 10).chr + hexadecimal\n    end\n    decimal /= 16\n  end\n  return hexadecimal\nend\n\nputs \"Enter a binary number: \"\nbinary_number = gets.chomp\n\n\nif binary_number.match(/^[01]+$/)\n  decimal_number = binary_to_decimal(binary_number)\n  hexadecimal_number = decimal_to_hexadecimal(decimal_number)\n  puts \"Hexadecimal equivalent: #{hexadecimal_number}\"\nelse\n  puts \"Invalid binary input. Please enter a valid binary number.\"\nend\n",
  "typescript": "function binaryToHexaDecimal(num: string) {\n  return parseInt(num, 2).toString(16).toUpperCase();\n}\n\nconsole.log(\"Binary to HexaDecimal\", binaryToHexaDecimal(\"1011\"));\n",
  "description": "\n## Write a program to convert binary to hexadecimal\n\nBinary is a base-2 number system. It uses only two digits: 0 and 1. The digits are called bits. A bit is the smallest unit of information in a computer. A bit can be either 0 or 1. A bit can be used to represent a single value, such as 0 or 1, or it can be used to represent a single state, such as on or off.\n\nHexadecimal is a base-16 number system. It uses sixteen digits: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, and F. The digits are called hexits. A hexit is the smallest unit of information in a computer. A hexit can be used to represent a single value, such as 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, or F, or it can be used to represent a single state, such as on or off.\n\nTo convert a binary number to hexadecimal, we can use the following algorithm:\n\n1. Convert the binary number to decimal.\n2. Convert the decimal number to hexadecimal.\n\n```txt\nInput  : 1010\nOutput : A\n```\n\n---\n",
  "trackId": 936,
  "lastUpdated": "2023-10-17T04:18:24Z",
  "contributors": [
    "MadhuS-1605",
    "anandfresh",
    "ariporat",
    "harshraj8843",
    "Roybas2001",
    "RiteshK-611",
    "Shalevro2",
    "joao-vitor-souza",
    "error707-persona",
    "Chirag8023",
    "greeshma-d",
    "heySanj"
  ],
  "julia": "println(\"Enter a binary number: \") \nx = readline()\ny = parse(Int, x, base=2)\ny = string(y, base=16)\nprintln(\"Hexadecimal of \", x, \": \", uppercase(y))",
  "go": "package main\n\nimport (\n    \"fmt\"\n    \"strconv\"\n)\n\nfunc parseBinToHex(s string) string {\n    ui, err := strconv.ParseUint(s, 2, 64)\n    if err != nil {\n        return \"error\"\n    }\n\n    return fmt.Sprintf(\"%x\", ui)\n}\n\nfunc main() {\n  var value string\n  fmt.Println(\"Enter binary value:\")\n  fmt.Scan(&value)\n  fmt.Println(parseBinToHex(value))\n}\n",
  "php": "<?php\n$bin = '1010';\n$hex = dechex(bindec($bin));\n\necho $hex;\n",
  "perl": "#!/usr/bin/perl\nuse warnings;\nuse strict;\n\nmy $binary = 1010;\nmy $int = unpack(\"N\", pack(\"B32\", substr(\"0\" x 32 . $binary, -32)));\nmy $hex = sprintf(\"%x\", $int );\nprint uc($hex),\"\\n\";\n",
  "python": "# Input a binary number and remove any white spaces\r\nbinary_num = (input(\"Enter a binary number: \")).replace(\" \", \"\")\r\n\r\ntry:\r\n    # Convert to integer\r\n    int_num = int(binary_num, 2)\r\n\r\n    # Convert to hexadecimal and format correctly\r\n    hex_num = format(int_num, \"x\").upper()\r\n\r\n    # Print result\r\n    print(hex_num)\r\n\r\nexcept:\r\n    # Error\r\n    print(\"Please input a valid binary number.\")\r\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "java",
    "javascript",
    "ruby",
    "typescript",
    "julia",
    "go",
    "php",
    "perl",
    "python"
  ]
}