{
  "slug": "find-sum-of-digits-of-a-number",
  "title": "Find Sum Of Digits Of A Number",
  "c": "#include <stdio.h>\n\nint sum_of_digits(int nmbr) {\n\tint sum = 0;\n\n\twhile (nmbr != 0) {\n\t\tsum += nmbr % 10;\n\t\tnmbr /= 10;\n\t}\n\n\treturn sum;\n}\n\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tprintf(\"%d\", sum_of_digits(n));\n\treturn 0;\n}\n",
  "c-plus-plus": "// Sum of Digits of a number\n//Time complexity O(N) and space Complexity O(1);\n\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\nint main(){\n    string input;   cin>>input;\n    ll sum=0;\n    // cout<< (int)'1';\n    for(int i=0;i<input.length();i++){\n        sum+= ((int)input[i]-48);  //Ascii value of '1' is 49. So if (int)'1'-48 --> 49-48 = 1; similarly if (int)'2' - 48 --> 50 - 48 = 2;\n    }\n\n    cout<<sum<<endl;\n    return 0;\n}\n\n/*\nContributed by : Kartikeya Saini\n*/",
  "c-sharp": "using System;\nnamespace SumOfDigits\n{\n    public class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.Write(\"Enter the Number : \");\n            int number = int.Parse(Console.ReadLine());\n            int sum = 0, reminder;\n           \n            while (number > 0)\n            {\n                reminder = number % 10;\n                sum = sum + reminder;\n                number = number / 10;\n            }\n            \n            Console.WriteLine($\"The Sum of Digits is : {sum}\");\n            Console.ReadKey();\n        }\n    }\n}\n",
  "f-sharp": "// program to find the sum of digits of a number\nlet sumOfDigits (n: int) =\n    let mutable number = n\n    let mutable digitSum = 0\n    while number > 0 do\n        let digit = number % 10\n        digitSum <- digitSum + digit\n        number <- number / 10\n    digitSum\n\n// Example usage:\nlet number = 123\nlet result = sumOfDigits number\nprintfn \"%d\" result\n",
  "java": "import java.util.Scanner;\n\npublic class FindSumOfDigitsOfANumber {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int num = sc.nextInt();\n        System.out.println(findSum(num));\n    }\n    static int findSum(int n){\n        int sum = 0;\n        while(n != 0){\n            sum += n%10;\n            n/= 10;\n        } \n      return sum;\n    }\n}\n",
  "javascript": "// Write a JavaScript program to find sum of digits of a number\n// Suppose you have a number n and you want to find the sum of its digits.\n// For example, if n = 123, then the sum of its digits is 1 + 2 + 3 = 6.\n\nfunction sumOfDigits(number) {\n  let digits = number.toString().split(\"\");\n  let sum = 0;\n\n  for (let i = 0; i < digits.length; i++) {\n    sum += parseInt(digits[i]);\n  }\n  return sum;\n}\n",
  "kotlin": "fun main() {\n    sumOfNumberDigits(123)\n}\n\nfun sumOfNumberDigits(n: Int){\n    var x = n;\n    var sum = 0\n    while (x > 0) {\n        var y = x % 10\n        sum += y\n        x /= 10\n    }\n    println(sum)\n}\n",
  "ruby": "def sumOfDigits(num,sum)\n\tif num > 0 \n\t\tsum += (num % 10);\n\t\tsumOfDigits(num / 10,sum);\n\telse\n\t    return sum;    \n\tend\nend\n\nprint \"Enter a number : \";\nnumber = gets.chomp.to_i;  \n\nresult = sumOfDigits(number, 0);\nprint \"Sum of given digits : \",result;\n",
  "swift": "func sum_of_digits(_ num: Int) -> Int {   //Declare a function to calculate the sum of digits of number\n    var sum = 0\n    var n = num\n\n    while n>0 {\n        sum += n%10\n        n /= 10\n    }\n    return sum\n}\n\nprint(\"Enter a positive number: \")      //Take input from the user\nif let num = Int(readLine()!){\n\n    let Digitsum = sum_of_digits(num)   //Call the function and print the result\n    print(\"Sum of digits of number \\(num) is \\(Digitsum)\")\n}\n\nelse {                                  //Print error if the input is invalid\n    print(\"Please enter a valid input!\")\n}",
  "typescript": "function getSumOfDigits(value: number) {\n  let sum: number = 0;\n\n  while (value) {\n    sum += value % 10;\n    value = Math.floor(value / 10);\n  }\n  return sum;\n}\n",
  "description": "\n## Write a program to find sum of digits of a number\n\nSuppose you have a number `n` and you want to find the sum of its digits. For example, if `n = 123`, then the sum of its digits is `1 + 2 + 3 = 6`.\n\n```txt\nInput  : 123\nOutput : 6\n```\n\n---\n",
  "trackId": 5402,
  "lastUpdated": "2024-06-16T16:59:29Z",
  "contributors": [
    "harshraj8843",
    "swapnilmukherjee",
    "devbyharshit",
    "einan202",
    "Raboro",
    "GarrettDaniel",
    "champati-v",
    "gsquareg2",
    "anandfresh",
    "bnzone",
    "vedantpople4",
    "vipulkmr02",
    "james-tharit",
    "dineshlalam15",
    "cachoureze",
    "ExpressOwl",
    "wise-guru"
  ],
  "julia": "# Function to calculate the sum of digits of a number\nfunction sum_of_digits(n::Int)\n    sum = 0\n    while n > 0\n        sum += n % 10  # Add the last digit to sum\n        n รท= 10        # Remove the last digit from n\n    end\n    return sum\nend\n\n# Main code to get user input and call the function\nprintln(\"Enter a number:\")\ninput = readline()\n\ntry\n    local n = parse(Int, input)  # Explicitly declare `n` as a local variable\n    println(\"The sum of digits of \", n, \" is \", sum_of_digits(n))\ncatch e\n    println(\"Error: Please enter a valid integer.\")\nend\n",
  "scala": "import scala.io.StdIn._;\nobject sum_digit {\n\tdef main(args: Array[String]): Unit = {\n\tvar n:Int=readInt()\n\tprintln(\"Enter a number :\"+n);\n\tvar sum=0;\n\twhile(n!=0)\n\t{\n\t  sum=sum+n%10;\n\t  n=n/10;\n\t  \n\t}\n\tprintln(\"Sum of digits of number :\"+sum)\n\t}\n}\n",
  "dart": "int _sumOfDigits(int num) {\n  String str = num.toString();\n  int n = 0, sum = 0;\n  while (n < str.length) {\n    sum += int.parse(str[n]);\n    n++;\n  }\n  return sum;\n}\n\nvoid main() {\n  print(_sumOfDigits(123)); // must return 6\n  print(_sumOfDigits(456)); // must return 15\n  print(_sumOfDigits(0789012)); // must return 27\n}\n",
  "go": "package main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar num int\n\tfmt.Scanf(\"%d\", &num)\n\tvar res int\n\tfor num > 0 {\n\t\tres += num % 10\n\t\tnum /= 10\n\t}\n\tfmt.Println(res)\n}\n",
  "haskell": "main :: IO ()\nmain = do\n  putStrLn \"Enter your number containing String: \"\n  input <- getLine\n  print (sumOfDigitOfANumber input)\n\nsumOfDigitOfANumber :: String -> Int\nsumOfDigitOfANumber str = sum $ stringToIntList str\n\nstringToIntList :: String -> [Int]\nstringToIntList = map (\\c -> read [c] :: Int)",
  "php": "<?php\n\nfunction sumOfDigits($num) {\n$sum=0; $rem=0;  \n  for ($i =0; $i<=strlen($num);$i++)  \n {  \n   $rem=$num%10;  \n   $sum = $sum + $rem;  \n   $num=$num/10;  \n  }  \n return $sum;  \n}\n  \necho sumOfDigits(123);\n\n?>\n",
  "perl": "print\"Enter a number: \";\n$n=<STDIN>;\n$s=0;\nwhile($n>0)\n{\n$s=$s+($n%10);\n$n=$n/10;\n}\nprint\"Sum is $s\\n\";\n",
  "python": "# This python script calculates the sum of the digits of a random number n\n\n\ndef find_sum_of_digits_of_a_number(n: int) -> int:\n    sum_of_digits = 0\n    for digit in str(n):\n        sum_of_digits += int(digit)\n    return sum_of_digits\n\n\nprint(find_sum_of_digits_of_a_number(123))\n\n# Shorthand for the above function\n# def sumOfDigits(n: int) -> int:\n#     return sum([int(x) for x in str(n)])\n#\n# print(sumOfDigits(123))\n",
  "r": "sum_of_digits <- function(x) {\n    string_x <- format(x)\n    split_x <- strsplit(string_x, \"\")[[1]]\n    sum_output <- 0\n    for (char in split_x) {\n        sum_output <- sum_output + as.integer(char)\n    }\n    return(sum_output)\n}\n\n## Test cases\nprint(sum_of_digits(123)) ## Correct Answer: 6\nprint(sum_of_digits(456)) ## Correct Answer: 15\nprint(sum_of_digits(179)) ## Correct Answer: 17",
  "rust": "fn sum_of_digits(mut n: u32) -> u32 {\n    let mut sum = 0;\n    while n > 0 {\n        sum += n % 10;\n        n /= 10;\n    }\n    sum\n}\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "scala",
    "dart",
    "go",
    "haskell",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}