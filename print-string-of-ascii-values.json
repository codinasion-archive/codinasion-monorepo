{
  "slug": "print-string-of-ascii-values",
  "title": "Print String Of Ascii Values",
  "c": "#include<stdio.h>\n\nint main()\n{\n    int num;\n    printf(\"Enter the number : \");\n    scanf(\"%d\",&num);\n    printf(\"Ascii Character of %d is %c\",num,num);\n}",
  "c-plus-plus": "#include <iostream>\nusing namespace std;\n\nint main(){\n    int n;\n    cin>>n;\n    int arr[n];\n    string ans=\"\";\n    for(int i=0;i<n;i++) cin>>arr[i];\n    for(int i=0;i<n;i++){\n        ans+=(char)(arr[i]);\n    }\n    cout<<ans<<'\\n';\n    return 0;\n}\n\n//Contributed by Raghav Garg",
  "c-sharp": "using System;\n\npublic class PrintStringOfAsciiValues\n{\n    public static void Main()\n    {\n        //Prompts user to enter ASCII values separated by spaces\n        Console.WriteLine(\"Enter the ASCII values separated by spaces:\");\n\n        //Reads user input\n        string input = Console.ReadLine();\n\n        //Splits input into an array of ASCII values\n        string[] asciiValues = input.Split(' ');\n\n        //Iterates over each ASCII value in the array\n        foreach (string asciiValue in asciiValues)\n        {\n            //Tries to parse the ASCII value as an integer\n            int value;\n            if (int.TryParse(asciiValue, out value))\n            {\n                //Converts the integer value to its corresponding character\n                char character = (char)value;\n\n                //Prints the character\n                Console.Write(character);\n            }\n        }\n\n        //Prints a new line after printing the characters\n        Console.WriteLine();\n    }\n}\n",
  "java": "import java.util.Scanner;\nimport java.util.ArrayList;\npublic class PrintStringOfAsciiValues {\n    public static void main(String[] args) {\n\n        Scanner scnr = new Scanner(System.in);\n        char character;\n        int asciivalue;\n        String output = \"\";\n\n        System.out.println(\"Enter the ASCII values separated by spaces and press enter 2 times to finish: \");\n        ArrayList<Integer> numbers = new ArrayList<>();\n\n        String line = scnr.nextLine();\n        while (!line.isEmpty()) {\n            String[] values = line.split(\"\\\\s+\");\n            for (String value : values) {\n                try {\n                    int intValue = Integer.parseInt(value);\n                    numbers.add(intValue);\n                } catch (NumberFormatException e) {\n                    System.out.println(\"Invalid input: \" + value);\n                }\n            }\n            line = scnr.nextLine();\n        }\n\n        for (int i = 0; i < numbers.size(); i++) {\n            asciivalue = (numbers.get(i));\n            character = (char) asciivalue;\n            output += character;\n        }\n\n        System.out.println(output);\n\n        scnr.close();\n    }\n}\n",
  "javascript": "function PrintStringOfAsciiValues(one, two, third) {\n  return String.fromCharCode(one, two, third);\n}\nconsole.log(PrintStringOfAsciiValues(65, 66, 67));\n",
  "ruby": "def ascii_to_string(ascii_values)\n  characters = ascii_values.split.map { |ascii| ascii.to_i.chr }\n  return characters.join\nend\n\n# Input ASCII values separated by spaces\nprint \"Enter ASCII values separated by spaces: \"\nascii_values = gets.chomp\n\nbegin\n  result = ascii_to_string(ascii_values)\n  puts \"Output: #{result}\"\nrescue ArgumentError => e\n  puts \"Error: #{e.message}\"\nend\n",
  "typescript": "/**\n *\n * @name This program prints string of ascii values.\n * @param {number[]} codes Array of numbers\n * @returns {string}\n *\n * @example\n * ```js\n * const str1: string = printStringOfAsciiValues(65, 66, 67) // ABC\n * const str2: string = printStringOfAsciiValues(72, 69, 76, 76, 79) // HELLO\n * ```\n */\nfunction printStringOfAsciiValues(...codes: number[]): string {\n  return String.fromCharCode(...codes);\n}\n\n// Console Tests\nconsole.log(\"String values of 75, 75, 82, 72\");\nconsole.log(printStringOfAsciiValues(75, 75, 82, 72) + \"// KKRH\");\n\nconsole.log(\"String values of 72, 69, 76, 76, 79\");\nconsole.log(printStringOfAsciiValues(72, 69, 76, 76, 79) + \"// HELLO\");\n",
  "description": "\n## Write a program to print string of ascii values\n\nASCII value is the numeric representation of a character. For example, the ASCII value of the character 'A' is 65. The ASCII value of the character 'a' is 97. The ASCII value of the character '0' is 48. The ASCII value of the character ' ' is 32.\n\n```txt\nInput  : 65 66 67\nOutput : ABC\n```\n\n---\n",
  "trackId": 1631,
  "lastUpdated": "2023-10-09T16:25:57Z",
  "contributors": [
    "hi-Kartik2004",
    "madhusgowda",
    "apurvagandhi",
    "harshraj8843",
    "rsitters",
    "anandfresh",
    "Sri01729",
    "joao-vitor-souza",
    "CodingWithHardik",
    "grraghav120",
    "bbhoom",
    "tanishq-singh-2407",
    "PraaneshSelvaraj"
  ],
  "go": "package main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\tasciiValues := []int{65, 66, 67}\n\tvar result string\n\tfor _, asciiValue := range asciiValues {\n\t\tcharacter := rune(asciiValue)\n\t\tresult += string(character)\n\t}\n\tfmt.Println(result)\n}\n",
  "php": "<?php\n\nfunction asciiToString($ascii, $length)\n{\n    $num = 0;\n    for($i = 0; $i < $length; $i++)\n    {\n\n        $num = $num * 10 + (ord($ascii[$i]) - ord('0'));\n\n        if ($num >= 32 && $num <= 122)\n        {\n\n            $ch = chr($num);\n            print($ch);\n \n            $num = 0;\n            }\n        }\n}\n \n    $ascii = \"656667\";\n    $length = strlen($ascii);\n     \n    asciiToString($ascii, $length);\n \n?>\n",
  "python": "x = input(\"enter ascii value:\")\nl = x.split()\nstring = \"\"\nfor i in l:\n    string = string + chr(int(i))\n\nprint(\"Output\", string)\n",
  "r": "# Function to convert ASCII values to characters\nascii_to_char <- function(ascii_values) {\n  characters <- sapply(ascii_values, function(x) rawToChar(as.raw(x)))\n  return(paste(characters, collapse = \"\"))\n}\n\n# Input ASCII values as a string separated by space\ninput <- readline(\"Enter ASCII values separated by space: \")\n\n# Convert input string to a numeric vector of ASCII values\nascii_values <- as.numeric(strsplit(input, \" \")[[1]])\n\n# Call the ascii_to_char function\noutput <- ascii_to_char(ascii_values)\n\n# Print the output\ncat(\"Output:\", output, \"\\n\")\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "java",
    "javascript",
    "ruby",
    "typescript",
    "go",
    "php",
    "python",
    "r"
  ]
}