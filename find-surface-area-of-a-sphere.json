{
  "slug": "find-surface-area-of-a-sphere",
  "title": "Find Surface Area Of A Sphere",
  "c": "#include <stdio.h>\n\nint main()\n{\n    int radius;\n    long double surfaceArea;\n    const long double PI = 3.14159265358979;\n\n    printf(\"Enter radius    :   \");\n    scanf(\"%i\", &radius);\n\n    surfaceArea = 4 * PI * radius * radius;\n\n    printf(\"Surface area of sphere  :   %.14Lf\", surfaceArea);\n\n    return 0;\n}\n",
  "c-plus-plus": "#include <iostream>\n#include <bits/stdc++.h>\n#define pi 3.141592653589793238\nusing namespace std;\n\nint main()\n{\n    int r;cin>>r;\n    cout<<fixed<<setprecision(10)<<(4*pi*r*r)<<'\\n';\n    return 0;\n}\n",
  "c-sharp": "using System;\nclass MainClass {\n    public static void Main (string[] args) {\n    Console.WriteLine (\"Please enter the radius : \");\n    double radius = Convert.ToDouble(Console.ReadLine());\n    double sphere = 4 * 3.14 * radius * radius;\n    Console.WriteLine(\"Surface area of sphere :\"+sphere);\n  }\n}\n",
  "f-sharp": "let surfaceAreafOfSphere radius : float =\n  4.0 * 3.14 * radius * radius\n\nlet area = surfaceAreafOfSphere 2.0\n\nprintfn \"Surface area of sphere : %f\" area\n",
  "java": "import java.util.*;\nclass findSurfaceAreaOfSphere\n{\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        System.out.print(\"Enter radius of the sphere: \");\n        double r = sc.nextDouble();\n        System.out.println(\"Surface Area of the Sphere with radius \" + r + \": \" + 4*Math.PI*r*r);\n    }\n}\n",
  "javascript": "function surfaceAreaOfSphere(radius) {\n  let area = 4 * Math.PI * Math.pow(radius, 2);\n  console.log(\"The area is: \", area);\n}\nsurfaceAreaOfSphere(2);\n",
  "kotlin": "import java.util.Scanner\nimport kotlin.math.pow\nimport kotlin.math.PI\n\nfun main(args: Array<String>) {\n\n    //Input Stream\n    val scanner = Scanner(System.`in`)\n\n    //Input Radius\n    print(\"Enter Radius of Sphere : \")\n    val radius = scanner.nextDouble()\n\n    //surface Area of Sphere\n    val sphereSurfaceArea = 4*PI*radius.pow(2.0)\n\n    //Print Surface Area\n    println(\"Surface Area of Sphere on radius $radius is :$sphereSurfaceArea\")\n}\n",
  "ruby": "pi = Math::PI\n\nprint \"Enter radius : \\n\"\nradius = gets.chomp.to_i\n\nsurfaceArea = 4 * pi * radius * radius\nprint \"surface area : #{surfaceArea}\"\n",
  "swift": "import Swift\nimport Foundation\n\nvar radius = 2.0\n\nvar surfaceArea = 4.0 * M_PI * radius * radius\nprint(\"Surface area of sphere: \", surfaceArea)\n",
  "typescript": "function findSurfaceAreaOfSphere(radius: number) {\n  return 4 * Math.PI * Math.pow(radius, 2);\n}\n\nconsole.log(findSurfaceAreaOfSphere(2));\n",
  "description": "\n## Write a program to find surface area of a sphere\n\nSurface area of sphere = 4 × π × `Radius`^2\n\n```txt\nRadius : 2\n\nSurface area : 50.26548245743669\n```\n\n---\n",
  "trackId": 3008,
  "lastUpdated": "2023-08-03T20:39:16Z",
  "contributors": [
    "harshraj8843",
    "anandfresh",
    "esivakumar26",
    "pokharel-nishan",
    "sharvil1205",
    "joao-vitor-souza",
    "TrentGlimp"
  ],
  "julia": "print(\"Enter the radius: \")\nradius = parse(Float64, readline(stdin))\narea =  4 * 3.14 * radius * radius\nprintln(\"Surface area of sphere: \", area)\n",
  "scala": "object HelloWorld {\n\tdef main(args: Array[String]): Unit = {\n\t  val Pi = java.lang.Math.PI;\n\t  val radius = scala.io.StdIn.readDouble();\n\t  val surfaceArea = 4 * Pi * radius * radius;\n\t  println(\"Surface area of the sphere: \" + surfaceArea);\n\t}\n}\n",
  "dart": "import 'dart:io';\nvoid main(){\n  print(\"Enter the radius :\");\n  int radius = int.parse(stdin.readLineSync()!);\n  double area = 4.0 * 3.14 * radius * radius;\n  print('Surface area of sphere : $area');\n}\n",
  "go": "package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc sphere_surface_area(radius float64) {\n\tsurface_area := 4 * math.Pi * math.Pow(radius, 2)\n\n\tfmt.Printf(\"Radius: %f\\nSurface Area: %f\", radius, surface_area)\n\n}\n\nfunc main() {\n\tvar number float64\n\tfmt.Scanln(&number)\n\tsphere_surface_area(number)\n}\n",
  "haskell": "main :: IO ()\nmain = do \n    putStrLn \"Enter side: \" \n    input1 <- getLine\n    let radius = read input1 :: Float\n    \n    let surfaceArea = 4 * pi * radius * radius\n    putStrLn $ show (surfaceArea)\n",
  "php": "<?php\n\t$x = readline('Enter sphere radius: ');\n\n  $x1 = 4 * pi() * $x * $x;\n  echo \"Surface area of sphere: $x1 \\n\";\n?>\n",
  "perl": "#!/usr/bin/perl\nuse warnings;\nuse strict;\nprint \"Enter the radius : \";\nmy $radius = <STDIN>;\nmy $area = 4 * 3.14  * $radius * $radius ;\nprint \"Surface area of sphere : \".$area, \"\\n\";\n",
  "python": "import math\n\n\ndef surfaceAreaOfSphere(radius):\n    area = 4 * math.pi * math.pow(radius, 2)\n    print(\"The area is: \", area)\n\n\nsurfaceAreaOfSphere(2)\n",
  "r": "radius = 2\nsurfaceArea = 4 * pi * radius * radius\ncat(\"surfaceArea: \", surfaceArea)\n",
  "rust": "fn main() {\n  let radius = 2.0;\n  let surfaceArea = 4.0 * 3.14 * radius * radius;\n\n  println!(\"Surface area of sphere is {0}\", surfaceArea as f32);\n}\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "scala",
    "dart",
    "go",
    "haskell",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}