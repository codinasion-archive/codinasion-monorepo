{
  "slug": "print-numbers-from-n-to-1-without-using-a-loop",
  "title": "Print Numbers From N To 1 Without Using A Loop",
  "c": "#include <stdio.h>\n\n\nvoid PrintFromNto1NoLoop(int n);\n\nint main()\n{\n    int n = 0;\n\n    int is_good = scanf(\"%d\",&n);\n\n    if(is_good == -1)\n    {\n        return -1;\n    }\n\n    PrintFromNto1NoLoop(n);\n\n    return 0;\n}\n\nvoid PrintFromNto1NoLoop(int n)\n{\n    if(n == 0)\n    {\n        return;\n    }\n\n    printf(\"%d \",n);\n    PrintFromNto1NoLoop(n -1);\n}\n\n",
  "c-plus-plus": "// Write a program, that prints numbers from n to 1 without using a loop\n#include <iostream>\n\n// Instead of using a loop, this function just prints the current number and\n// calls itself again with the number - 1(Recursion).\nvoid PrintNum(int);\n\nint main()\n{\n    std::cout << \"Enter a num: \";\n    int n;\n    std::cin >> n;\n\n    PrintNum(n);\n    return 0;\n}\n\nvoid PrintNum(int n)\n{\n    // base case\n    if (n > 0)\n    {\n        std::cout << n << \" \";\n        PrintNum(n - 1);\n    }\n    else\n        std::cout << std::endl;\n\n    return;\n}\n",
  "c-sharp": "using System;\n\nclass MainClass {\n    public static void Main (string[] args) {\n     int i = 5;\n     i = i+1;\n     begin: \n     i = i - 1; \n     Console.Write(\" \" + i + \" \"); \n     if (i > 1) \n     { \n     goto begin; \n     } \n  }\n}\n",
  "f-sharp": "// Write a F# program to print numbers from n to 1 without using a loop\n\n// Input  : 5\n// Output : 5 4 3 2 1\n\nlet mutable num = 5;\n\nlet rec printNumbers i =\n    if i > 0 then\n        printf \"%d \" i\n        printNumbers (i - 1)\n\nprintNumbers num",
  "java": "public class PrintNumbersFromNTo1WithoutUsingALoop {\n    public static void main(String[] args) {\n        print1ToN(5);\n    }\n    public static void print1ToN(int n){\n        if(n == 1){\n            System.out.print(n + \" \");\n            return;\n        }\n        print1ToN(n - 1);\n        System.out.print(n + \" \");\n    }\n}\n",
  "javascript": "const minNumber = 1;\n\nfunction decreaseNumberWithoutLoop(number) {\n  console.log(number);\n\n  if (number > minNumber) {\n    decreaseNumberWithoutLoop(number - 1);\n  }\n}\n\ndecreaseNumberWithoutLoop(5);\n",
  "kotlin": "import java.util.Scanner\nfun main() {\n    val scanner = Scanner(System.`in`)\n    print(\"Enter the number::\")\n    val number = scanner.nextInt();\n    printNos(number);\n}\n\nfun printNos(n:Int) {\n    if(n > 0) {\n        val number = n.toString() + ' '\n        print(number)\n        printNos(n - 1);\n    }\n}\n",
  "ruby": "def printNumbersFromNTo1WithoutUsingALoop num\n    print [*1..num].reverse.join(\" \")\nend\n\nputs printNumbersFromNTo1WithoutUsingALoop 5",
  "swift": "import Swift\nimport Foundation\n\nfunc printNumber(n: Int) -> Int {\n   print(n)\n   if(n == 1) {\n     return 1\n   }\n   return printNumber(n: n-1)\n}\n\nvar num = 5\nvar result1 = printNumber(n: num)\n",
  "typescript": "const minNumber = 1;\n\nfunction decreaseNumberWithoutLoop(number: number) {\n  console.log(number);\n\n  if (number > minNumber) {\n    decreaseNumberWithoutLoop(number - 1);\n  }\n}\n\ndecreaseNumberWithoutLoop(5);\n",
  "description": "\n## Write a program to print numbers from n to 1 without using a loop\n\n```txt\nInput  : 5\nOutput : 5 4 3 2 1\n```\n\n---\n",
  "trackId": 4427,
  "lastUpdated": "2024-05-13T13:06:16Z",
  "contributors": [
    "Romo4ka-bot",
    "srini696",
    "jcmlumacad1",
    "anandfresh",
    "Shubham-2110",
    "harshraj8843",
    "vedantpople4",
    "Tushar12222",
    "esivakumar26",
    "jfinley6",
    "Osher160",
    "dineshlalam15",
    "joao-vitor-souza",
    "KacperTKI",
    "sureshsgith",
    "kevenleone",
    "mrajen27",
    "Medmly20208"
  ],
  "scala": "def printNumbers(n: Int): Unit = {\r\n  if (n > 0) {\r\n    print(s\"$n \")\r\n    printNumbers(n - 1)\r\n  }\r\n}\r\n\r\nval input = 5\r\nprintNumbers(input)\r\n",
  "dart": "void printNTo1recur(int n){\n  if(n == 0){\n    return;\n  }\n  print(n);\n  printNTo1recur(n-1);\n}\n\nvoid main() {\n  printNTo1recur(5);\n}",
  "go": "package main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\tfmt.Printf(\"Enter a Number:\")\n\tvar n int\n\tfmt.Scanf(\"%d\", &n)\n\tans(n)\n\tfmt.Print(\"\\n\")\n}\nfunc ans(n int) {\n\t//without loop\n\t//using recursion\n\tif n < 1 {\n\t\treturn\n\t}\n\tfmt.Printf(\"%d \", n)\n\tans(n - 1)\n}\n",
  "haskell": "printNumbers n = putStrLn (unwords (map show [n, n-1 .. 1]))\n\nmain = do\n    let n = 5\n    printNumbers n\n",
  "php": "<?php \nfunction printNum($n) {\n  echo implode(' ',range($n, 1)); \n}\n\nprintNum(5);\n?>\n",
  "perl": "print \"Enter a number : \";\nmy $n=<STDIN>;\nprint \"\\n\"; \nsub printNos{\n    my ($input) = @_;\n        if($input > 0)\n        {\n            print $input + \" \";\n            printNos($input - 1);\n        }\n        return;\n}\n    \nprintNos($n);\n",
  "python": "def printNumbersFromNtoOneWithoutUsingALoop(number: int) -> None:\n    \"\"\"\n    print Numbers From N to 1 Without Using a Loop\n    Arguments:\n        number:int\n    Returns:\n        None\n    \"\"\"\n\n    if number == 0:\n        return\n\n    print(number, end=\" \")\n    printNumbersFromNtoOneWithoutUsingALoop(number - 1)\n\n\nif __name__ == \"__main__\":\n    number = int(input(\"Type A number : \"))\n    printNumbersFromNtoOneWithoutUsingALoop(number)\n\n\n# contributed by MedMly20208 Mohamed Moulay\n",
  "r": "print_numbers_reverse <- function(n) {\n  if (n >= 1) {\n    return(c(n, print_numbers_reverse(n - 1)))\n  } else {\n    return(NULL)\n  }\n}\n\nresult <- print_numbers_reverse(10)\nprint(result)\n",
  "rust": "fn printnumbers(n: i32){\n    if n>0 {\n        print!(\"{n} \");\n        printnumbers(n-1);\n    }\n}\n\nfn main(){\n    let n = 5;\n    printnumbers(n);\n}",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "scala",
    "dart",
    "go",
    "haskell",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}