{
  "slug": "find-sum-of-ap-series",
  "title": "Find Sum Of Ap Series",
  "c": "#include <stdio.h>\n\nint main()\n{\n    int a, n, d;\n    int sum = 0;\n\n    printf(\"Enter the first term in AP series   :   \");\n    scanf(\"%i\", &a);\n    printf(\"Enter number of terms   :   \");\n    scanf(\"%i\", &n);\n    printf(\"Enter common difference :   \");\n    scanf(\"%i\", &d);\n\n\n    for (int i = 0; i < n; i++){\n        sum += a + i * d;\n    }\n\n\n    printf(\"Sum of AP series is :   %i\", sum);\n    \n    return 0;\n}\n",
  "c-plus-plus": "#include <iostream>\n#include <math.h>\n#include <vector>\n\nusing namespace std;\n\nint findArithmeticProgressionSum(vector<int> v) {\n\n  int n = v.size();\n\n  if (n == 1) {\n    return v[0];\n  }\n\n  int a = v[0];\n  int d = v[1] - a;\n\n  int an = a + (n - 1) * d;\n\n  return n / 2 * (a + an);\n}\n\nint main() {\n\n  vector<int> v = {-2, 4, 10, 16, 22};\n\n  cout << findArithmeticProgressionSum(v);\n\n  return 0;\n}\n",
  "c-sharp": "ï»¿using System;\n\npublic class FindSumOfApSeries\n{\n    /// <summary>\n    /// Finds the sum of the AP serie at the n-th term\n    /// </summary>\n    /// <param name=\"a\">First term</param>\n    /// <param name=\"n\">Position of the term (starts at 1)</param>\n    /// <param name=\"d\">Constant difference between terms</param>\n    /// <returns>The sum of an arithmetic sequence at the n-th term</returns>\n    public static int sumOfApSeries(int a, int n, int d)\n    {\n        int n_th_term = a + ((n - 1) * d);\n        return n * ((a + n_th_term) / 2);\n    }\n\n    public static void Main()\n    {\n        int firstTerm, n, d;\n        Console.WriteLine(\"Enter the first term : \");\n        firstTerm = Convert.ToInt32(Console.ReadLine());\n        Console.WriteLine(\"Enter the position of the wanted sum (n value) : \");\n        n = Convert.ToInt32(Console.ReadLine());\n        Console.WriteLine(\"Enter the constant between each term : \");\n        d = Convert.ToInt32(Console.ReadLine());\n        \n        Console.WriteLine(sumOfApSeries(firstTerm,n,d));\n    }\n}",
  "java": "\n/*Author: Shashank Gurunaga  */\nimport java.util.*;\nimport java.lang.*;\n\npublic class FindSumOfApSeries {\n    public static int APsum(int a1, int n1, int d1) {\n        int sumofap = 0;\n        for (int i = 0; i < n1; i++) {\n            sumofap += a1;\n            a1 += d1;\n        }\n        return sumofap;\n    }\n\n    public static void main(String[] Args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();// The number of terms in then AP series\n        int a = scanner.nextInt();// First term of the AP series\n        int d = scanner.nextInt(); // Common difference of the AP series\n        int res = APsum(a, n, d);\n        System.out.println(\"Sum of the AP Series: \" + res);\n    }\n\n}\n",
  "javascript": "function sumOfApSeries(firstTerm, commmonDifference, nthTerm) {\n  const sumOfApSeries =\n    (nthTerm / 2) * (2 * firstTerm + (nthTerm - 1) * commmonDifference);\n  return sumOfApSeries;\n}\nconsole.log(sumOfApSeries(2, 3, 5));\n",
  "kotlin": "/**\nProgram to find the sum of n-terms in an AP\n\nThe input to the program are a,n,d\na - first term\nn - number of terms\nd - common difference\n\nInput : 2 5 3\nOutput for Sum of AP Series : 40\n\n*/\n\nfun main() {\n    print(\"Input : \")\n    println()\n    var nums = readLine()\n\n    println(\"Output for Sum of AP Series : \" + FindSumOfApSeries(nums!!.split(\" \")))\n\n}\n\nprivate fun FindSumOfApSeries(args: List<String>): Int {\n    var a: Int = args[0].toInt() \n    var n: Int = args[1].toInt() \n    var d: Int = args[2].toInt() \n    var sum = ( n * (2*a + (n-1)*d) ) / 2\n\n    return sum\n}",
  "ruby": "def sum_of_ap_series(a1, d, n)\n  sum = (n * (2 * a1 + (n - 1) * d)) / 2\n  return sum\nend\n\nputs \"Enter the first term (a1) of the AP series:\"\na1 = gets.chomp.to_i\n\nputs \"Enter the common difference (d) of the AP series:\"\nd = gets.chomp.to_i\n\nputs \"Enter the number of terms (n) in the AP series:\"\nn = gets.chomp.to_i\n\nsum = sum_of_ap_series(a1, d, n)\nputs \"The sum of the arithmetic progression series is: #{sum}\"\n",
  "swift": "func sumOfAPSeries(firstTerm a: Int, numberOfTerms n: Int, commonDifference d: Int) -> Int {\n    var sum = 0\n    var currentTerm = a\n    \n    // Iterate through each term and add it to the sum\n    for _ in 1...n {\n        sum += currentTerm\n        currentTerm += d\n    }\n    \n    return sum\n}\n\n// Taking user input\nprint(\"Enter the first term (a) of the AP:\")\nif let firstTerm = Int(readLine() ?? \"0\") {\n    print(\"Enter the number of terms (n) in the AP:\")\n    if let numberOfTerms = Int(readLine() ?? \"0\") {\n        print(\"Enter the common difference (d) of the AP:\")\n        if let commonDifference = Int(readLine() ?? \"0\") {\n            let seriesSum = sumOfAPSeries(firstTerm: firstTerm, numberOfTerms: numberOfTerms, commonDifference: commonDifference)\n            print(\"Sum of the AP series:\", seriesSum)\n        } else {\n            print(\"Invalid input for common difference.\")\n        }\n    } else {\n        print(\"Invalid input for number of terms.\")\n    }\n} else {\n    print(\"Invalid input for first term.\")\n}\n",
  "typescript": "function sumOfApSeries(a: number, n: number, d: number): number {\n  const a_n = a + (n - 1) * d;\n  const part1 = n / 2;\n  const part2 = a + a_n;\n  return part1 * part2;\n}\n",
  "description": "\n## Write a program to find sum of ap series\n\nAn arithmetic progression (AP) is a sequence of numbers such that the difference of any two consecutive terms is a constant. The nth term of an AP is given by the formula a<sub>n</sub> = a<sub>1</sub> + (n-1)d where a<sub>1</sub> is the first term and d is the common difference.\n\n```txt\nInput  : 2, 5, 3\nOutput : 20\n```\n\n---\n",
  "trackId": 4360,
  "lastUpdated": "2024-05-03T09:41:56Z",
  "contributors": [
    "charan-hash",
    "lingalaviran",
    "srini696",
    "pradeepch2107",
    "ShivangiRai1310",
    "anandfresh",
    "harshraj8843",
    "vedantpople4",
    "neswatch",
    "pokharel-nishan",
    "pelegsch666",
    "ShivamK2002",
    "shashankgurunaga1",
    "harsha-desaraju",
    "RohithBoppey"
  ],
  "scala": "object APSumCalculator {\n  def main(args: Array[String]): Unit = {\n    println(\"Enter the first term (a1):\")\n    val a1 = scala.io.StdIn.readInt()\n\n    println(\"Enter the number of terms (n):\")\n    val n = scala.io.StdIn.readInt()\n\n    println(\"Enter the common difference (d):\")\n    val d = scala.io.StdIn.readInt()\n\n    val sum = n * (2 * a1 + (n - 1) * d) / 2\n\n    println(s\"The sum of the arithmetic progression series is: $sum\")\n  }\n}\n",
  "go": "package main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar a int\n\tfmt.Scanf(\"%d\", &a)\n\tvar n int\n\tfmt.Scanf(\"%d\", &n)\n\tvar d int\n\tfmt.Scanf(\"%d\", &d)\n\tsum := (2*a + ((n - 1) * d)) * n\n\tfmt.Println(sum / 2)\n}\n",
  "php": "<?php\n\nfunction sumOfAP($a, $d, $n)\n{\n    $sum = 0;\n    for ($i = 0; $i < $n; $i++)\n    {\n        $sum = $sum + $a;\n        $a = $a + $d;\n    }\n    return $sum;\n}\n  \n$n = 2;\n$a = 5; $d = 3;\necho(sumOfAP($a, $d, $n));\n\n?>\n",
  "perl": "sub sumOfApSeries{\n  my ($firstTerm, $commmonDifference, $nthTerm) = @_;\n  my $sumOfApSeries =\n    ($nthTerm / 2) * (2 * $firstTerm + ($nthTerm - 1) * $commmonDifference);\n  print $sumOfApSeries;\n}\nsumOfApSeries(2, 3, 5);\n",
  "python": "# Program to find the sum of n-terms in an AP\n\n# The input to the program are a,n,d\n# a - first term\n# n - number of terms\n# d - common difference\n\na, n, d = list(map(int, input().split(\" \")))\n\nif n < 0:\n    print(\"Error! Number of terms cannot be negative\")\nelse:\n    print((n / 2) * ((2 * a) + ((n - 1) * d)))\n",
  "r": "sum_of_ap_series <- function(a, n, d) {\n  an <- a + (n - 1) * d\n  \n  # Formula for the sum of n terms of AP\n  sum_ap <- n * (a + an) / 2\n  \n  return(sum_ap)\n}\n\na <- 2\nn <- 5\nd <- 3\n\nresult <- sum_of_ap_series(a, n, d)\ncat(\"Output:\", result, \"\\n\")\n",
  "rust": "fn main(){\n    let a = 2;\n    let n = 5;\n    let d = 3;\n    let last = a + (n-1)*d;\n    let answer = (n*(a + last))/2;\n    println!(\"{answer}\");\n}   ",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "scala",
    "go",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}