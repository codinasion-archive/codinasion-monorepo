{
  "slug": "find-smallest-number-in-an-array",
  "title": "Find Smallest Number In An Array",
  "c": "#include <stdio.h>    \n     \nint main()    \n{    \n    //Initialize array     \n    int arr[] = {1, 2, 3, 4, 5};      \n        \n    //Calculate length of array arr    \n    int length = sizeof(arr)/sizeof(arr[0]);    \n        \n    //Initialize min with first element of array.    \n    int min = arr[0];    \n        \n    //Loop through the array    \n    for (int i = 0; i < length; i++) {     \n        //Compare elements of array with min    \n       if(arr[i] < min)    \n           min = arr[i];    \n    }      \n    printf(\"Smallest element present in given array: %d\\n\", min);    \n    return 0;    \n}   \n",
  "c-plus-plus": "// Programme to find the smallest element in the array...\n#include <bits/stdc++.h>\n#define ll long long // For typing ease.\nusing namespace std;\n\nint main(){\n    // Taking array limit input:\n    cout<<\"Enter the length of the array :\";\n    ll n;   cin>>n;\n    ll a[n];\n    for(int i=0;i<n;i++){\n        cin>>a[i];\n    }\n\n    //Finding the smallest element present in the array :\n\n    ll min = INT_MAX;\n    for(int i=0;i<n;i++){\n        if(a[i]<min){\n            min=a[i];\n        }\n    }\n\n    //Returning the value :\n    cout<<\"The smallest element present in the array is : \"<<min<<endl;\n    return 0;\n}\n\n/*\nAuthor : Kartikeya Saini\n*/\n ",
  "c-sharp": "using System;\nusing System.Linq;\nclass Smallest {\n   static void Main() {\n      int[] arr = { 1, 2, 3, 4, 5 };\n      Console.WriteLine(arr.Min());\n   }\n}\n",
  "f-sharp": "let numbers =[|1..5|]\n\nprintfn \"%A\"  (numbers |> Array.min)\n",
  "java": "import java.util.Scanner;\n\nclass FindSmallestNumberInAnArray {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(FindSmallestNumberInAnArray.findSmallestNumber(new double[] { 100, 50.25, 10, 76, 3 }));\n\t}\n\n\tprivate static double findSmallestNumber(double[] array) {\n\t\tdouble smallest = array[0];\n\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tdouble currentItem = array[i];\n\n\t\t\tif (currentItem < smallest) {\n\t\t\t\tsmallest = currentItem;\n\t\t\t}\n\t\t}\n\t\treturn smallest;\n\t}\n}\n",
  "javascript": "function findSmallestNumberInAnArray(arr) {\n  let smallestNumber = arr[0];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < smallestNumber) {\n      smallestNumber = arr[i];\n    }\n  }\n  console.log(smallestNumber);\n}\n\nfindSmallestNumberInAnArray([1, 2, 3, 4, 5]);\n",
  "kotlin": "fun main() {\n    val arr = arrayOf(1, 2, 3, 4, 5)\n    val ints = arr.toList()\n\n    println(\"Minimum: ${ints.min()}\")\n}\n",
  "ruby": "def findSmallestNumberInAnArray array\n    array.min\nend\n\nputs findSmallestNumberInAnArray [1,2,3,4,5]",
  "swift": "import Swift\nimport Foundation\n\nlet numbers = [1, 2, 3, 4, 5]\nprint(\"Smallest number: \", numbers.reduce(Int.max, { min($0, $1) }))\n",
  "typescript": "function FindSmallestNumberInAnArray(values: number[]) {\n  let smallest = values[0]; // If values has length = 0, undefined is good\n  for (let i = 1; i < values.length; i++) {\n    if (smallest > values[i]) {\n      smallest = values[i];\n    }\n  }\n  return smallest;\n}\n\nFindSmallestNumberInAnArray([1, 4, -5, 2, 1]);\n",
  "description": "\n## Write a program to find smallest number in an array\n\n```txt\nInput  : [1, 2, 3, 4, 5]\nOutput : 1\n```\n\n---\n",
  "trackId": 3942,
  "lastUpdated": "2024-01-02T17:59:34Z",
  "contributors": [
    "anandfresh",
    "harshraj8843",
    "vinodr03",
    "esivakumar26",
    "jfinley6",
    "vedantpople4",
    "hi-Kartik2004",
    "hugosmoreira",
    "sureshsgith",
    "mrajen27",
    "castanedadev-edu",
    "Marsh-sudo",
    "thongncvn",
    "greeshma-d"
  ],
  "julia": "array = [1,2,3,4,5]\nsmallest_element = sort(array)\nprintln(\"The smallest number is : \", smallest_element[1])\n",
  "scala": "object Scala_Array {\n\n  def main(args: Array[String]): Unit = {\n    val arr = Array(1, 2, 3, 4, 5);\n    println(\"Original array :\")\n    for (x <- arr) {\n      print(s\"${x}, \")\n    }\n    var first_element, arr_size = arr.length;\n      first_element = Int.MaxValue\n\n      for (i <- 0 to arr_size - 1) {\n        if (arr(i) < first_element) {\n          first_element = arr(i);\n        }\n\n      }\n        println(\n          s\"\\nThe smallest element is : ${first_element}\"\n        );\n  }\n}\n",
  "go": "package main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar size, i int\n\tfmt.Scan(&size)\n\tarr := make([]int, size)\n\tfor i = 0; i < size; i++ {\n\t\tfmt.Scan(&arr[i])\n\t}\n\tsmall := arr[0]\n\tfor i = 0; i < size; i++ {\n\t\tif small > arr[i] {\n\t\t\tsmall = arr[i]\n\t\t}\n\t}\n\tfmt.Println(small)\n}\n",
  "php": "<?php\n\nfunction smallestNumber($array) {\n  sort($array);\n  return $array[0];\n}\n\necho smallestNumber([1,2,3,4,5]);\n\n?>\n",
  "perl": "use List::Util qw(min max);\nmy @arr = (1,2,3,4,5);\nprint \"Smallest number : \".min(@arr);\n",
  "python": "# PYTHON program to find smallest number\nl = [int(l) for l in input(\"Create an array:\").split(\",\")]\nprint(\"Your list is\", l)\n# Assign first element as minimum\nmin1 = l[0]\nfor i in range(len(l)):\n    # check if other element is min than first element\n    if l[i] < min1:\n        min1 = l[i]\nprint(\"Smallest number in the list is \", min1)\n\n# or use built-in python function: min(l)\n",
  "r": "# Function to find the smallest number in an array\nfind_smallest_in_array <- function(arr) {\n  min_value <- min(arr)\n  return(min_value)\n}\n\n# Example array\narr <- c(9, 4, 7, 2, 5, 10, 8, 3, 6)\n# Replace this example array with your own data\n\n# Find the smallest number in the array\nsmallest_number <- find_smallest_in_array(arr)\n\n# Display the smallest number\ncat(\"The smallest number in the array is:\", smallest_number, \"\\n\")\n",
  "rust": "fn main() {\n    // Define the array of numbers\n    let numbers = [1, 2, 3, 4, 5];\n\n    // Initialize a variable to store the smallest number\n    let mut smallest = numbers[0];\n\n    // Iterate over the array and find the smallest number\n    for number in numbers.iter() {\n        if *number < smallest {\n            smallest = *number;\n        }\n    }\n\n    // Print the smallest number\n    println!(\"The smallest number is {}\", smallest);\n}\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "scala",
    "go",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}