{
  "slug": "check-consonant",
  "title": "Check Consonant",
  "c": "#include <stdio.h>\n\nint main(){\n    \n    char ch;\n    scanf(\"%c\",&ch);\n    if(ch=='a' || ch=='A' || ch=='e' || ch=='E' || ch=='i' || ch=='I' || ch=='o' || ch=='O' || ch=='u' || ch=='U') printf(\"Not Consonent\");\n    else printf(\"Consonent\");\n    return 0;\n}\n",
  "c-plus-plus": "/**\n    Write a C++ program to check consonant\n\n    Check if a character is a consonant.\n\n    Input  : b\n    Output : Consonant\n */\n\n#include <iostream>\nusing namespace std;\n\nbool checkConsonant(char c){\n    c = tolower(c);\n    if(c != 'a' && c != 'o' && c != 'i' && c != 'o' && c != 'u'){\n        return true;\n    }\n    return false;\n}\n\nint main(){\n    char n;\n    cout << \"Enter a character: \";\n    cin >> n;\n    if(checkConsonant(n)) cout << \"Given character is a consonant\" << endl;\n    else cout << \"Given character is not a consonant\" << endl;\n    return 0;\n}",
  "c-sharp": "using System;\npublic class LFC\n{\n  public static void Main(string[] args)\n  {\n    char ch='b';\n    if((ch >= 'A' && ch <= 'Z')||ch >= 'a' && ch <= 'z')\n    {\n      if (ch == 'a' || ch == 'A' || ch == 'e' || ch == 'E' || ch == 'i'\n      || ch == 'I' || ch == 'o' || ch == 'O' || ch == 'u' || ch == 'U')\n      {\n        Console.WriteLine(ch + \" is a vowel\");\n      }\n      else\n      {\n        Console.WriteLine(ch + \" is a consonant\");\n      }\n    }\n    else\n    {\n      Console.WriteLine(ch + \" is not an alphabet\");\n    }\n  }\n}\n",
  "java": "import java.util.*;\nclass CheckConsonant\n{\n  public static boolean isConsonant(char c)\n  {\n    if((c>='a'&&c<='z')||(c>='A'&&c<='Z'))\n    {\n      if(c=='A'||c=='E'||c=='I'||c=='O'||c=='U'||c=='a'||c=='e'||c=='i'||c=='o'||c=='u')\n         return false;\n      return true;\n    }  \n    \n     return false;\n  }\n  public static void main(String args[]) \n  {\n    Scanner sc=new Scanner(System.in);\n    System.out.println(\"Enter character \");\n    char c=sc.nextLine().charAt(0);\n    if(isConsonant(c))\n      System.out.println(\"Consonant\");\n    else\n      System.out.println(\"Not a Consonant\");\n  }\n}",
  "javascript": "function checkConsonants(str) {\n  let consonant = \"\";\n  if (str != \"a\" && str != \"e\" && str != \"i\" && str != \"o\" && str != \"u\") {\n    consonant = \"Consonant\";\n  } else {\n    consonant = \"Is not a Consonant\";\n  }\n  return consonant;\n}\n\nconsole.log(\"Given string is\", checkConsonants(\"b\"));\n",
  "kotlin": "fun main() {\n    print(\"Enter String : \")\n    println()\n    var input = readLine()\n\n    println(\"$input is \" + CheckConsonant(input!!.first()))\n\n}\n\nprivate fun CheckConsonant(ch: Char): String {\n    if(ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u'){\n        return \"Vowel not Consonant\"\n    }\n\n    return \"Consonant\"\n}",
  "swift": "import Swift\nimport Foundation\n\nprint(\"Please enter the letter:\")\nlet given = String(readLine()!)\nlet consonants = \"bcdfghijklmnpqrtvwxyz\"\n\nif consonants.contains(given) {\n  print(given + \" is consonant\")\n} else {\n  print(given + \" is not a consonant\")\n}\n",
  "typescript": "function checkConsonants(str: string) {\n  let consonant = \"\";\n  if (\n    str != \"a\" &&\n    str != \"e\" &&\n    str != \"i\" &&\n    str != \"o\" &&\n    str != \"u\" &&\n    str != \"A\" &&\n    str != \"E\" &&\n    str != \"I\" &&\n    str != \"O\" &&\n    str != \"U\"\n  ) {\n    consonant = \"Consonant\";\n  } else {\n    consonant = \"Is not a Consonant\";\n  }\n  return consonant;\n}\n\nconsole.log(checkConsonants(\"j\"));\n",
  "description": "\n## Write a program to check consonant\n\nCheck if a character is a consonant.\n\n```txt\nInput  : b\nOutput : Consonant\n```\n\n---\n",
  "trackId": 1054,
  "lastUpdated": "2023-12-05T18:14:08Z",
  "contributors": [
    "anandfresh",
    "harshraj8843",
    "RiteshK-611",
    "esivakumar26",
    "rksp25",
    "joao-vitor-souza",
    "grraghav120",
    "dtawusaku",
    "sahooankeeta",
    "venkat-siddarth",
    "greeshma-d",
    "kashyap-kumar",
    "DheekshaGopika"
  ],
  "julia": "println(\"Enter a character: \")\nchar = readline()\nvowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\nif char in vowels\n    println(\"Not Consonant\")\nelse\n    println(\"Consonant\")\nend",
  "scala": "object HelloWorld {\n \tdef main(args: Array[String]): Unit = {\n \t  val c = scala.io.StdIn.readChar();\n \t  \n      if(c == 'A' \n      || c == 'E' \n      || c == 'I' \n      || c == 'O' \n      || c == 'U' \n      || c == 'a' \n      || c == 'e' \n      || c == 'i' \n      || c == 'o' \n      || c == 'u') {\n         println(\"Not a Consonant\");\n      } else {\n        println(\"Is a Consonant\")\n      }\n \t}\n }\n",
  "go": "package main\n\nimport \"fmt\"\n\nfunc main() {\n\tvowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n\tvar char string\n\tfmt.Scan(&char)\n\tflag := true\n\tfor _, v := range vowels {\n\t\tif v == char {\n\t\t\tflag = false\n\t\t\tbreak\n\t\t}\n\t}\n\tif flag {\n\t\tfmt.Println(\"Consonant\")\n\t} else {\n\t\tfmt.Println(\"Vowel\")\n\t}\n}",
  "php": "<?php \n\n//Program to check if a given character input is consonant\n$input = readline();\n\n//condtion to check for consonant\nif($input != 'a' &&  $input != 'A' && $input != 'e' && $input != 'i' && $input != 'I' && $input != 'o' && $input != 'O' && $input != 'U' && $input != 'u'){\n    echo(\"Consonant\");\n}else{\n    echo \"Not a Consonant\";\n}\n\n?>",
  "perl": "use experimental 'smartmatch';\nsub checkConsonants{\n  my ($char) = @_;\n  $consonant = \"\";\n  if(lc($char) ~~ ['a', 'e', 'i', 'o', 'u']) {\n    $consonant = \"Is not a Consonant\";\n  } else {\n    $consonant = \"Consonant\";\n  }\n  print $consonant;\n}\n\ncheckConsonants(\"b\");\n",
  "python": "vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\nchar = input().lower()\nif char not in vowels:\n    print(\"Consonant\")\nelse:\n    print(\"Not a Consonant\")\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "java",
    "javascript",
    "kotlin",
    "swift",
    "typescript",
    "julia",
    "scala",
    "go",
    "php",
    "perl",
    "python"
  ]
}