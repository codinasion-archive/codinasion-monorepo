{
  "slug": "convert-feet-to-inches",
  "title": "Convert Feet To Inches",
  "c": "#include <stdio.h>\n\nint main(void) {\n  double feet;  \n  double inches; \n\n\n  printf(\"Enter the number of feet: \");\n  scanf(\"%lf\", &feet);  \n\n \n  inches = feet * 12; \n\n \n  printf(\"%.2lf feet is equal to %.2lf inches.\\n\", feet, inches);\n\n  return 0;\n}",
  "c-plus-plus": "// This programme converts feet to inches.\n#include <bits/stdc++.h>\nusing namespace std;\n\nlong long convertFeetToInch(long long n){\n    long long ans = n*12;\n    return ans;\n}\n\nint main(){\n    long long input;    cin>>input;\n    cout<<convertFeetToInch(input)<<endl;\n    return 0;\n}\n\n/*\nContributed by : Kartikeya Saini\n*/",
  "c-sharp": "using System;\n\nclass MainClass {\n    public static void Main (string[] args) {\n    Console.WriteLine (\"Please enter the feet:\");\n    double feet = Convert.ToDouble(Console.ReadLine());\n    double inches = feet * 12;\n    Console.WriteLine(feet + \" feet is \"+ inches + \" inches\");\n  }\n}\n",
  "f-sharp": "open System\n\nlet main() =\n    Console.Write(\"Enter value in feet: \")\n    let feet = Console.ReadLine()\n    let inches = float feet * 12.0\n    Console.Write(\"{0} feet equals {1} inches\\n\", feet, inches)\nmain()",
  "java": "import java.util.*;\nimport java.io.*;\npublic class Main\n{\n\tpublic static void main(String[] args) {\n\t    System.out.print(\"Please enter the feet value: \");\n\t    Scanner sc=new Scanner(System.in);\n\t    int feet=sc.nextInt();\n\t    int inches = feet*12;\n\t   System.out.print(feet+\" feet is \"+inches+ \" inches\");\n\t\t\n\t}\n}\n",
  "javascript": "let input = prompt(\"Please Enter the foot Value\");\nlet result = parseInt(input) * 12;\nconsole.log(result);\n",
  "kotlin": "fun main() {\n    print(\"Enter Feet : \")\n    println()\n    var input = readLine()\n\n    println(\"$input feet = \" + ConvertFeetToInches(input!!.toDouble()) + \" inches\")\n\n}\n\nprivate fun ConvertFeetToInches(feet: Double): Double {\n    var inches = feet * 12\n    return inches\n}\n",
  "ruby": "puts \"Please enter feet\"\n\nfeet = gets.to_f\ninches = feet * 12\n\nputs inches.round(2).to_s.sub(/\\.?0+$/, '').to_s + \" inches\"",
  "swift": "//Program to convert feet to inches.\nwhile (true) {    \n    print(\"Enter length in feet: \")\nif let feet = Double(readLine()!) {       //checks if the input is a valid number or not. \n    let inches = feet * 12.0              // 1 feet = 12 inches\n    print(\"\\(feet) feet is equal to \\(inches) inches.\")\n    break\n}\nelse {                                    //If the input is not valid, it will ask to input again.\n    print(\"Please enter a valid number.\")\n}\n}",
  "typescript": "const ConvertFeetToInches = (Feet: number): number => {\n  return Feet * 12;\n};\nexport default ConvertFeetToInches;\n",
  "description": "\n## Write a program to convert feet to inches\n\n1 foot = 12 inches\n\n```txt\nInput  : 5\nOutput : 60\n```\n\n---\n",
  "trackId": 5596,
  "lastUpdated": "2023-08-03T20:39:16Z",
  "contributors": [
    "harshraj8843",
    "champati-v",
    "RiteshK-611",
    "jacksonmcafee",
    "Preetiraj3697",
    "esivakumar26",
    "anandfresh",
    "vedantpople4",
    "hi-Kartik2004",
    "sahdev77",
    "hugosmoreira",
    "anafvana",
    "Sttormx"
  ],
  "julia": "println(\"Enter value in feet: \")\nfeet = readline()\nfeet = parse(Int, feet)\ninches = feet * 12\nprintln(feet, \" feet equals \", inches, \" inches\")",
  "scala": "import scala.io.StdIn._;\n\nobject feetToInches {\n  def main(args:Array[String]):Unit={\n    println(\"Enter the feet value : \");\n    var feet = readLine();\n    var inches = feet.toInt * 12;\n    println(feet+\" feet is \"+inches+\" inches\");\n  }\n}\n",
  "dart": "import 'dart:io';\n\nvoid main() {\n  print('Enter value in feets:');\n  String? input = stdin.readLineSync()!;\n  double result = (double.parse(input)) * 12;\n  print(result.toStringAsFixed(2));\n}\n",
  "go": "package main\n\nimport \"fmt\"\n\nfunc feet_to_inches(feet float32) {\n\tinches := feet * 12\n\tfmt.Printf(\"%f inches\",inches)\n    return\n    }\n\nfunc main() {\n\tvar number float32\n\tfmt.Printf(\"Please provide the value in feet: \")\n\tfmt.Scanln(&number)\n\tfeet_to_inches(number)\n}\n",
  "haskell": "module Main where\n\nfeetToInches :: Int -> Int\nfeetToInches i = i * 12\n\nmain :: IO ()\nmain = do\n  -- Read a value from the user\n  putStrLn \"Enter a value in feet:\"\n  feet <- readLn\n  -- Convert the value to inches and print the result\n  let inches = feetToInches feet\n  putStrLn $ show inches ++ \" inches\"\n",
  "php": "<?php \n\nfunction feet2Inches($feet) {\n  return $feet * 12; \n}\n\necho(feet2Inches(5));\n\n?>\n",
  "perl": "print \"Enter the feet value : \";\nmy $inch = <STDIN> ;\n\nmy $res = feet2Inches($inch);\nprint \"Inch conversion for the given feet : $res inches\";\n\nsub feet2Inches\n{\n    my ($x) = @_;\n    my $res = $x * 12;\n    return $res ;   \n}\n",
  "python": "input_value = int(\n    input(\"Please Enter The Number In Feet/Foot To Be Converted in Inches: \")\n)\nmodifier = 12\nvalue_in_inches = input_value * modifier\nprint(f\"{input_value} Feet/Foot is {value_in_inches} Inches\")\n",
  "r": "# Program to convert feet into inches\n# April 22, 2023, Jackson Mcafee, @jacksonmcafee on GH\n# Meant to be run in interactive mode, can be run as non-interactive w/ addition of CLI\n\n# Define function feet_to_inches()\n# Takes parameter of feet (as double), returns inches (as int)\n# as.integer() will round result down\nfeet_to_inches <- function(feet) {\n    return (as.integer(feet * 12))\n}\n\n# Example usage, get user input as numeric and cast as double\nfeet <- readline(prompt=\"Input: \")\nfeet <- as.double(feet)\n\n# Convert user input to inches, then use cat() to print result\ninches <- feet_to_inches(feet)\ncat(\"Output:\", inches, \"\\n\")",
  "rust": "fn main() {\n    // Read the input value\n    let feet: f64 = 5.0;\n\n    // Convert feet to inches\n    let inches = feet * 12.0;\n\n    // Print the result\n    println!(\"{} feet is equal to {} inches\", feet, inches);\n}\n",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "f-sharp",
    "java",
    "javascript",
    "kotlin",
    "ruby",
    "swift",
    "typescript",
    "julia",
    "scala",
    "dart",
    "go",
    "haskell",
    "php",
    "perl",
    "python",
    "r",
    "rust"
  ]
}